"Lobachev readings - 2019" that is, for this x, the Cantor function is not defined. Accordingly, the cantor theorem does not work in this theory, we note that a similar situation is observed for computable real numbers. And a significant difference from the classical theory of sets appears that all many are nothing more than countable. Conclusions: We proposed a variant of building the theory of sets using partial functions of belonging, which allows you to determine the actual numbers similar to the classical theory of sets. A significant difference between this theory and the classical is the accounting of all sets and, accordingly, of all real numbers. In our theory, there are only those real numbers that can be defined, this set will contain in itself as a subset of all computable numbers Comput ABL E ⊂ de F I Nabl E, while both of these sets will be counters. The development of this theory and the correlation of conclusions with reality will be the subject of further research. Literature 1. Robert Andre, Axioms and Set Theory. (2014). 444 C, ISBN 978-0-938485-0-6. 2. A. M. Toring, On Computable Numbers, With An Application to the Entscheidungsproblem, Procedings of the London Mathematical Society. Second Series, Vol. 42 (1936), pp. 230–265. On Countability of Real Numbers A.I. Denisov, A.D. Shevchenko in the Classical Set Theory Real Numbers are uncountable. There is a coulus Subset of Real Numbers Which Corresponds to Computable Numbers. In Practice the IS Only Computable Numbers and Numbers Which Correspond to Some Definition, TheFore We Consider the Question of Formulating A Non-Classical Set Theres Such Real Numbers Will Be Countable. Keywords: Set Theory, Countability, Real Numbers UDC 004.75 Software complex for the distributed performance of engineering and mathematical tasks A.S. Dolgopolov1 1 dolgopolov.work@gmail.com; Kazan (Volga) Federal University in this article discusses the features of the implementation of a distributed multiprocessor system to accelerate the implementation of mathematical, analytical and engineering tasks. Separately identified problems of failure tolerance and safety. The described system can be used both for scientific and commercial purposes. The system is fully implemented and ready for technical operation. A.S. Dolgopolov 75 Keywords: distributed systems, engineering tasks, failure tolerance, security, each engineer sooner or later meets the problem of productivity of the developed software. Sometimes the problem is solved by selecting more effective algorithms, but each program has certain optimization limits. Fortunately, the performance problem can be solved using horizontal scaling, increasing the number of computing devices combined by one network. At the moment, there are many suppliers of cloud services that can provide a cluster of any capacity and complexity. The rental of computing devices is actually much cheaper than the purchase of expensive equipment, but, one way or another, it costs money, albeit small. It is much cheaper to organize a computing network at home or in a computer audience, however, not every engineer will have enough patience, skills and time to build a productive, stable and safe distributed system, and therefore proposed to consider the system developed by the author of the article that allows you to build easily scale Computing network, the functions of which can be determined directly by the engineer himself. The developed system is based on the architecture “Leading-Vedam”, where the host (hereinafter referred to as the master server) and the driven (hereinafter referred to as the Slave server) are full computing devices with their memory, the input system and the processor. The network is organized in such a way that the master server is connected to many slave servers, which, in turn, are engaged in computing. The principle of completing the tasks in the developed distributed system is relatively simple: 1. The task is received by the master server, and then it is divided into subtasks, which are evenly distributed among the Slave servers 2. The Slave server performs the delivered subtasibility and transmit an intermediate result back to the master server. 3. The master server is waiting for all intermediate results and forms the final result. The described computing network has many applications. For example, the system can be used as a means of accelerating engineering calculations, as a platform for organizing a pool mining [1] on the Bitcoin network or to be involved in creating a platform for voluntary calculations. A characteristic feature of the developed system is the possibility of transparent scalability. The system was laid down with the idea that network participants can connect and disconnect from the system at any time