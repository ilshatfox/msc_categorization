  ПРИМЕНЕНИЕ РЕШЕТЧАТОЙ КУБАТУРНОЙ ФОРМУЛЫ К ВЫЧИСЛЕНИЮ ИНТЕГРАЛА  ПО КОНКРЕТНОЙ ОБЛАСТИ1  Е. Л. Банникова  Институт математики с ВЦ УНЦ РАН, г. Уфа  Требуется вычислить интеграл по восьмимерной области, которая представляет собой прямое произведение двух трехмерных шаров радиусов 1 и двух отрезков [0, 1],  Ω = {x|x ∈ R3, |x| 6 1}2 × [0, 1]2. Мы применяем решетчатые кубатурные формулы с ограни ченным пограничным слоем (ОПС-формулы) [1], оптимальные свойства которых теоретически обоснованы [2]. Алгоритм расчета по этим формулам предусматривает вычисление интеграла как суммы локальных интегралов, соответствующих разбиению единицы на области интегрирования, обеспечивающему более простые формы подобластей интегрирования:  I(f) ≡ ∫ dxf(x) ∼= h8  ∑  hk∈Ω  ckf(hk) ≡ K(f),  J∑  j=0  φj(x) ≡ 1 для x ∈ Ω,  I(f) = J∑  j=0  ∫  Ωj  dxφj(x)f(x), ωj = Ω ∩ supp φj .  В работе рассмотрен первый этап решения задачи. На этом этапе вычисляется интеграл с функцией φo = φ, для которой supp φ0 ⊂ int Ω, т. е. интеграл от произведения функции f(x) и срезывающей функции φ(x) ∈ CM0 (Ω), обеспечивающей обращение в нуль произведения φ · f в окрестности границы. Теоретически обосновано, что для этого слагаемого можно положить ck(h) ≡ 1, не нарушив оптимальных свойств алгоритма.  1Работа выполнена при финансовой поддержке РФФИ, проект № 06-0100597, и Программы № 14 Президиума РАН “Высокопроизводительные вычисления и многопроцессорные системы”, раздел 1.12 “Стандартные программы параллельных вычислений модельных задач”  91    Применение решетчатой кубатурной формулы к . . .  Интеграл от произведения приближается следующей формулой: ∫  dxφ(x, ε)f(x) ∼= h8 ∑  hk∈Ω,k∈Z8  φ(hk, ε)f(hk).  Срезывающая функция имеет вид  φ (x, ε) ≡ ψ̂ (x8 ε  ) ψ̂  ( 1 − x8 ε  ) ψ̂ (x7 ε  ) ψ̂  ( 1 − x7 ε  ) ×  × ψ (  1 − (x26 + x25 + x24) ε  ) ψ  ( 1 − (x23 + x22 + x21)  ε  ) ,  где ψ̂(t) = ψ(2t− 1),  ψ(t) =      0, t<0, ∫ t  0  dτ [τ(1 − τ)]M/ ∫ 1  0  dτ [τ(1 − τ)]M , 0<t<1,  1, t>1,  M — порядок гладкости функции f(x). Для вычисления интеграла  ∫ Ω φ0(x)f(x)dx написана програм ма на языке C++ c использованием библиотеки параллельных функций MPI. В качестве параметров задавались: подынтегральная функция f(x); параметр гладкости M ; толщина ε пограничного слоя; количествоN точек решетки на ребре единичного куба.  Для выяснения качественных характеристик вычислительного алгоритма (точности расчетов, объема вычислительной работы и времени счета) программа была протестирована на многопроцессорном компьютере МВС-15000 Межведомственного суперкомпьютерного центра РАН. МВС-15000 имеет 922 одновременно работающих процессора с распределенной, то есть отдельной для каждого двухпроцессорного модуля, памятью. Мы использовали 600 процессоров. Неизменными параметрами оставались M = 3, ε = 1/3, изменялись шаг решетки и количество процессоров.  В табл. 1 приведены результаты вычисления интеграла по заданной области от произведения срезывающей функции на функцию f(x) = 1.  92    Е. Л. Банникова  Таблица 1  h ∫ Ω φ0(x)f(x)dx Число Время счета  процессоров (сек) 1/7 2,990442 100 24 1/10 2,546245 600 63 1/12 2,546504 600 253  Функция f(x)=1 была выбрана потому, что этот интеграл легко вычислить вручную и тем самым проверить точность результата вычисления программы. Точный результат равен 2, 54695+ +O(10−5), и из таблицы видно, что была достигнута точность 10−3, а при уменьшении шага решетки h точность увеличивается. Также важной характеристикой программы является время счета, которое должно быть минимальным. Из расчетных данных видно, что при увеличении количества N точек решетки на 2 время счета увеличивается в 4 раза, а точность при этом существенно не изменяется. Это связано с тем, что рассматриваемая область Ω большой размерности, и небольшое уменьшение шага h влечет существенное увеличение времени, поэтому достаточно ограничиться N = 10.  В табл. 2 приведены результаты тестирования программы на функции f(x) = (x1x2)  2 + (x3x4) 2 + (x5x6)  2 + (x7x8) 2 + 1. Здесь о  точности вычислений можем судить по устойчивости десятичных знаков после запятой. Сравнение h = 1/10 и h = 1/12 показывает точность O(10−3).  Таблица 2  h ∫ Ω φ0(x)f(x)dx Число Время счета  процессоров (сек) 1/7 3,420291227 100 29 1/10 2,907349766 600 73 1/12 2,909396611 600 296  В табл. 3 приведены результаты работы программы для функции f(x) = cos((x1 + 1)x2(x3 − 1)(x4 + 1)x6(x7 + 1)x8).  93   