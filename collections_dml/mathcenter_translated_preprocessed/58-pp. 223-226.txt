places deep convolutional networks for places detection f p b dossou 1 1 femipancrace dossou gmail com kazan federal unirersity the geolocation services thanks to the precious tool called gps are nowadays very present and important in our daily life activities taxi ordering place tagging address finding etc however this identification is not always easy because it strongly depends on the activation of this gps services on the user s phone settings and also a good internet connection to ensure high efficiency and accuracy in determining the geographical location coordinates of the user in recent years with the dazzling advance of artificial intelligence the human being has been able to achieve excellent and unimaginable progresses this research paper introduces bd 97 places an ongoing research project to develop a powerful artificial intelligence system for places detection and gps services helper using deep convolutional neural networks keywords places detection convolutional neural networks artificial intelligence deep learning introduction to bd 97 places our current task is a computer vision task because we have to teach our artificial neural network how to analyze a picture and how to be able to identify probable places where the picture has been taken as we humans could simply do by using our memory and our eyes for that convolutional neural networks architecture has been preferred and used since they are able to successfully establish dependencies between patterns in the image through the use of appropriate filters the proposed model is called bd 97 places and at the currently is made of two convolutional layers with precised numbers of filters bd 97 places architecture the input to bd 97 places is a picture in order to get good results from our model we applied some preliminary transformations to the input data firstly we resized the picture at the input because we needed to get it shaped so that the model could efficiently extract very important properties from them we get another array that contains numbers each of which respectively characterizes each pixel of the input this last array that we got is a matrix where height is the number of rows and width is the number of columns along the input image we have a third axis called the channel axis which corresponds to the rgb red green blue values of the image while performing transformations on the input data the data along that third axis can be easily compressed in quality and as a result we could most likely get very poor data quality in order to maintain good data quality as in the input data we performed the zero padding operation it consists in adding the maximum possible number of zeros along all axes of our input data matrix after the zero padding the input data is sent to convolutional layers where the model start filtering the input data the filtration is performed by taking each of the submatrices with a predetermined size and multiply by the filter matrix to obtain a convoluted matrix of features these submatrices are called kernels and 224 2019 their size is called kernel s size however instead of multiplying each elementary single submatrix by the filter matrices we can specifically decide which submatrices we need this is possible thanks to the stride the stride is the distance between each linear pattern along the axes for example stride 2 means that we must go from 2 rows and 2 columns along the axes of our pixel array moving from one kernel to another by default its value is 1 the convoluted matrix of features is the result of the input through the filter obtained after performing multiplication between the kernel and the filter matrix taking into account the value of the stride parameter if w is the width of the input image the number of columns of the array of our input image h is the height of the input image the number of lines of the array of our input image d is the input depth that determines the size of the axes of the channels here the size is 3 since we are working on the rgb system f kernel size s stride k number of filters p size of the zero padding then the output size will be w h d where w w f 2 p s 1 h h f 2 p s 1 the convoluted matrix of features needs to be passed through an activation function which gives an array essentially characterizing abstract patterns of the input data with pixels there are many activation functions but in the structure of our model we used relu and softmax as activation functions by definition relu function is a semi linear function with saturation which has been proven to give very good experimental results relu is simply defined as f x max 0 x and the softmax function also known as the normalized exponential function calculates the probability distribution of an event over n different events in this case the events here are the diff