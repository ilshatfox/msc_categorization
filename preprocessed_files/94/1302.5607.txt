distributed community detection in dynamic graphs andrea clementi 1 miriam di ianni 1 giorgio gambosi 1 emanuele natale 2 and riccardo silvestri 3 1 universita tor vergata di roma lastname mat uniroma 2 it 2 master degree student universita tor vergata di roma emanatale gmail com 3 sapienza universita di roma silvestri di uniroma 1 it june 11 2013 abstract inspired by the increasing interest in self organizing social opportunistic networks we investigate the problem of distributed detection of unknown communities in dynamic random graphs as a formal framework we consider the dynamic version of the well studied planted bisection model dyn g n p q where the node set n of the network is partitioned into two unknown communities and at every time step each possible edge u v is active with probability p if both nodes belong to the same community while it is active with probability q with q p otherwise we also consider a time markovian generalization of this model we propose a distributed protocol based on the popular label propagation algorithm and prove that when the ratio p q is larger than nb for an arbitrarily small constant b 0 the protocol finds the right planted partition in o log n time even when the snapshots of the dynamic graph are sparse and disconnected i e in the case p 1 n keywords distributed computing dynamic graphs social opportunistic networks 1 introduction community detection in complex networks has recently attracted wide attention in several research areas such as social networks communication networks biological systems 19 17 the general notion of community refers to the fact that nodes tend to form clusters which are more densely interconnected relatively to the rest of the network understanding the community structure of a complex network is a challenging crucial issue in several applications good surveys on this topic can be found in 4 14 34 for instance in biological networks it is widely believed that modular structures plays an important role in biological functions 37 while in online social networks such as facebook community detection is vital for the design of related applications devising business strategies and may even have direct implications on the design of the network themselves 28 18 a modern application scenario the one this paper is inspired from is that of opportunistic networks where recent studies show that social aware protocols provides efficient solutions for basic communication tasks 9 39 40 partially supported by the italian national project cofin prin 2010 11 ars technomedia algoritmica per le reti sociali tecno mediate 1 ar x iv 1 30 2 56 07 v 2 cs s i 8 j un 2 01 3 the static planted bisection model 5 7 15 or stochastic blockmodel as it is known in the statistics community 21 38 is a popular framework to formalize the problem of detecting communities in random graphs the static planted bisection model centralized algorithms the static planted bisection model is defined as a static random graph g n p q with p q 0 1 such that q p where the node subset n 1 2 n is partitioned into two equal sized unknown communities v 1 and v 2 and each possible edge u v is included with probability p if u and v both belong to the same community while it is included with probability q otherwise 1 the goal here is to identify the unknown partition dyer and frieze 15 show that if p q then the minimum edge bisection is the one that separates the two classes and then they derive an algorithm working in o n 3 expected time this bound has been then improved to o n 2 for arbitrarily small by jerrum and sorkin 23 for some range of p and q by using simulated annealing further improvements were obtained by condon and karp 13 that show a linear time algorithm for dense graphs and more recently by mossel et al 31 that provide an efficient algorithm and some impossibility result for sparse graphs we emphasize that all the above algorithms are based on centralized expensive procedures such as simulated annealing and spectral graph computations all of them require the full knowledge of the graph adjacency matrix and moreover they work on static graphs only community detection in opportunistic networks recent studies in opportunistic networks fo cus on the impact of the agent social behavior on some basic communication tasks such as routing and broadcasting 9 39 40 recently this issue has been investigated in an emerging class of opportunistic networks called intermittently connected mobile networks icmns 42 such networks are character ized by wireless links representing opportunities for exchanging data that sporadically appear among network nodes usually mobile radio devices so called social aware communication protocols rely on the reasonable intuition that since mobile devices are carried by people who tend to form communities members i e nodes of the same community are used to communicate with each other much more often than nodes from different communities experiments on real data sets have widely shown that identifying communities can strongly help in improving the protocol performances 9 39 40 it thus follows that community detection in icmns is a crucial issue as observed above several centralized community detection methods have been proposed in the literature that may result useful for offline data analysis of mobile traces however it is a common belief that next future technologies will yield a dramatic growth of self organizing icmns where the network protocols work without relying on any centralized server in this new communication paradigm it is required that community detection is performed in a fully distributed way it turns out that the above discussed centralized algorithms are not suitable for community detection in self organizing dynamic networks such as icmns to this aim in this paper we consider an algorithmic solution to community detection in icmns that relies on the epidemic mechanism known as label propagation algorithms 2 26 27 36 this method will be discussed later in the introduction the dynamic planted bisection model in order to capture the high dynamicity of icmns we consider the natural dynamic version of the g n p q model a dynamic graph is a probabilistic process that describes a graph whose topology changes with time so it can be represented by a sequence g gt n et t n of graphs with the same set v n of nodes where gt is the snapshot of the dynamic graph at time step t the dynamic version of the planted bisection model denoted as dyn g n p q consists of a dynamic graph where n is the number of nodes while p p n and q q n are the edge probability functions 1 observe that when p q the random graph model is the well known erdo s re nyi model 2 at every time step t each edge u v is included in et with probability p if both u and v belong to the same community vi i 1 2 while it is included with probability q otherwise this model can also be seen as a non homogeneous version of the dynamic erdo s re nyi graph model 1 9 so the dynamic state on off of an edge over the time is a random variable having bernoully distribution with parameter p or q respectively this model clearly assumes important simplifications that may impact several properties of real opportunistic networks for instance we have assumed that contacts between nodes follow bernoulli processes so the distribution of time between two contacts of a pair of nodes follows an exponential law previous experiments have shown that this assumption holds only at the timescale of days and weeks 9 24 however in 10 experimental validations have shown that some real icmns e g those studied in the haggle project 9 and in the mit reality mining project 16 exhibit some crucial connectivity properties such as hop diameter which are well approximated by sparse dynamic erdo s re nyi graphs a strong simplifying assumption in the dynamic erdo s re nyi graph model is time independence the graph topology at time t is fully independent from the topology at time t 1 edge markovian evolving graphs in short edge meg were first introduced in 11 as a generalization of the dynamic erdo s re nyi graph model that captures the strong dependence between the existence of an edge at a given time step and its existence at the previous time step an edge meg is a dynamic random graph g n p p e 0 gt n et t n defined as follows starting from an initial random edge set e 0 at every time step every edge changes its state existing or not according to a two state markovian process with probabilities p and p if an edge exists at time t then at time t 1 it disappears with probability p if instead the edge does not exist at time t then it will come up at time t 1 with probability p we observe that the setting p 1 p yields a sequence of independent erdo s re nyi random graphs i e dynamic erdo s re nyi graphs with edge probability p p edge megs have been adopted as concrete models for several real dynamic networks such as faulty networks 12 peer to peer systems 41 mobile ad hoc networks 41 and vehicular networks 29 furthermore edge megs have been considered by whitbeck et al 42 as a concrete model for analyzing the performance of epidemic routing on sparse icmns and the obtained theoretical results have been also validated over real trace data such as the rollernet traces 40 in this paper we consider the edge meg as a mathematical model for icmns the dynamic planted bisection model can be easily generalized in order to include edge megs here we have two edge probability parameter pairs p p and q q between two nodes u and v depending on whether they both belong to the same community or not so if both u and v belongs to the same community then the edge u v is governed by the 2 state markov chain with parameters p p otherwise the edge is governed by the 2 state markov chain with parameter q q we assume that q p and according to the parameter tuning performed in 42 it turns out that the best fitting to real scenarios is achieved by setting p and q as absolute constants this is mainly due to the fact that once a connection comes up its expected life time does not depend on the size of the network 42 the algorithmic goal in the dyn g n p q model is to design a fully distributed protocol that com putes a good node labeling for the dynamic graph g we say that a function z v 1 2 is a good labeling for g if z labels each community with a different label i k 1 2 u vi v vk z u z v i k nodes are entities that share a global clock this is reasonable in opportunistic networks by assuming each node to be equipped by a gps and know a good approximation of the number n of nodes but it is not required they have distinct ids initially each node does not know anything about its own community and it is not able to distinguish the community of its neighbors at every time step every node can exchange information with its current neighbors 3 in 22 some greedy protocols are tested on specific sets of real mobility trace datas by running such protocols every node constructs and updates its own community list according to the length and the rate of the contacts observed so far by itself and by the nodes it meets so the protocol exploits the intuition that communities are formed by nodes that use to meet each other often and for a long time however no analytical result is given for such heuristics that moreover require nodes to often update and transmit relatively large lists of node ids during all the process the resulting overhead may be too heavy in several opportunistic networks such as icmns label propagation algorithms a well studied community detection strategy is the one known as label propagation algorithms lpa 36 this strategy is based on a simple epidemic mechanism which can be efficiently implemented in a fully distributed fashion since it requires easy local computations it is thus very suitable for opportunistic networks such as icmns in its basic version some distinct labels are initially assigned to a subset of nodes at every step each node updates its label if any by choosing the label which most of its current neighbors have the majority label if there are multiple majority labels one label is chosen randomly clearly the goal of the protocol is to converge to a good labeling for dyn g n p q despite the simplicity of lpa based protocols very few analytical results are known on their perfor mance over relevant classes of graphs it seems hard to derive from empirical results any fundamental conclusions about lpa behavior even on specific families of graphs 25 one reason for this hardness is that despite its simplicity even on simple graphs lpa can have complex behavior not far from epidemic processes such as the spread of disease in an interacting population 33 several versions of lpa based protocols have been tested on a wide range of social networks 2 8 27 26 36 such works experimentally show that lpa based protocols work quite efficiently and are effective in providing almost good labeling based on extensive simulations raghavan et al 36 and leung et al 26 empirically show that the average convergence time of the synchronous lpa based protocols is bounded by some logarithmic function on n clearly the goal of the protocol is to converge to a good labeling for dyn g n p q despite the simplicity of lpa based protocols very few analytical results are known on their performance over relevant classes of graphs as observed in 25 it seems hard to derive from empirical results any fundamental conclusions about lpa behavior even on specific families of graphs recently cordasco and gargano provided a semi synchronous version of the lpa based protocol and formally prove that it guarantees finite convergence time on any static graph in 25 an lpa based protocol has been analyzed on the planted partition model for highly dense topologies in particular their analysis considers the static model g n p q with p 1 n 1 4 and q o p 2 observe that in this case there are w h p highly inter connected communities having constant diameter and a relatively small cut among them in this very restricted case they show the protocol converges in constant expected time and conjectured a logarithmic bound for sparse topologies in general providing analytical bounds on the convergence time of lpa based protocols over relevant classes of networks is an important open question that has been proposed in several papers arising from different areas 2 8 25 26 36 our algorithmic contribution we provide an efficient distributed lpa based protocol on the dynamic planted bisection model dyn g n p q with arbitrary p 0 and q o p nb where b 0 is any arbitrarily small constant our protocol yields with high probability 2 in short w h p a good labeling in o max log n logn pn time the bound is tight for any p o 1 n while it is only a logarithmic factor larger than the optimum for the rest of the parameter range i e for more dense topologies for the first time we thus formally prove a logarithmic bound on the convergence time of an lpa based 2 as usual we say an event holds with high probability if it holds with probability at least 1 1 n 1 4 protocol on a class of sparse and disconnected dynamic random graphs i e for p 1 n the local labeling rule adopted by the protocol is simple and requires no node ids the only exchanged informations are the labels our protocol can be easily adapted in order to construct a good labeling in the presence of a larger number of equal sized communities provided that this number is an absolute constant and more importantly it also works for the edge meg model g n p p q q e 0 in the parameter range q o p n b where b is any positive constant in the latter model the completion time is w h p bounded by o m max log n log n p n where m is a bound on the mixing time of the two 2 state markov chains governing the edges of the dynamic graph it is known that see for example 11 m o max 1 p p 1 q q log n observe that when p and q are some arbitrary positive constants and p 1 n this case includes the realistic range derived in 42 then m o log n and the bound on the completion time becomes o log 2 n this bound is only a logarithmic factor larger than the optimal labeling time in the case of sparse topologies i e when p 1 n we run our protocol over hundreds of random instances according to the dyn g n p q model with n varying from 103 to 106 besides a good validation of our asymptotical analysis the experiments show further positive features of the protocol our protocol is indeed tolerant to non homogeneous edge probability functions in particular the protocol almost always returns a good labeling in bernoullian graphs where the edge probability is not uniform i e for each pair u v of nodes in the same community the parameter pu v is suitably chosen in order to yield irregular sparse graphs a detailed description of the experimental results can be found in the appendix section b 1 1 a restricted setting overview let us consider the dynamic graph dyn g n p q and for the sake of clarity we first assume the following restrictions hold the parameter p is known by every node there are only 2 communities v 1 and v 2 each of size n 2 n is an even number the labeling process starts with exactly two source nodes s 1 v 1 that is labeled by z 1 and s 2 v 2 that is labeled by z 2 with z 1 6 z 2 the parameters p and q belong to the following ranges 1 n 6 p 6 d log n n and q o p nb for some constants d 0 and b 0 1 such restricions make the description easier thus allowing us to focus on the main ideas of our protocol and of its analysis then in subsection 3 and in the appendix we will show how to remove the above assumptions in order to prove the general result stated in the introduction the protocol relies on the simple and natural properties of lpa starting from two source nodes one in each community each one having a different label the protocol performs a label spreading by adopting a simple labeling broadcasting rule for instance every node gets the label it sees most frequently in its neighbors since links between nodes of the same community are much more frequent than the other ones we can argue that the good labeling will be faster than the bad labeling in each community the good labeling is the one from the source of the community while the bad labeling is the one coming from the other source 5 however providing a rigorous analysis of the above process requires to cope with some non trivial probabilistic issues that have not been considered in the analysis of information spreading in dynamic graphs made in previous papers 3 11 12 let us consider any local labeling rule that depends on the label configuration of the dynamic neighborhood of the node only at a given time step there is a subset ic n of labeled nodes and we need to evaluate the probabilities pg pb that a non labeled node gets a good bad label in the next step after an initial phase there is a non negligible probability that some nodes will get the bad label then such nodes will start a spreading of the bad labeling at the same rate of the good one observe also that good labeled nodes may wrongly change their state as well so differently from a standard single source broadcast the epidemic process is not monotone with respect to good labeling it turns out that the probabilities pg and pb strongly depend on the label balance between the sizes of the subsets of well labeled nodes and of the badly labeled ones in the two communities keeping a tight balance between such values during all the process is the main technical goal of the protocol in arbitrary label configurations over sparse graph snapshots getting high probability bounds on the rate of new well badly labeled nodes is a non trivial issue indeed it is not hard to show that given any two nodes v w n ic the events v will be well badly labeled and w will be well badly labeled are not independent as we will see such issues are already present in the restricted case considered in this section a first important step of our approach is to describe the combination between the labeling process and the dynamic graph as a finite state markovian process then we perform a step by step analysis focusing on the probability that the markovian process visits a sequence of states having good balance properties our protocol applies local rules depending on the current node s neighborhood and on the current time step only the protocol execution over the dynamic graph can be represented by the following markovian process for any time step t we denote as k t 1 k t 2 h t 1 h t 2 et the state reached by the markovian process where k t i denotes the number of nodes in the i th community labeled by label zi at time step t and h t i denotes the number of nodes in the i th community labeled by label zj at time step t for i j 1 2 and j 6 i in particular the markovian process works as follows k t 1 k t 2 h t 1 h t 2 et dyn g n p q k t 1 k t 2 h t 1 h t 2 et 1 protocol protocol k t 1 1 k t 1 2 h t 1 1 h t 1 2 et 1 dyn g n p q the main advantage of this description is the following observe the process in any fixed state and consider the set of nodes u still having no label then it is not hard to verify that in the next time step the events node v gets a good bad label v u are mutually independent this will allow us to prove strong concentration bounds on the label balance discussed above for a sufficiently long sequence of states visited by the markovian process thus getting a large fraction of well labeled nodes in each community within a short time this corresponds to a first protocol stage called fast spreading of the good labels unfortunately this independence property does not hold among labeled nodes of the same commu nity let s see why in the next simple scenario assume that the rule is the majority one consider two nodes u and v having the same label z at time t and assume the event e node u will keep label z at time t 1 holds then the event u v et e is more likely and thus according to the majority rule the event v gets label z e is more likely as well this clearly shows a key depencence in the label spreading 6 in order to overcome this issue our protocol allows every node to change its first label updating rule only after a spreading stage of suitable length we will see later this stage is in fact formed by 3 consecutive phases we can thus analyze the spreading of the good labeling only on the current set of unlabeled nodes where stochastic independence holds and prove that the process reaches a state with a large number of well labeled nodes after this spreading stage labeled nodes have to start to update their labels according to some simple rule that will be discussed later we prove that this saturation phase has logarithmic convergence time by providing a simple and efficient method to cope with the above discussed stochastic dependence 2 a restricted setting formal description the protocol works in 5 consecutive temporal phases the goal of this phase partition is to control the rate of new labeled nodes as function of the expected values reached by the random variables r v s k t i h t i at the end of each phase indeed when such expected values reach some specific thresh olds the protocol and or its analysis must change accordingly in order to keep the label configuration well balanced in the two communities during all the process and to manage the stochastic depencence described above at any time step t we denote for each node v vi the number of zi labeled neighbors of v as nvi t for i 1 2 given a node v v the set of its neighbors at time t will be denoted as t v for the sake of brevity whenever possible we will omit the parameter t in the above variables and in the proofs we will only analyze the labeling in v 1 the analysis for v 2 being the same stage i spreading phase 1 source labeling the phase runs for 1 c 1 log n time steps where c 1 0 is an explicit constant that will be fixed later in this phase only the neighbors of the sources will decide their label the goal is to reach a state such that w h p ki log n and hi 0 i 1 2 for any non source node v the labeling rule is the following let i 1 2 v gets label zi if there is a time step t 1 such that si t v and for j 6 i and for all t such that 1 6 t 6 1 it holds that sj t v in all other cases v remains unlabeled in app d 1 we will show that at the end of this phase a node gets the good label with probability p 1 and w h p no node will get the bad label from this fact we can prove the following theorem 1 let d 1 0 be any sufficiently large constant then a constant c 1 0 can be fixed so that at time step 1 c 1 log n the markovian process w h p reaches a state such that k 1 1 k 1 2 d 1 16 pn log n 4 d 1 pn log n and h 1 1 h 1 2 0 2 phase 2 fast labeling i this phase of the protocol aims to get an exponential rate of the good labeling inside every community in order to reach in 2 o log n steps a state such that the number of well labeled nodes is bounded by some root of n and the number of badly labeled ones is still 0 differently from phase 1 unlabeled nodes can get a label at every time step according to the following rule for 1 t 1 2 at time step t of phase 2 every unlabeled node v 7 gets label z 1 at time t 1 iff nv 1 t 0 and n v 2 t 0 gets label z 2 at time t 1 iff nv 2 t 0 and n v 1 t 0 remains unlabeled at time t 1 otherwise in the next theorem we assume that at time step 1 i e at the end of phase 1 the markovian process reaches a state satisfying cond 2 in particular we assume that k 1 i k 1 i where k 1 i d 1 16 pn log n thanks to theorem 1 this event holds w h p in what follows we will make use of the following function f n k 2 max log n k polylogn n 1 a at the end of phase 2 we can prove the process w h p satisfies the following properties theorem 2 for any 0 constants a and can be fixed so that at the final step of phase 2 2 1 log 1 np 2 log na log 3 n log 1 1 np 2 1 f n k 1 1 log log 3 n k 1 1 1 it holds w h p that for i 1 2 na 6 k 2 i 6 n a log n and h 2 i 0 3 idea of the proof see app d 2 for the proof for each time step t let x and y be the number of new nodes that get respectively the good and the bad label in v 1 at time step t 1 we will prove the following key fact if ki o n a i 1 2 for some constant a 1 then it holds w h p x 1 o 1 pn 2 k 1 and y 0 the same holds for v 2 from such bounds we can derive the recursive equations for k t i yielding the bounds stated in the theorem phase 3 fast labeling ii in this phase nodes apply the same rule of phase 2 but we need to separate the analysis from the previous one since when the well labeled subset gets size larger than some root of n we cannot anymore exploit the fact that the bad labeling is w h p not started yet i e h 0 however we will show that when the well labeled sets get size n polylogn the bad labeled sets have still size bounded by some root of n we assume that at the end of phase 2 the markovian process reaches a state satysfying cond 3 of theorem 2 theorem 3 for any constant 0 constants a 1 1 and 0 can be fixed so that at the final time step of phase 3 3 1 log 1 np 2 log n 1 a log 3 n 2 for i 1 2 it holds w h p that n log 3 n 6 k 3 i 6 n log 3 n and h 3 i 6 n a 1 4 idea of the proof see app d 3 for the proof let x and y be the r v s defined in the proof of theorem 3 the presence of the bad labeling changes the bounds we obtain as follows at time step t 1 as long as ki hi o n polylogn we will prove that x 1 o 1 pn 2 k 1 and y 1 o 1 ph 1 qk 2 n 2 from the above bounds we will determine two time recursive bounds on the r v kti and h t i that hold 8 w h p for any t s t kti h t i o n polylogn then thanks to the hypothesis q o p n b and to the fact that the markovian process starts phase 3 from a very unbalanced state ki n a and hi 0 we apply the recursive bounds and show that a time step 3 exists satysfying eq 4 theorems 2 and 3 guarantee a very tight range for the r v k 1 and k 2 at the final step of phase 2 and 3 respectively as we will see later this tight balance is crucial for removing the hypothesis on the existence of the two leaders stage ii saturation phase 4 controlled saturation at the end of phase 3 the markovian process w h p reaches a state that satisfies the properties stated in theorem 3 the goal of phase 4 is to obtain a large constant fraction say 3 4 of the nodes of each community that get the good label and at the same time to ensure that the number of bad labeled nodes is still bounded by some root of n we cannot guarantee this goal by applying the same labeling rule of the previous phase the number of bad labeled nodes would increase too fast the protocol thus performs a much weaker labeling rule that is enough for the good labeling while keeping the final number of bad labeled nodes bounded by some root of n the fourth phase consists of three consecutive identical time windows during which every labeled or not node v v applies the following simple rule time window of phase 4 for any t 1 t 4 c 4 log n v looks at the labels of its neighbors at time t and if v sees only one label say z for all the window time steps then v gets label z in all the other cases either v sees more labels or v does not see any label v either keeps its label if any or it remains unlabeled remark observe that departing from the previous phases we now need to analyze the label spreading of the above rule over nodes having previously assigned labels this rises the following stochastic dependence the analysis of the previous phases relies on the independence of the random variables r v s that correspond to the events u gets label zi for every label i and every u in a fixed community v let s enumerate such r v s as xu u v given a node u and a set of nodes s e u s denotes the set of edges from u to any node in s the r v xu depends on the edges incident to u so for any pair u v we can write xu xu u v e u v v e u v v and xv xv v u e v v u e v v v since in our undirected graph model u v equals v u then xu and xv share the argument u v this clearly yield stochastic dependence between them see fig 1 however if the graph of v is made directed they become functions of disjoint sets of edges therefore x 1 x v become mutually independent in order to make our graph directed the nodes run a simple procedure link proc at the very beginning of every step this procedure simulates a virtual dyn g n p q where the edges inside each community v are generated according to a directed gn 2 p model where p 1 1 p moreover the procedure makes the resulting probability of the edges between communities still bounded by o q it thus preserves the polynomial gap between p and q the proofs of these facts are given in app d 4 procedure link proc 1 each node u for each neighbor v generates a pair mu v cu v where mu v is a an integer randomly sampled from n 3 and cu v is 1 or 1 each with probability 1 p 1 p p and 0 with probability 1 1 p 2 p 2 u sends this pair to v so it receives from v the pair mv u cv u 3 if mu v mv u then u defines du v cu v otherwise if mu v mv u then du v cv u 9 4 finally v is a directed neighbor of u iff du v 6 1 observe that we can neglect the event mu v mv u since its probability is 1 n 3 if this happens we assume that both nodes virtually remove each other from their own neighborhood in the sequel we implicitly assume that nodes apply procedure link proc and the protocol window of phase 4 is repeated 3 times for a specific setting of the constant c 4 that will be determined in the proof of theorem 4 thanks to theorem 3 we can assume that the markovian process w h p terminates phase 3 reaching a state that satisfies eq 4 the proof of the next theorem is given in app d 5 theorem 4 let be any constant such that 0 1 then constants c 4 and a 1 1 can be fixed so that at time step 4 3 3 t 4 the markovian process w h p reaches a state such that for i 1 2 k 4 i n and h 4 i 6 n a 1 polylogn 5 phase 5 majority rule theorem 4 states that at the end of phase 4 the markovian process w h p reaches a state where a large constant fraction of the nodes say 3 4 in both communities is well labeled while only o na 1 polylogn nodes are bad labeled we now show that a further final phase where nodes apply a simple majority rule yields the good labeling w h p remind that every node also applies procedure link proc shown in the previous phase every node v v applies the following labeling rule for every t 1 t 5 c 5 log n every node v observes the labels of its neighbors at time t and for every label zi i 1 2 v computes the number f t i of its neighbors labeled with zi then node v gets label z 1 if t 1 5 f t 1 t 1 5 f t 2 otherwise v gets label z 2 break ties arbitrarily let us assume the markovian process starts phase 5 from a state satisfying eq 5 say with constant 3 4 the proof of the next theorem is given in app d 6 theorem 5 a constant c 5 0 can be fixed so that at time 5 4 c 5 log n every node of each community is well labeled w h p overall completion time of the protocol and its optimality when p and q satisfy cond 1 we have shown that every phase has length o log n the protocol has thus an overall completion time o log n in appendix a we will show that for p o 1 n the length of each phase must be stretched to logn pn it is easy to verify that if p o 1 n starting from the initial random snapshot there is a non negligible probability that some node will be isolated for n time steps where n is any increasing function such that o logn pn this implies that in the above range our protocol has optimal completion time 3 the general setting removing the presence of the two source nodes so far we have assumed that in the initial state of the labeling process there are exactly two source nodes one in each community which are labeled with different labels this assumption can be removed by introducing a preliminary phase in which a randomized source election is performed and by some further changes that are described below 10 in the first step every node by an independent random choice becomes a source with probability d logn n for a suitable constant d 0 this clearly guarantees that in every community there are w h p log n sources then every source si randomly chooses a label zi n 2 this implies that the minimal label z 1 in the first community and the minimal label z 2 in the second community are different w h p let a and b be the number of sources chosen in v 1 and v 2 respectively and define a b we summarize the above arguments in the following fact 1 two positive constants 1 2 exist such that at the end of the first step w h p it holds that 1 log n 6 a b 6 2 log n and z 1 6 z 2 the generic state of the modified markovian process is represented by the following set of r v s 1 2 k 1 1 k 1 a h 1 1 h 1 b k 2 1 k 2 b h 2 1 h 2 a where kij equals the number of nodes in vi labeled by the same good label as the jth source of vi while hij equals the number of nodes in vi labeled by the same bad label as the jth source of vr with r 6 i at every time step t for any v n we define the r v nvj t as the the number of v neighbors labeled with label zj at time t the first three phases of the protocol are identical to the 2 source case since the impact of the presence of an o log n labels in each of the two communities remains negligible till the overall number of labeled nodes in each community is o n log 4 n by applying the same analysis of the 2 source case at the end of phase 3 we can thus show that the markovian process w h p reaches a state having similar properties to those stated in theorem 3 we remind that p and q belong to the ranges in cond 1 theorem 6 we can choose a suitable 3 2 c 3 o 1 log n so that at the end of phase 3 the markovian process w h p reaches a state in which for 1 2 it holds j a n log 4 n 6 k j 6 n log 4 n i b h i n polylogn where is a constant that can be made arbitrarily small we need to stop at a saturation size o n log 4 n for every good label since we want to guarantee w h p that the minimal label infects at least n polylogn nodes then as in the 2 source case the protocol starts a controlled saturation phase i e phase 4 that consists of at most 4 consecutive time windows in which every node applies the same following minimal label rule for t 1 to t 4 c 4 log n time steps v observes the labels of its neighbors and gets the minimal label z among all the observed labels thanks to the above rule the size of the nodes labeled by the minimal good label increases by a logarithmic factor at the end of each of the four windows this fact can be proved by using the same arguments of the proof of theorem 4 it thus follows that at the end of phase 4 the number of nodes labeled with the good minimal label is at least a constant say 3 4 fraction of all the nodes of the community then as in the 2 source case every node can apply the majority rule in order to get the right label w h p the case p unknown our protocol relies on the fact that nodes know the parameter p d n the length of the protocol s phases are functions of p so an interesting issue is to consider the scenario where nodes do not know the parameter p i e the expected degree thanks to edge independence 11 the dynamic random graph process can be seen by every node as an independent sequence of random samples indeed at every time step t every node can store the number nv t of its neighbors and it knows that this number has been selected by n 1 independent experiments according to the same bernoulli distribution with success probability p d n the goal is thus to use such samples in order to get a good approximation of p if p 1 n by using a standard statistical argument every node w h p will get the value of p up to some negligible factor in o log n time let s see this task more formally for c log n time steps where c is a constant that will be fixed later every node stores the values nv 1 nv 2 nv c log n then it computes s nv 1 nv c log n since s is the sum of c log n n 1 bernoulli r v s of parameter d n we get a binomial distribution with mean e s dc log n 1 1 n then every node uses the estimator d s s c logn 1 1 n to guess d we can use the chernoff bound in order to determine a confidence interval for d s as follows p d d s d s p s e s c log n n 1 n e s c log n n 1 n p s e s 1 d p s e s 1 d e 2 2 d 2 e s e 2 3 d 2 e s 4 1 nc 2 3 d it thus follows that for any d 1 we can choose d and c sufficiently large in order to get a good confidence interval for all nodes of the network this obtained approximation suffices to perform an analysis of the protocol which is equivalent to that of the case p known more communities the presence of a constant number r 1 of unknown equally sized com munities can be managed with a similar method to that described above for removing the presence of leaders indeed the major issue to cope with is the presence of a constant number of different label spreadings in each community and the protocol must select the right one in every community however if r is a constant and the number of nodes in each community is some constant fraction of n then the impact of the presence of o log n labels in each of the r communities remains negligible till the overall number of labeled nodes in each community is o n log 4 n as in the previous paragraph by first ap plying the minimal label rule and then the majority one the modified protocol returns a good labeling w h p due to lack of space the protocol analysis in the edge meg model is given in appendix 4 conclusions this paper introduces a framework that allows an analytical study of the distributed community detection problem in dynamic graphs then it shows an efficient algorithmic solution in two classes of such graphs that model some features of opportunistic networks such as icmns we believe that the problem deserves to be studied in other classes of dynamic graphs that may capture further relevant features of social opportunistic networks such as geometric constraints acknowledgements we thank stefano leucci for its help in getting an efficient protocol simulation over large random graphs 12 references 1 chen avin michal koucky and zvi lotker how to explore a fast changing world cover time of a simple random walk on evolving graphs in automata languages and programming pages 121 132 springer 2008 2 michael j barber and john w clark detecting network communities by propagating labels under constraints phys rev e 80 026129 aug 2009 3 herve baumann pierluigi crescenzi and pierre fraigniaud parsimonious flooding in dynamic graphs in proceedings of the 28 th acm symposium on principles of distributed computing podc 09 pages 260 269 new york ny usa 2009 acm 4 s boccaletti v latora y moreno m chavez and d u hwang complex networks structure and dynamics physics reports 424 4 5 175 308 2006 5 ravi b boppana eigenvalues and graph bisection an average case analysis in proceedings of the 28 th annual symposium on foundations of computer science sfcs 87 pages 280 285 washington dc usa 1987 ieee computer society 6 ulrik brandes daniel delling marco gaertler robert go rke martin hoefer zoran nikoloski and dorothea wagner on modularity clustering ieee transactions on knowledge and data engineering 20 2 172 188 2008 7 thang nguyen bui f thomson leighton soma chaudhuri and michael sipser graph bisection algorithms with good average case behavior combinatorica 7 2 171 191 june 1987 8 gennaro cordasco and luisa gargano label propagation algorithm a semi synchronous approach ijsnm 1 1 3 26 2012 http dx doi org 10 1504 ijsnm 2012 045103 9 a chaintreau pan hui j crowcroft c diot r gass and j scott impact of human mobility on opportunistic forwarding algorithms mobile computing ieee transactions on 6 6 606 620 2007 10 augustin chaintreau abderrahmen mtibaa laurent massoulie and christophe diot the di ameter of opportunistic mobile networks in proceedings of the 2007 acm conext conference conext 07 pages 12 1 12 12 new york ny usa 2007 acm 11 andrea e f clementi claudio macci angelo monti francesco pasquale and riccardo silvestri flooding time in edge markovian dynamic graphs in proceedings of the twenty seventh acm symposium on principles of distributed computing podc 08 pages 213 222 new york ny usa 2008 acm 12 andrea e f clementi angelo monti francesco pasquale and riccardo silvestri information spreading in stationary markovian evolving graphs in parallel distributed processing 2009 ipdps 2009 ieee international symposium on pages 1 12 ieee 2009 13 anne condon and richard m karp algorithms for graph partitioning on the planted partition model random structures and algorithms 18 2 116 140 2001 14 leon danon albert diaz guilera jordi duch and alex arenas comparing community structure identification journal of statistical mechanics theory and experiment 2005 09 p 09008 2005 13 15 m e dyer and a m frieze the solution of some random np hard problems in polynomial expected time journal of algorithms 10 4 451 489 1989 16 nathan eagle and alex pentland reality mining sensing complex social systems personal and ubiquitous computing 10 4 255 268 2006 17 david easley and jon kleinberg networks crowds and markets volume 8 cambridge univ press 2010 18 g w flake s lawrence c l giles and f m coetzee self organization and identification of web communities computer 35 3 66 70 2002 19 m girvan and m e j newman community structure in social and biological networks proceed ings of the national academy of sciences 99 12 7821 7826 2002 20 mark s handcock adrian e raftery and jeremy m tantrum model based clustering for social networks journal of the royal statistical society series a statistics in society 170 2 301 354 2007 21 paul w holland kathryn blackmond laskey and samuel leinhardt stochastic blockmodels first steps social networks 5 2 109 137 1983 22 pan hui eiko yoneki shu yan chan and jon crowcroft distributed community detection in delay tolerant networks in proceedings of 2 nd acm ieee international workshop on mobility in the evolving internet architecture page 7 acm 2007 23 mark jerrum and gregory b sorkin the metropolis algorithm for graph bisection discrete applied mathematics 82 1 155 175 1998 24 thomas karagiannis jean yves le boudec and milan vojnovic power law and exponential decay of inter contact times between mobile devices in proceedings of the 13 th annual acm international conference on mobile computing and networking pages 183 194 acm 2007 25 kishore kothapalli sriram v pemmaraju and vivek sardeshmukh on the analysis of a label propagation algorithm for community detection in distributed computing and networking pages 255 269 springer 2013 26 i x y leung p hui p lio and j crowfort towards real time community detection algorithms in large networks phys rev e 79 6 2009 27 xin liu and tsuyoshi murata advanced modularity specialized label propagation algorithm for detecting communities in networks physica a statistical mechanics and its applications 389 7 1493 1500 2010 28 david lusseau and m e j newman identifying the role that animals play in their social networks proceedings of the royal society of london series b biological sciences 271 suppl 6 s 477 s 481 2004 29 francesca martelli m elena renda giovanni resta and paolo santi a measurement based study of beaconing performance in ieee 802 11 p vehicular networks in infocom 2012 proceedings ieee pages 1503 1511 ieee 2012 14 30 frank mcsherry spectral partitioning of random graphs in foundations of computer science 2001 proceedings 42 nd ieee symposium on pages 529 537 ieee 2001 31 e mossel j neeman and a sly stochastic block models and reconstruction arxiv e prints february 2012 32 m e j newman and m girvan finding and evaluating community structure in networks phys rev e 69 026113 feb 2004 33 mark ej newman spread of epidemic disease on networks physical review e 66 1 016128 2002 34 mark ej newman and michelle girvan finding and evaluating community structure in networks physical review e 69 2 026113 2004 35 chuanjun pang fengjing shao rencheng sun and shujing li detecting community structure in networks by propagating labels of nodes in advances in neural networks isnn 2009 pages 839 846 springer 2009 36 usha nandini raghavan re ka albert and soundar kumara near linear time algorithm to detect community structures in large scale networks phys rev e 76 036106 sep 2007 37 erzse bet ravasz anna lisa somera dale a mongru zolta n n oltvai and a l baraba si hierar chical organization of modularity in metabolic networks science 297 5586 1551 1555 2002 38 tom ab snijders and krzysztof nowicki estimation and prediction for stochastic blockmodels for graphs with latent block structure journal of classification 14 1 75 100 1997 39 thrasyvoulos spyropoulos apoorva jindal and konstantinos psounis an analytical study of fun damental mobility properties for encounter based protocols international journal of autonomous and adaptive communications systems 1 1 4 40 2008 40 p u tournoux je re mie leguay farid benbadis vania conan m dias de amorim and john whitbeck the accordion phenomenon analysis characterization and impact on dtn routing in infocom 2009 ieee pages 1116 1124 ieee 2009 41 milan vojnovic and alexandre proutiere hop limited flooding over dynamic networks in info com 2011 proceedings ieee pages 685 693 ieee 2011 42 john whitbeck vania conan and marcelo dias de amorim performance of opportunistic epidemic routing on edge markovian dynamic graphs communications ieee transactions on 59 5 1259 1263 2011 43 eiko yoneki pan hui and jon crowcroft wireless epidemic spread in dynamic human networks in bio inspired computing and communication pages 116 132 springer 2008 15 a more general settings part ii in this section we show the further relevant generalizations that can be efficiently solved by simple adaptations of our protocol and or its analysis edge markovian evolving graphs let us consider an edge meg dyn g n p p q q e 0 defined in the introduction and assume that q 6 p n if 0 p p q q 1 it is easy to see 12 that the unique stationary distribution of the two corresponding 2 state edge markov chains inside and outside the communities respectively are in p p p p p p and out q q q q q q it thus follows that the dynamic graph starting from any e 0 converges to the 2 communities erdo s re nyi random graph with edge probability functions p p p p inside communities and q q q q outside communities the mixing time m in and mout of the two edge markov chain are bounded by 12 m in o 1 p p mout o 1 q q let us observe that there is a markovian dependence between graphs of consecutive time steps if we observe any event at time t related to et such as the number of well labeled nodes then et 1 is not anymore random with the stationary distribution it thus follows that we need to change the way the protocol works over the dynamic random graph let m max m in mout log n then by definition of mixing time starting from any edge subset et at time t at time t with some m if u v v 1 or u v v 2 then edge u v exists with probability p 1 n 2 otherwise it exists with probability q 1 n 2 in other words whathever the state of the labeling process is at time t after a time window proportional to the mixing time the dynamic graph is random with a distribution which is very close to the stationary one we can thus modify our protocol for the dynamic erdo s re nyi graph model dyn g n p q in order to wait for mixing between any two consecutive steps of the original protocol there is a quiescent time window of length m where every node simply does nothing then the analysis of the protocol over dyn g n p p q q e 0 is similar to that in section working for the dynamic erdo s re nyi graph dyn g n p q we can thus state that under the condition q 6 o p n b for some constant b 0 this version of our protocol w h p performs a good labeling in time o m max log n logn pn we finally observe that for the realistic case p q 1 see the discussion in the introduction the mixing time bound m turns out to be o log n we thus get only a logarithmic slowdown factor w r t the good labeling in the dynamic erdo s re nyi graph dyn g n p q sparse graphs when p o 1 n and q p o 1 nb for some constant b 0 the snapshots of the dynamic graph are very sparse so every node must wait at least 1 pn time step in average in order to meet some other node this implies that the labeling protocol will be slower we can reduce this case to the case p 1 n by considering the time union random graph obtained from dyn g n p q according to the following definition 7 let be any positive integer and consider any sequence of graphs g v e 1 g v e then we define the or graph g v e where e e n 2 t 1 e et 16 table 1 tab 1 experimental results for the homogeneous case for every value of n the rows indicates the percentage of good labeling for three choices of q and the minimal setting for c the total number of protocol steps is inside brackets n q n 3 2 c 0 9 q n 5 3 c 0 6 q n 2 c 0 5 20000 99 66 100 46 100 36 40000 99 71 100 46 100 41 80000 100 76 100 51 100 41 160000 100 81 100 51 100 46 320000 100 86 100 56 99 46 640000 100 91 100 61 100 51 1280000 100 91 100 61 100 51 2560000 100 96 100 66 100 56 it is easy to prove the following lemma 8 let p 1 n then the 1 pn or graph of any finite sequence of graphs selected according to the dyn g n p q model is a dyn g n p q with p 1 n and q o p nb the modified protocol just works as it would work over dyn g n p q with p 1 n and q o p nb in every phase every node applies the phase s labeling rule only every 1 pn time steps on the 1 pn or graph the modified protocol thus requires log n logn pn time dense graphs when p becomes larger than log n n and q p nb the labeling problem becomes an easier task since standard probability arguments easily show that the good labeling process is faster and the related r v s i e number of new labeled nodes at every time step have much smaller variance this implies that the protocol can be simplified for instance the source labeling phase i e phase 1 can be skipped while the length of other phases can be reduced significantly as a function of p however we again emphasize that dense dynamic random random graphs are not a good model for the scenario we are inspired from icmns are opportunistis networks having sparse and disconnected topology b experimental results we run our protocol over sequences of independent random graphs according to the dyn g n p q model the protocol has been suitably simplified and tuned in order to optimize the real performance in particular the implemented procotol consists of 5 phases phase 1 source coloring phase 2 3 fast coloring i ii phase 4 min coloring and phase 5 majority rule the rules of each phase is the same of the corresponding phase analyzed in section moreover the length of every phase is fixed to c log n as shown in the next tables parameter c is always very small and it depends on the parameter q the parameter c has been heuristically chosen as the minimal one yielding the good labeling in more than 98 of the trials we consider instances of increasing size n and for each size we tested 100 random graphs in the first experiment class see table 1 we consider homogeneous sparse graphs with the following setting p 5 n and 3 values of q ranging from 1 n 2 to 1 n 3 2 the second class of experiments concerns non homogeneous random graphs for each pair of nodes e u v in the same community the probability pe is randomly fixed in a range d 1 n d 2 n before starting the graph sequence generation then a every time step t 0 the graph snapshot g v et is 17 table 2 tab 2 experimental results for the non homogeneous sparse case with d 1 1 and d 2 9 n q 1 n 3 2 c 1 q 1 n 5 3 c 0 4 q 1 n 2 c 0 4 20000 100 46 100 46 100 36 40000 98 71 99 46 100 41 80000 100 76 100 51 100 41 160000 100 81 100 51 100 46 320000 100 86 100 56 100 46 640000 100 91 100 61 100 51 1280000 100 91 100 61 100 51 table 3 tab 3 experimental results for the non homogeneous case with d 1 0 and d 2 log n n q n 3 2 c 1 q n 5 3 c 0 4 q n 2 c 0 4 20000 99 76 100 31 100 31 40000 99 81 100 31 100 31 80000 98 86 100 31 100 31 160000 100 91 100 36 100 36 320000 100 96 100 36 100 36 640000 100 101 100 41 100 41 1280000 100 106 100 41 100 41 generated by selecting every edge e u v according to its birth probability pe the edges between the two communities are generated with parameter q in table 2 the experimental results are shown for the case d 1 1 and d 2 9 in order to generate sparse topologies inside the communities while in table 3 the results concern the more dense case where d 1 0 and d 2 log n the protocol s implementation is the same of the homogeneous case above the experiments globally show that the tuning of parameter c mainly depends on the value of q even though it can be fixed to small values in all studied cases moreover the presence of non homogeneous edge probability function seems to slightly help the efficiency of the protocol intuitively speaking we believe this is due to the presence of fully random irregularities in the graph topology that helps the protocol to break the symmetry of the initial configuration c useful tools lemma 9 if x o 1 and xy o 1 then 1 x y 1 xy 1 2 x 1 x y 61 xy 1 xy we will often use the chernoff s bounds lemma 10 chernoff s bound let be x n i 1 xi where x 1 xn are independent bernoulli r v s and let be 0 1 if 0 1 e x and 2 e x then it holds that p x 1 1 e 2 2 1 6 18 p x 1 2 e 2 3 1 7 lemma 11 let be any poly logarithm and e 0 e 1 e be events that hold w h p then e 0 e 1 e holds w h p d proofs of the protocol s analysis in the sequel we always analyze the markovian process in community v 1 since the analysis in the second community is the same d 1 the source labeling proof of theorem 1 we define the following r v s counting the labeled nodes at the end of phase 1 the variable xv 1 1 iff v gets label z 1 and the variable x 1 1 v 6 s 1 xv 1 describes the total number of the z 1 labeled nodes in v 1 the variable y v 1 1 iff v gets label z 2 and the variable y 1 v 6 s 1 y v 1 describes the total number of the z 2 labeled nodes in v 1 in order to prove the theorem we need the following lemmas lemma 12 let 1 be such that p 1 logn n and 1 o 1 p then starting from the initial state k 0 1 1 k 0 2 1 h 0 1 0 h 0 2 0 e 0 at time step 1 w h p it holds that 1 16 np 1 6 x 1 x 2 6 4 np 1 proof we first bound from below the number of z 1 labeled nodes at the end of the phase 1 notice that p xv 1 1 1 q 1 1 1 p 1 and we can apply lemma 9 to each factor on the right side getting p xv 1 1 1 q 1 1 1 p 1 p 1 1 q 1 1 2 q 1 p 1 p 1 2 where in the last inequality we used limn 1 q 1 1 2 q 1 p 1 1 the above inequality easily implies that e x 1 1 v 1 1 p xv 1 1 1 n 2 1 p 1 2 n 2 1 2 n p 1 2 that is e x 1 np 1 8 since by fixing any initial state k 0 1 k 0 2 h 0 1 h 0 2 e 0 the r v s xv 1 are independent we can apply the chernoff bound 6 with 1 2 then p x 1 6 np 1 16 6 e 1 64 np 1 19 by hypothesis we have that np 1 log n so w h p it holds that x 1 np 1 16 a similar analysis based on lemma 9 and chernoff bound 7 yields the stated upper bound on the number of z 1 labeled nodes at the end of the phase 1 that is w h p it holds that x 1 6 4 np 1 lemma 13 let 1 1 be such that q 1 o 1 n 1 for any 0 then starting from the initial state k 0 1 1 k 0 2 1 h 0 1 0 h 0 2 0 e 0 at time step 1 it holds w h p that y 1 0 proof a sufficient condition for having y 1 0 is that no edge between any node in v 1 and s 2 occurs at any time step of phase 1 hence by lemma 9 p y 1 0 1 q v 1 1 1 q n 1 2 1 2 q v 1 1 since q 1 o 1 n 1 b the lemma is proved lemmas 12 and 13 easily imply the theorem d 2 fast labeling i proof of theorem 2 we remind that q o p nb and consider any positive constant a such that a b we consider the markovian process when at the generic step t of this phase it is in any state satisfying the following condition k t 1 k t 2 d 1 16 pn log n d 1 pn 1 a log n and h t 1 h t 2 0 8 for each time step t 1 t 6 1 2 we define the following binary r v s xv 1 t 1 iff v v 1 gets label z 1 at time t 1 and x 1 t v v 1 xv 1 t y v 1 t 1 iff v v 1 gets label z 2 at time t 1 and y 1 t v v 1 y v 1 t the first lemma provides tight upper and lower bounds on the number of new labeled nodes after one step of the protocol the choice of 2 will be given later in theorem 2 lemma 14 for i 1 2 it holds w h p that 1 log n k t i 1 polylogn n 1 a np 2 k t i 6 xi t 6 1 log n k t i 1 polylogn n 1 a np 2 k t i yi t 0 20 proof observe that p y 1 t 0 is lower bounded by the probability that in et there is no edge between any node in v 1 and any node in v 2 which is already labeled z 2 by the hypothesis 8 and the conditions on p and q we can thus apply lemma 9 and get p y 1 0 1 q v 1 k t 2 1 2 q v 1 k t 2 1 polylogn n 1 a proving that w h p y 1 t 0 again thanks to condition 8 and the conditions on p and q eq 1 we can apply lemma 9 to bound p xv 1 1 1 1 p k t 1 1 q k t 2 we get p xv 1 1 k t 1 p 1 k t 1 p 1 2 k t 2 q k t 1 p 1 polylogn n 1 a p xv 1 1 6 k t 1 p 1 2 p 6 k t 1 p 1 polylogn n 1 a we can thus bound the expected number of new well labeled nodes e x 1 v 1 k t 1 p xv 1 1 np 2 k t 1 1 polylogn n 1 a 6 e x 1 6 np 2 k t 1 1 polylogn n 1 a by applying the chernoff bounds 6 and 7 with logn k 1 we get p x 1 6 1 log n k t 1 1 polylogn n 1 a np 2 k t 1 e logn 2 k t 1 np 2 k t 1 1 polylog n n 1 a 6 1 n 1 3 p x 1 1 log n k t 1 1 polylogn n 1 a np 2 k t 1 e logn 3 k t 1 np 2 k t 1 1 polylog n n 1 a 6 1 n 1 3 this implies that w h p 1 log n k t 1 1 polylogn n 1 a np 2 k t 1 6 x 1 t 6 1 log n k t 1 1 polylogn n 1 a np 2 k t 1 in what follows we will make use of the following function f n k 2 max log n k polylogn n 1 a let us observe that k t 1 i k t i xi t so lemma 14 implies the following recursive bounds lemma 15 for i 1 2 it holds w h p that 1 np 2 1 f n k t i k t i 6 k t 1 i 6 1 np 2 1 f n k t i k t i and h t 1 i 0 21 proof of theorem 2 we first analyze the good labeling the idea is to derive the closed formula corresponding to the recurrence relation provided by lemma 15 and to analyze it in two different spans of time in the first span we let k 1 increase enough so that in the second span we can apply a stronger concentration result recall that thanks to theorem 1 phase 2 starts with the markovian process in a state satisfying condition 2 that implies condition 8 moreover we will fix the final time step 2 so that condition 8 has been holding for all time steps of phase 2 this implies that we can apply lemma 15 for all such steps let t 6 1 be defined as t log 1 1 np 2 1 f n k 1 1 log log 3 n k 1 1 1 since t 1 o log n thanks to lemma 11 we can unroll backward the recursive relation from time t to time 1 and get 1 np 2 t 1 1 f n k 1 1 t 1 k 1 1 6 k t 1 6 1 np 2 t 1 1 f n k 1 1 t 1 k 1 1 9 we observe that the value of k 11 d 1 16 pn log n can reach any arbitrarily large constant by tuning the constant d 1 in theorem 1 so f n k 1 1 can be made arbitrarily small from this fact and eq 9 we have that k t 1 log 3 n log 3 n where can be made arbitrarily small by decreasing f n k 1 1 i e by increasing d 1 in theorem 1 notice that at any time step t 6 t condition 8 is largely satisfied we now unroll the recursive relation from time 2 to time t and get 1 np 2 2 t 1 f n k t 1 2 t k t 1 6 k 2 1 6 1 np 2 2 t 1 f n k t 1 2 t k t 1 10 we observe that with a suitable choice of the positive constant 0 1 for 2 log 1 1 np 2 log na log 3 n t it holds that 1 f n k t 1 2 t and 1 f n k t 1 2 t 6 1 by replacing 2 into eq 10 with a suitable choice of remind that can in turn be made arbitrarily small we finally get na 6 k 2 1 6 n a log n again observe that for all time steps t 6 2 condition 8 is largely satisfied this implies that at each of these steps we were able to apply lemma 15 as for the bad labeling observe that lemma 15 guarantees w h p h t 1 h t 2 0 then from lemma 11 it holds w h p that h 2 1 0 and h 2 2 0 d 3 fast labeling ii proof of theorem 3 we consider the markovian process when at the generic step t of this phase it is in any state satisfying the following condition for i 1 2 k t i na n log 2 n and h t i o n a 2 where a 1 a 2 1 11 for each time step t 1 t 6 1 2 we again consider the following binary r v s 22 xv 1 t 1 iff v v 1 gets label z 1 at time t 1 and x 1 t v v 1 xv 1 t y v 1 t 1 iff v v 1 gets label z 2 at time t 1 and y 1 t v v 1 y v 1 t in all the next lemmas of this phase it is assumed that at the end of phase 2 the markovian process is in a state satisfying condition 11 thanks to theorem 2 this holds w h p we start by providing with the next lemma tight upper and lower bounds on the number of the well labeled nodes at a generic step of phase 3 lemma 16 a constant 0 exists such that for i 1 2 it holds w h p that 1 np 2 1 log n k t i 6 k t 1 i 6 1 np 2 1 log n k t i 12 sketch of proof by neglecting the contribution of h 2 from the facts pk t 1 qk t 2 ph t 1 o 1 and lemma 9 we have that p xv 1 1 1 1 p k t 1 1 q k t 2 1 p h t 1 pk t 1 1 pk t 1 1 2 qk t 2 1 2 ph t 1 observe that 1 pk t 1 1 2 qk t 2 1 2 ph t 1 1 1 log 2 n then p xv 1 1 pk t 1 1 1 log 2 n 13 we now provide an upper bound on p xv 1 1 from the union bound and lemma 9 we get p xv 1 1 6 pk t 1 1 2 p qh t 2 1 2 q 6 pk t 1 1 1 n 1 a 2 14 as usual we exploit eq s 13 and 14 to bound the expectation e x 1 v 1 k t 1 h t 1 p xv 1 1 for some constant 0 w h p it thus holds that np 2 k t 1 1 log n 6 e x 1 6 np 2 k t 1 1 log n we can use the chernoff bounds 6 and 7 with 1 log n to get that for some constant 0 w h p np 2 k t 1 1 log n 6 x 1 6 np 2 k t 1 1 log n 15 23 from the above inequality it follows that 1 np 2 1 np 2 np log n k t 1 6 k t 1 1 6 1 np 2 1 np 2 np log n k t 1 since np 2 np is bounded by a constant for the sake of simplicity we can just re define as any fixed constant such that 1 np 2 1 log n kt 1 6 k t 1 1 6 1 np 2 1 log n kt 1 lemma 16 implies the following properties of the well labeling for any state within phase 3 including the final one at time 3 lemma 17 a constant 0 exists such that for i 1 2 it holds w h p that 1 np 2 t 1 2 1 log n t 1 2 k 2 1 6 k t 1 1 6 1 np 2 t 1 2 1 log n t 1 2 k 2 1 sketch of proof since lemma 16 holds as long as ki 6 n log 2 n from lemma 11 we get that the statement holds w h p by applying the same unrollement argument shown in the previous phase we now exploit the above lemma to provide a bound on the number of bad labeled nodes at the end of phase 3 lemma 18 for any positive constant a constant a 1 with 1 a a 1 a 2 can be fixed so that by choosing the final time step of phase 3 3 1 log 1 np 2 log n 1 a log 3 n 2 it holds w h p that for i 1 2 and for all t 6 3 h t i 6 n a 1 sketch of proof in order to bound the rate of h t 1 we consider the r v y v 1 when the markovian process is in a generic state satisfying condition 11 thanks to theorem 2 we know this largely holds for the first step of phase 3 and by the choice of 3 we will see this w h p holds for all t 6 3 by induction by neglecting the contribution of k 2 we have that p y v 1 1 1 1 p h t 1 1 q h t 2 1 p k t 1 since ph t 1 qh t 2 pk t 1 o 1 we can apply lemma 9 to each factor on the right side thus obtaining p y v 1 1 ph t 1 1 ph t 1 1 2 qh t 2 1 2 pk t 1 pht 1 1 1 log 2 n 24 we now provide an upper bound to p y v 1 1 by the union bound and lemma 9 we get p y v 1 1 6 1 1 p h t 1 1 1 q k t 2 6 ph t 1 1 2 p qk t 2 1 2 q 6 ph t 1 qk t 2 1 2 p as for the expected value of new bad labeled nodes for some constant 0 it holds that np 2 h t 1 1 log n 6 e y 1 6 np 2 h t 1 nq 2 k t 2 1 1 log n 16 from the chernoff bound and eq 16 it follows that w h p h 1 will not jump from a sublogarithmic value to a polynomial one in other words in the first time that t will be at least log 3 n we have that ht 1 o polylogn hence again from the chernoff bound and eq 16 setting logn h t 1 we see that for each t t in phase 3 w h p we have y 1 6 np 2 h t 1 k t 2 2 n 1 2 log n 17 in eq 17 we can bound the term k t 2 2 n using lemma 17 and theorem 2 obtaining for some positive constant c k t 2 2 n 6 1 np 2 t 2 1 logn t 2 k 2 1 2 n 6 1 np 2 t 2 c therefore we can use eq 17 to get that w h p h t 1 1 h t 1 y 1 6 1 np 2 h t 1 1 np 2 t 2 c 1 2 log n 18 hence unrolling h t 1 until time t for some positive constants c 1 and c 2 eq 18 becomes keeping high probability thanks to lemma 11 ht 11 6 1 np 2 t 1 t 1 2 log n t 1 t h t 1 c 1 np 2 t 2 t i t 1 2 log n t 1 i 6 c 1 1 np 2 t 1 t h t 1 c 2 log n 1 np 2 t 2 and the last side turns out to be o n 1 a polylogn when t 1 3 proving the lemma proof of theorem 3 the bound claimed for hi follows from lemma 18 and the bounds claimed for ki follow from lemma 17 for t 3 thus proving theorem 3 25 u vw a b v k u z c k u z v figure 1 nodes in the same community are circled and they are labeled either with white or with black in graph a we see that the event u gets color black implies the existence of edge u v then p u gets color black v gets color black 6 p u gets color black in graph b we clearly see that since v and u does not share any edge toward the other community these edges do not yield stochastic dependence in graph c we see that if the edges inside each community are directed then the presence of bold drawn edges do not affect the presence of dashed drawn edges d 4 dealing with stochastic dependence here we prove the properties yielded by procedure link proc claimed in phase 4 of section since we are considering a generic time step we omit its index thus e et we denote with e d the set of directed edges constructed by procedure link proc then when writing u v ed we are assuming that u v is a directed edge lemma 19 v ed is distributed as a directed g v 1 1 p up to a total variation error of o 1 nc 2 for an arbitrary positive c set in the subprocedure proof in what follows the approximations denoted by consist in dropping off factors of order o 1 nc where c is given by the range from whom the numbers m are sampled that is from 1 to nc for the sake of simplicity in our protocol we set c 3 in order to study the distribution of v ed observe that for a given node u respect to a node v it holds p c 0 1 u v e p m u v m v u p c 0 1 m u v m v u p m u v m v u p c 0 1 m u v m v u o p m u v m v u 1 2 p c 0 1 m u v m v u 1 2 p c 0 1 m u v m v u 1 1 p p from the preceding calculation for any pair of nodes u v v it follows p u v ed p u v e p c 0 1 u v e p u v e 1 1 p p 1 1 p now we have to shows that the edges of ed are independent since r v s that are functions of independent r v s are themselves independent notice that two given edges u v w z ed that have one or zero nodes in common are independent because they are built on independent edges of the dyn g n p q 26 graph it remains to verify that the edges u v v u ed that are built on the same edge are independent by direct calculation p u v ed v u ed p u v v u ed p v u ed p u v e and c 0 p v u ed 1 1 p 2 1 1 p 1 1 p p u v ed concluding the proof d 5 controlled saturation proof of theorem 4 we define the following r v s counting the labeled nodes at the end of each window of phase 4 the variable xv 1 1 iff v gets label z 1 and the variable x 1 1 v 6 s 1 xv 1 describes the total number of the z 1 labeled nodes in v 1 the variable y v 1 1 iff v gets label z 2 and the variable y 1 v 6 s 1 y v 1 describes the total number of the z 2 labeled nodes in v 1 observe that because of procedure link proc the edge probabilities change however to simplify nota tion we keep using p and q for the new edge probabilities lemma 20 for any constant c 4 at time step 4 3 t 4 3 3 c 4 log n 3 the markovian process is w h p in a state such that h 4 i o n a 1 polylogn for i 1 2 sketch of proof let h 1 h 3 1 and k 2 k 3 2 at the end of the first window for any node v v 1 it holds that p y v 1 1 6 1 1 p h 1 1 q k 2 t 4 6 1 e t 4 ph 1 qk 2 6 t 4 ph 1 qk 2 so since it holds a 1 1 a 1 b we get e y 1 6 2 nph 1 t 4 o na 1 polylogn by repeating the same reasoning for the other 2 windows and by applying the chernoff bound the thesis follows proof of theorem 4 for the sake of brevity we define k 1 k 3 1 k 2 k 3 2 and h h 3 1 let us consider a node v v 1 at the end of the first time window of phase 4 for some constant 0 it holds that p xv 1 1 1 1 p k 1 t 4 1 p h 1 t 4 1 q k 2 t 4 1 log 1 n pk 1 t 4 27 since 1 n 6 p 6 logn n by computing the expected value of the sum of all xv 1 s and by applying the chernoff bound we get that the number of well labeled nodes in v 1 at the end of the first time window of phase 4 is w h p kt 41 d 4 n log 2 n where d 4 d 4 c 4 is a positive constant that can be made arbitrarily large by increasing c 4 in t 4 c 4 log n we have thus shown that after the first window the number of well labeled nodes inside each community is increased by a factor d 4 log n we can then repeat the same analysis for the second and the third windows which are necessary when p o log n n let us consider the sparsest case p 1 n the other cases are easier in this case at the end of the third window it can be easily verified that p xv 1 1 1 1 p n logn t 4 1 p n a 1 polylog n t 4 1 q nt 4 1 1 n 1 e c 4 the last bound can be thus made arbitrarily close to 1 by increasing the constant c 4 hence w h p k 4 1 n where constant can be made arbitrarily close to 1 by suitably choosing the constant c 4 in t 4 c 4 log n as for the bad labeling the thesis follows from lemma 20 d 6 majority rule proofs of theorem 5 sketch of proof let us consider a node u v 1 and for every time step t of phase 5 define the r v xut counting the number of its z 1 labeled neighbors and the r v y u t counting the number of its z 2 labeled neighbors in et then define the two sums xu t 4 1 5 xut and yu t 4 1 5 y ut let us also define the subset g 4 v v 1 v is z 1 labeled at time 4 thanks to condition 5 with constant 3 4 it holds that g 4 3 4 v 1 3 8 n from the above inequality the expected values of r v s xu and yu can be easily bound as follows e xu t 4 1 5 v g 4 p u v et 3 8 pn 5 and 28 e yu 6 t 4 1 5 v 6 g 4 p u v et v v 2 p u v et 6 1 7 pn 5 finally observe that xu and yu are sums of independent binary r v s thanks to procedure link proc since p 1 n and 5 4 c 5 log n we can thus choose a suitable constant c 5 0 and apply the chernoff bound to get the thesis 29 1 introduction 1 1 a restricted setting overview 2 a restricted setting formal description 3 the general setting 4 conclusions a more general settings part ii b experimental results c useful tools d proofs of the protocol s analysis d 1 the source labeling proof of theorem d 2 fast labeling i proof of theorem d 3 fast labeling ii proof of theorem d 4 dealing with stochastic dependence d 5 controlled saturation proof of theorem d 6 majority rule proofs of theorem