ar x iv 1 60 6 09 27 9 v 5 cs d s 1 1 m ay 2 01 8 the matching relaxation for a class of generalized set partitioning problems phillippe samer 1 evellyn cavalcante 1 sebastia n urrutia 1 and johan oppen 2 1 universidade federal de minas gerais av anto nio carlos 6627 31270 010 belo horizonte mg brazil phillippes gmail com evellyn cavalcante gmail com surrutia dcc ufmg br 2 molde university college p o box 2110 n 6402 molde norway johan oppen himolde no may 11 2018 abstract this paper introduces a discrete relaxation for the class of combinatorial optimiza tion problems which can be described by a set partitioning formulation under packing constraints we present two combinatorial relaxations based on computing maximum weighted matchings in suitable graphs besides providing dual bounds the relaxations are also used on a variable reduction technique and a matheuristic we show how that general method can be tailored to sample applications and also perform a successful computational evaluation with benchmark instances of a problem in maritime logistics keywords dual bounds matchings set partitioning integer programming remark a preliminary four page abstract of this work was presented at the 14 th cologne twente workshop on graphs and combinatorial optimization 2016 acknowledgements this work was carried out within the port ship coordinated planning project supported by the norwegian research council under project number 227084 o 70 we also thank the three referees whose comments improved our presentation 1 http arxiv org abs 1606 09279 v 5 1 introduction consider the following problem which the reader might recognize from a range of applica tion domains a set of n tasks is to be performed and the problem solver has to decide for an execution mode to them to each individual task corresponds a particular set of acceptable execution modes to perform it moreover each execution mode comprises a well defined cost and resource usage possibly many e g time space tools workers since the finite resources are to be shared among tasks the problem solver also counts on an oracle capable of deter mining whether a selection of execution modes to different tasks is compatible any solution prescribing the assignment of incompatible execution modes is thus rendered infeasible we concern the class of problems which at its core can be cast as follows given sets of acceptable assignments to each individual task and compatibility information among any selection of assignments find a compatible setting for the n tasks of minimum total cost to clearly outline our contributions and the scope of our investigation we first give a precise formulation of the class of problems we concern which we refer to as the base generalized set partitioning problem gspp 1 1 the base gspp let t be the set of tasks and r r 1 r 2 rk be the set of tuples identifying resource usage i e combinations of an option for resource r 1 an option for resource r 2 and so forth also define i as the set of feasible assignments to task i each element in i assigns a subset of resources in r characterizing an execution mode to complete an individual task we denote ni 1 i binary decision variables y b thus indicate which individual assignments are used in the solution let cj q denote the cost of an assignment yj to an individual task consisting of a computable function of the total resource usage on that individual assignment alone finally the coefficient matrices are as follows a b t associates each column with a single task aij is equal to one if yj refers to an assignment for task i otherwise it is equal to zero b b r represents resource usage tuples brj is one iff the given combination r r of individual resources is used in the assignment yj then 2 we build on the following integer programming ip formulation z min j cjyj y pgspp b 1 where pgspp denotes the polyhedral region defined by j aijyj 1 i t 2 j brjyj 1 r r 3 yj 1 j 4 yj 0 j 5 set partitioning constraints 2 ensure that all tasks are served by exactly one assignment while set packing in 3 forbids overlapping of assignments in each resource combination slot we note that if incompatibilities among tasks reduced to pairwise relations the latter class of inequalities could be replaced by any set packing relaxation such as edge inequalities xu xv 1 for each edge u v in a conflict graph atamtu rk et al 2000 constraints 2 5 correspond to the linear relaxation of the binary programming formulation this formulation has connections to different disciplines in combinatorial optimization it is similar to some variations of the assignment problem pentico 2007 it can be seen as the scheduling of jobs on parallel machines minimizing total processing time as we illustrate in section 5 1 with a problem studied by lalla ruiz and vo 2016 b and the formulation is also an instance of the mixed set covering packing and partitioning problem investigated by kuo and leung 2016 following a longer tradition of studying perfect and ideal 0 1 matrices the authors perform the first polyhedral investigation of the mixed problem and argue on its relevance and number of applications notwithstanding the fact that it has drawn little attention in the literature so far for the interested reader we indicate in section 2 more related problems and situate the above gspp structure in the set partitioning literature 3 1 2 our contributions the number of variables in the previous formulation can be huge although polynomial in the number of execution modes of tasks this is in consonance with the compromise between i the complexity in the representation of each execution mode to a task i e the level of discretization and ii the computing time to solve the resulting problem the main idea of this paper is to show that one can use interesting combinatorial con structions over the variables to find lower bounds to 1 moreover since the bounds are purely combinatorial they may be computed more quickly than bounds based on linear pro gramming lp relaxation though possibly at the expense of being weaker as noted by ryan 1992 the solution of the lp relaxation has always proved to be a computational bottleneck in solving spps even if the combinatorial bounds prove to be weaker on a given application the construction itself might be interesting as a building block e g in algorithms which depend on the computation of dual bounds as we illustrate with a variable probing method and a matheuristic in section 4 to summarize the contributions of this paper are we draw attention to the gspp structure 1 5 as being interesting in its own right and list a range of applications of it in the recent literature moreover the key ideas we present can be extended to fit application specific details as we illustrate in section 5 in section 3 we introduce two lower bounds to problem 1 these lower bounds come from weighted matchings computed on suitable graphs we also prove that one of the bounds is stronger than the other from an algorithmic standpoint the combinatorial lower bounds are embedded in a model based heuristic framework or matheuristic presented in section 4 we argue that the efficient bounds introduced are key to this algorithm a preliminary computational evaluation of that matheuristic using benchmark in stances from a logistics problem indicate that it is able to find near optimal solutions in reduced execution time section 6 4 2 on the literature of generalized set partitioning problems in this section we give pointers to the literature of the standard set partitioning problem first followed by a brief account of the different generalizations related to the structure we investigate the standard set partitioning problem the first paragraph in section 1 of a classic review by balas and padberg 1976 reads among all special structures in pure integer programming there are three which have the most wide spread applications set partitioning set covering and the traveling salesman or minimum length hamiltonian cycle problem and if we were to rank the three set partitioning would be a likely candidate for number one we remark that over forty years later the set partitioning problem is still a central struc ture in integer programming as illustrated by the several interesting applications we mention throughout this paper that early work of balas and padberg is a thorough introduction to the concepts and problems related to set partitioning as well as the main polyhedral results and exact algorithms up to that date while surveying the literature on this fundamental problem is beyond the scope of our paper we still mention particular works that are more directly related to ours or particularly inspiring the awarded thesis by borndo rfer 1998 provides an extended review of polyhedral and algorithmic aspects related to the underlying set packing and covering relaxations it also documents the components and implementation issues of a branch and cut algorithm for set partitioning extending in numerous directions the approach of hoffman and padberg 1993 to an application in airline crew scheduling finally it describes a real world application of vehicle routing in the context of public transportation for the physically disabled building on a decomposition of the problem in two steps both of which require optimizing over a set partitioning structure in the next two paragraphs we highlight the remarkable effort of that author in extending the results on polytopes with more substantial body of knowledge to 5 larger classes of problems polyhedra and combinatorics of set partitioning borndo rfer and weismantel 2001 present an affine transformation technique aggrega tion to leverage cutting planes from combinatorial relaxations of an ip formulation their polyhedral investigation stems from a generalization of projection to introduce an algorith mic approach a so called aggregation scheme allows one to transfer expand known classes of valid inequalities in a suitable projection space e g the polytope of another combinato rial structure to the original polyhedron representing an ip besides constructing interesting aggregation schemes leading to set packing and knapsack relaxations the authors describe conditions under which the separation problem for the new classes of valid inequalities can be solved in polynomial time several of those results are further investigated and contrasted within the framework of disjunctive cuts by letchford 2001 borndo rfer 2004 also describes the combinatorial packing problem cpp investigating a structure closely related to the class of set partitioning problems that we study the problem consists of solving a number of individual combinatorial optimization problems on the same ground set such that no element is contained in the solution of more than one problem a number of interesting problems can be subsumed as cpp examples including minimum cost flows steiner trees packing and the generalized assignment problem the long tradition in studying the polyhedra associated with 0 1 matrices encompasses the gspp structure that we consider in particular sebo 1998 extended the theory of perfect matrices in set packing formulations and ideal matrices in set covering to characterize non integral polyhedra in the mixed packing and covering problem assuming the coefficient matrices satisfy those former conditions a central structure in the work of sebo is the odd hole graph almost twenty years later kuo and leung 2016 start from that same graph structure to investigate the mixed set covering packing and partitioning problem they derive the mixed odd hole inequality and show that its inclusion completely characterizes the polytope corresponding to the mixed problem when the coefficient matrix induces precisely that graph as we remarked earlier 6 the base gspp formulation that we explore in this work is an instance of that mixed problem formulations and algorithms for generalized set partitioning problems there is a solid research track on lagrangean bounds and algorithms for generalizations of set partitioning nemhauser and weber 1979 introduced a reformulation of the classic set partitioning problem as a weighted matching with simple side constraints they describe a lagrangean relaxation algorithm exploiting the particular matching structure to improve a standard nonlinear optimization method to solve dual subproblems ali and thiagarajan 1989 also present a lagrangean approach to solve relaxations within a branch and bound framework the original problem structure is decomposed into a network type submatrix solved efficiently with dual reoptimization while the remaining constraints are dualized in the objective function resulting in an integral relaxation shor et al 1996 further explore lagrangean bounds to formulate relaxations of set packing partitioning problems they even consider an approximation procedure solving a reduced ip model which is analogous to the matheuristic we present in section 4 2 using lagrangean duals instead of the combinatorial bounds we introduce el darzi and mitra 1995 review and propose a series of combinatorial relaxations for the classic set partitioning formulation they also suggest that their results can be used in a lagrangean relaxation approach linderoth et al 2001 present a parallel algorithm for distributed memory architectures combining different primal and dual lp based heuristics with a collection of preprocessing variable fixing and cut generation methods finally we mention a few more problems that are closely related to the gspp structure that we investigate here in the work of campello and maculan 1987 the set partitioning problem is generalized by a single upper bound on positive linear combinations of the vari ables instead of the set packing constraints of the gspp we study they also consider a dif ferent cardinality constraint and propose a lagrangean relaxation scheme to determine lower bounds ball et al 1990 describe the lagrangean relaxation of weighted matchings with generalized upper bounds which can be cast as a particular instance of the set partitioning problem they present a thorough experimental analysis considering different approaches to 7 optimize the lagrangean dual problem an improvement heuristic and a convergent enumer ation procedure to guarantee the optimality of the overall method as for fisher and kedia 1990 the set partitioning structure is generalized by set covering constraints the resulting problem is also interesting providing a model for previous applications in the literature and the authors describe dual heuristics to it chan and yano 1992 and boschetti et al 2008 also present dual heuristics to the problem another interesting lagrangean approach worth mentioning is that of cavalcante et al 2008 to set partitioning their sophisticated relax and cut algorithm improves on the quality of previous known lower bounds while also being competitive regarding time efficiency 3 matching relaxations of the gspp in this section we present the main contributions of the paper for the sake of clearness we highlight from the problem definition in the introduction three conditions for our key ideas to work first we assume that each individual assignment yj has a cost cj which is computable independently of the assignments to other tasks we also assume that it is possible to determine whether a selection of individual assignments is compatible finally the gspp structure we study is limited to formulations with a polynomial number of variables such that the set can be enumerated before solving the resulting ip while this immediately rules out a series of applications typically solved by column generation algorithms we hope that our discussions and numerical results in the remainder of the paper could settle the relevance of the class of problems we concern we start by introducing two relaxations for the gspp formulation which yield dual bounds to the optimal value of the objective z in 1 note that the most na ve approach would be to discard all the packing constraints in 3 and simply choose the cheapest individual assignment to each task which would provide a most trivial lower bound in the following we aim to discard less of those constraints we construct two simple undirected graphs representing a subset of the enumerated assignments throughout the text we use the linear map c q from the space of assignments to their costs such that c yj cj 8 we define the graph g 1 t e 1 with a vertex for each task the set e 1 includes an edge i j if the individual assignments of best cost for tasks i and j are not compatible with each other let c j denote the minimum cost assignment for task j that is c j min c yj yj j analogously let c j be the second minimum cost assignment for j the cost c 1 i j of an edge in g 1 is defined by the least difference among such costs for the corresponding tasks i and j that is c 1 i j min c i c i c j c j then the following bound on the cost of any feasible solution holds theorem 1 let m e 1 denote a maximum weighted matching in g 1 and w m e m c 1 e be its weight then lb 1 w m j t c j is a lower bound to the optimal value z in 1 proof the selection of the best individual assignments for each task corresponds to relaxing all the constraints in 3 therefore this is a trivial lower bound to the cost of any feasible solution and amounts to j t c j starting with the trivial selection of best individual assignments and remembering that i j e 1 iff such best assignments for i and j are not compatible the weight of edge i j corresponds to the minimum cost increase due to exchanging one such assignment for the second best clearly this new pair of assignments for tasks i and j can still be infeasible but the sum of their costs is a lower bound to the cost of any compatible assignment for these tasks note that we cannot imply that the accumulated costs of edges incident to a given vertex i are necessary because the graph does not provide information about which of the extremes of an edge i j assumes the second best assignment i e whether c 1 i j c i c i or c 1 i j c j c j it is even possible that following such an exchange for a second best assignment other edges would not even exist in g 1 however one can consider any matching in g 1 corresponding to disjoint pairs of tasks whose best assignments are not compatible therefore the weight of any matching is a required cost increase over j t c j implied by the pairwise incompatibility of the corresponding individual assignments in particular a maximum weighted matching corresponds to the strongest such bound in g 1 9 our second dual bound strengthens the information on the cost of compatible assignments between pairs of tasks let g 2 t e 2 denote a complete graph with a vertex for each task although the following result holds for any number of tasks it would be unnecessarily weaker for odd t because the new bound amounts solely to the weight of a matching in this new graph and some vertex would not be covered to circumvent this in the case that t is odd we simply add to g 2 an artificial vertex s with edges to every other vertex i with costs c 2 s i min c yi yi i the remainder of the paper thus assumes that g 2 and the corresponding bound are defined over an even number of vertices define the cost c 2 i j of an edge in e 2 as the cheapest compatible assignments for tasks i and j that is c 2 i j min c yi c yj yi i yj j yi and yj are compatible then we have the following result theorem 2 let m e 2 be a maximum weighted matching in g 2 then lb 2 e m c 2 e is a lower bound to the optimal value z in 1 proof the weight of a single edge i j e 2 is the sum of the minimum cost assignments for tasks i and j complying with the compatibility constraints among them that is these two assignments alone are compatible a selection of edges not sharing a vertex i e a matching thus corresponds to pairing up tasks and determining their best compatible assignments which is required in any solution satisfying packing constraints 3 therefore the weight of any matching in g 2 is a lower bound to the cost of a feasible solution since this clearly relaxes constraints regarding the compatibility of unpaired tasks a maximum weighted matching thus provides the strongest such bound in g 2 we conclude with a result on the relative strength of the bounds obtained in the two relaxations note that in the simple case where all the best individual assignments are pairwise compatible with each other we verify i the graph g 1 has no edges and the bound lb 1 corresponds to trivial bound j t c j ii any perfect matching m in the graph g 2 has maximum weight amounting to the sum of costs of the best individual assignments therefore the bounds are equal lb 2 i j m c 2 i j i j m c i c j u t c u lb 1 we show below that the second bound is actually stronger than the first 10 theorem 3 the lower bound attained from graph g 2 t e 2 is stronger than that from graph g 1 t e 1 i e for any given problem instance lb 2 lb 1 holds and lb 2 lb 1 for at least one case proof first we remark that specific cases where lb 2 lb 1 are intuitive it suffices to have a pair of vertices for which there are no compatible assignments employing the cheapest execution mode for one of them in the following we suppose there is an instance where lb 1 lb 2 we build a matching in g 2 with cost at least lb 1 showing that the hypothesis is absurd for any edge i j e 1 we can compare the cost functions in g 1 and g 2 recall that the latter graph is complete by definition c 1 i j corresponds to the minimum cost increase implied by the incompatibility of the best individual assignments for i and j while c 2 i j corresponds to the actual sum of the costs of the best compatible assignments it follows that c 2 i j c i c j c 1 i j 6 let m 1 e 1 be a maximum weighted matching in g 1 which thus yields the lower bound lb 1 from that graph we define the analogous set of edges in g 2 as m 2 i j e 2 there exists the edge i j m 1 the set m 2 is a matching in g 2 by construction we distinguish two cases if m 1 is perfect then m 2 is perfect as well since both graphs have the same vertex set we can infer about their weights w m 2 i j m 2 c 2 i j i j m 2 c i c j c 1 i j i j m 1 c 1 i j u t c u lb 1 7 where the first inequality holds by 6 and the second equality is true because the matchings are perfect if m 1 is not perfect there are pairs of vertices x y not covered by m 1 by hypothesis m 1 has maximum weight hence x y 6 e 1 i e the individual assignments of least cost for x and y are compatible therefore the edge in g 2 corresponding to each such pair x y has cost c 2 x y c x c y we can extend m 2 to a perfect matching m 2 in g 2 by arbitrarily 11 connecting pairs of vertices not yet covered by m 2 let c denote the set of edges selected this way such that m 2 m 2 c and x y c c 2 x y x y c c x c y then analogously to the previous case we have w m 2 i j m 2 c 2 i j x y c c 2 x y i j m 2 c i c j c 1 i j x y c c 2 x y i j m 2 c 1 i j u t c u lb 1 8 where the last equalities hold because m 2 covers all vertices therefore the matchings in g 2 built in both cases 7 and 8 have weight at least lb 1 providing a lower bound on lb 2 which is defined as the maximum weight of a matching in g 2 since we start with a general input instance the hypothesis that lb 1 lb 2 could hold is absurd and we always verify that lb 2 lb 1 4 embedding the relaxation in a matheuristic algorithm this section extends our key idea the matching relaxation of the gspp structure into algorithmic results first we derive in section 4 1 a preprocessing method to probe and discard assignments that imply a suboptimal solution as it is done in the work of iris et al 2015 in the context of a port logistics problem next we present in section 4 2 a matheuristic algorithm to find approximate solutions to the problem in reduced computational time 4 1 preprocessing method for variable reduction the results in the previous section yield lower bounds on the optimal value z of problem 1 but can also be extended to a preprocessing method the goal is to fix at null value or equivalently remove a number of decision variables in the resulting model after the enumeration of feasible assignments while preserving any optimal solution 12 it is worth remarking that since this technique is applied prior to the model optimization such a proposal can be integrated with any approach based on enumerating the variables of the gspp formulation and solving the resulting model with an integer linear programming algorithm this strategy has already been adopted by iris et al 2015 using lower bounds implied by probing the selection of a single assignment or a pair of assignments for two different tasks the next result assumes that an upper bound to z is available first we temporarily assume that a given assignment yk k is fixed in the solution we define the complete graph g 2 k t k e 2 k we proceed exactly as in the construction of g 2 towards theorem 2 to ensure that g 2 k has an even number of vertices the corresponding edge costs c 2 k regard the best compatible assignments for two given tasks which are also compatible with yk that is c 2 k i j min c yi c yj yi i yj j yi and yj are compatible with each other and with yk finally we evaluate the increase on the lower bound lb 2 implied by fixing the assignment yk after computing a maximum weighted matching as presented in theorem 2 if the new lower bound exceeds a known upper bound we conclude that this assignment cannot be part of an optimal solution the result is summarized as follows proposition 1 let lb 2 k denote the lower bound from theorem 2 determined over g 2 k given any upper bound ub to z in 1 if c yk lb 2 k ub then there is no optimal solution which includes the assignment yk k and the corresponding variable can be removed from the model therefore we have an iterative algorithm for removing unnecessary variables in the model while preserving all optimal solutions of the problem for each feasible assignment in the gspp formulation one need only evaluate the new lower bound as depicted above note that an analogous method could be derived from theorem 1 nevertheless it follows immediately from theorem 3 that it cannot be stronger i e it cannot remove a variable which 13 the result in proposition 1 does not 4 2 combinatorial ranking matheuristic we introduce next an algorithm belonging to the class of matheuristics or model based heuristics which integrate heuristics and mathematical programming methods maniezzo et al 2010 ribeiro and maniezzo 2015 specifically we employ the combinatorial relaxation bound lb 2 k computed in proposition 1 to obtain a reduced model which is optimized next with an integer linear programming solver we remark that previous strategies in the matheuristics literature include solving a reduced model e g after the heuristic removal of variables fanjul peyro and ruiz 2011 stefanello et al 2015 even in the context of a subproblem of the logistics application that we use to illustrate our ideas see section 5 3 mauri et al 2008 present an evolutionary approach to generate columns using dual values in the lp relaxation as a fitness measure and lalla ruiz and vo 2016 a employ an exact solver to partially optimize components of a previous solution using the popmusic meta heuristic also the early work of shor et al 1996 already describes the optimization of a reduced model for the set packing partitioning problems using lagrangean bounds to rank variables first note that every solution to the gspp formulation consists of only t as signments one could wonder if there would be a fast method for classifying variables such that high quality solutions could be consistently achieved using only a fraction of the best ranked variables in this context we discard the optimality certificate and seek a high quality solution in reduced computation time the core of the method we propose is depicted in algorithm 1 which ranks and selects a subset f of variables from the gspp formulation the selection builds on the combinatorial bound lb 2 k from proposition 1 denoted by k in the algorithm and computed on the loop starting at line 3 the set of selected variables f corresponds to a subset of the polyhedron pgspp and optimizing over it provides an upper bound z z to the original problem 1 as we indicate in preliminary computational results section 6 this bound can match the optimal value for benchmark instances of an application in port logistics even when using a 14 relatively small fraction of variables the algorithm parameters are as follows the least fraction of the best ranked variables to include in the final model the least number of variables corresponding to each task which the algorithm should ensure when available in the final model the latter parameter ensures that each task has a number of assignment options as selected in the loop starting at line 13 while controls the selection of variables among those implying the best dual bounds loop starting at line 8 it would be natural to consider algorithm variations e g selecting an exact number of variables or performing a statistical study of the parameters both tasks could be approached in future work now the complete matheuristic algorithm is defined and we summarize it in the following three steps 1 enumerate the initial set of individual assignments from the problem instance 2 execute algorithm 1 to define f corresponding to a subset of individual assignments more likely to build a good solution according to the combinatorial bound 3 solve the ip problem 1 corresponding only to the reduced model over f we remark that since the matheuristic approach gives up on the optimality certificate it is not imperative to reach a null duality gap in the resulting model to end the algorithm such a strategy might be interesting in the event of an application with challenging runtime requirements obviously even if one is able to find a best solution to the reduced model its optimality in the actual problem instance is by no means implied finally we also note that on the one hand the approach could be used with any lower bound such as computing lp relaxations on the other we argue that algorithm 1 is useful because of the efficient combinatorial bound as opposed to the corresponding time to solve lp relaxations in the loop starting at line 3 that is instead of solving as many lp problems as to determine the lower bounds k implied by fixing each variable yk we reduce the 15 algorithm 1 combinatorial ranking input initial set of variables number of tasks t output set f of variables selected for the final model parameters least fraction of the best ranked variables least number of variables per task 1 f 2 k 0 for each yk 3 foreach variable yk do 4 let g 2 k be the graph of compatible assignments defined in proposition 1 5 let m be a maximum weighted matching in g 2 k lower bound implied by using this variable see prop 1 6 k c yk e m c 2 e 7 let l denote the list of variables in ordered by increasing values of 8 while f do 9 let d be the least value of a variable in l 10 foreach variable yk l with k d do 11 f f yk 12 l l yk 13 foreach task i 1 t do 14 while y f y is an assignment for i and l contains a variable referring to i do 15 let yi l be a variable referring to i of least 16 f f yi 17 l l yi 18 return f computational effort to iterations of the construction of graph g 2 k and the solution of a weighted matching problem on a graph with just t vertices in section 6 we present the results of a successful computational experience with this algorithm using benchmark instances from a maritime logistics application concerning the execution time matter even in the most difficult set of instances solutions within 4 of the optimal value are provided with an average of 30 of the time required by methods recently introduced in the literature on the other hand for the sake of illustration even if it took 1 second to build and solve the corresponding lp relaxation model a medium size instance with 100 000 assignments would already take over a day to compute f 16 5 sample applications in this section we aim to give straightforward examples from the literature in which rele vant applications are formulated as different generalizations of a set partitioning problem in each case we give a brief problem definition transcribe its ip formulation from the literature and show at intuition level that they are amenable to the combinatorial constructions from sections 3 and 4 the job scheduling problem in section 5 1 is in direct correspondence with the gspp structure that we present in the introduction as for the applications in crew disruption management section 5 2 and port logistics section 5 3 we highlight the interesting possi bility to translate application features into small extensions of the matching relaxation 5 1 job scheduling in parallel machines lalla ruiz and vo 2016 b concern the following problem denoted parallel machine scheduling with step deteriorating jobs suppose that m identical parallel machines are available in a planning horizon h and that n jobs are to be scheduled each consuming a processing time varying among two constants as follows if the assigned starting time is on a deteriorating date di or before the job takes a base processing time ai if it starts after that date it requires processing time ai bi for each job i 1 n constants ai bi and di are input parameters the objective function is to minimize the sum of the completion times of all jobs the base formulation used by those authors corresponds precisely to the gspp structure in 1 5 as we describe next the set of columns is also denoted by each column corresponds to a variable xw representing a feasible assignment to an individual job thus any assignment w in this problem encodes the particular machine in which it is processed the starting and finishing times and a fixed cost cw any selection of individual assignments to different jobs is compatible if no machine is used at a same time slot by more than one job lalla ruiz and vo also define the index set p such that p m h corresponding to machine and time slot combinations this corresponds to k 2 resources in our base structure 17 the authors use binary coefficient matrices a bn and b b p defined likewise 2 and 3 to express partitioning and packing constraints then lalla ruiz and vo 2016 b present the following ip formulation min w cwxw 9 subject to w aiwxw 1 i 1 n 10 w bpwxw 1 p p 11 xw 0 1 w 12 we thus conclude this is trivially equivalent to the gspp structure under investigation in this paper note the 1 1 correspondence between variables xw above and yj in the base gspp between entries aiw in 10 and aij in 2 and between bpw in 11 and brj in 3 therefore all among the combinatorial constructions of graph g 2 and the bound lb 2 theorem 2 the variable probing test proposition 1 and the matheuristic in algorithm 1 carry over to this problem as presented before the next applications are more interesting in the sense that the base gspp structure provides only a relaxation of the formulated problem making space for application specific tweaks nevertheless we highlight the fact that the base structure can as it is model such relevant topics as the job scheduling problem above 5 2 crew disruption management rezanova and ryan 2010 investigate the train driver recovery problem which aims to find the best assignment of tasks to replacement duties for train drivers when the railway operator has to recover from a disruption in the occasion of internal or external failures e g due to track conditions accidents or passanger delays such that the slack time built into the timetable is not enough to restore the original plan a recovery mission with the re routing 18 or cancelling of trains is performed dealing with the propagation of disruptions within the schedule makes the problem rather challenging for the operator the application itself includes a range of details which is beyond the scope of our discus sion while we limit the description below to the optimization of recovery duties the elegant work of rezanova and ryan concerns several auxiliary issues around that central matter and they evaluate their contributions in the context of real life data from a danish railway operator we start with a so called disruption neighbourhood let k denote a subset of train drivers whose duties include at least one disrupted train task within a given recovery period which is our planning horizon the remaining drivers keep their former duties and are not included in the model also let n denote the set of all tasks originally assigned to drivers in k during the period while p k denotes the set of acceptable recovery duties for each driver k k in this model each individual assignment such a recovery duty p p k encodes a subset of tasks in n and a fixed cost ckp corresponding to a measure of its unattractiveness to driver k the goal of the train driver recovery problem is to find a selection of individual assignments to each driver in k i e a feasible recovery duty of least total cost such that each task in n is covered exactly once to this end rezanova and ryan use binary decision variables xkp set to one iff duty p p k is chosen they also define a coefficient matrix analogous to b in the packing constraints 3 of the gspp structure let a with n lines and a column for each duty of each driver be such that akip is one if task i is covered by duty p p k and zero otherwise now we can repeat their formulation in 13 16 below min k k p p k ckpx k p 13 subject to p p k xkp 1 k k 14 k k p p k akipx k p 1 i n 15 xkp 0 1 p p k k k 16 19 note that variables yj in the base gspp i e the complete collection of assignments correspond to expanding xkp for all k k therefore summing x k p over the different p k in constraints 14 corresponds to the sum over all the products aijyj in 2 where coefficients aij select only the assignments to task i in each equality analogously the double summation over each k k and each p p k in 15 corresponds to the sum of all assignments yj in 3 and the tasks in the driver recovery problem elements in n consist of the single resource to be distributed among the assignments i e the analougous of set r in gspp is one dimensional in this application now the transformation of this formulation into the gspp structure we consider allows for two possible relaxations in each case we describe what is relaxed what corresponds to the packing constraints and compare the combinatorial constructions and bounds a first more natural approach would be to relax equality constraints for tasks allowing arbitrary i n to remain uncovered in the solution that is we replace 15 by k k p p k akipx k p 1 i n 17 then formulation 13 14 16 17 is a relaxation of the one by rezanova and ryan and it can also be viewed as an instance of the base gspp structure with a single shared resource in this case the new combinatorial relaxation yielding the bound in theorem 2 consists of solving the weighted matching problem in a complete graph g 2 with a vertex for each driver such that the cost of an edge i j corresponds to the cheapest non overlapping duties for the drivers i and j here non overlapping means only that no task is included in both duties of that pair of drivers the bound thus sums up to pairing up drivers and finding cheapest pairwise compatible combinations some tasks will likely remain uncovered others might be included in duties of two or more unpaired drivers considering the real world instances solved in the work of rezanova and ryan 2010 we verify that the number of drivers k and the number of tasks n have the same order of magnitude since there is a collection of possible duties for each driver k 1 k and matrix a includes a column corresponding to each duty a should have many more columns 20 than lines therefore the improvement of the bound described above compared to simply removing all constraints in 15 could be negligible interestingly since the formulation has two partitioning constraints one can conceive an alternative approach relaxing instead the equality in constraints 14 into p p k xkp 1 k k 18 we therefore regard the integer program 13 15 16 18 as a new relaxation which requires that all tasks are covered exactly once while allowing some drivers to remain idle from this point the new matching relaxation attaining the bound from theorem 2 for this application builds on a complete graph with a vertex for each task now the weight of an edge i j is determined by the cheapest pair of recovery duties covering both taks i and j exactly once in which no driver is assigned two different duties that is the compatibility oracle would return the cost of either i a single duty for the same driver including both tasks or ii two duties for different drivers each covering one of the tasks but not the other we remark that imparting more application details on the oracle decision for pairwise compatible assignments i e possibly tightening the gap towards an overall feasible solution could increase the edge weights and consequently strengthen the matching bound 5 3 port logistics our last sample application is also the subject matter of our preliminary computational evaluation in the next section the berth allocation and quay crane assignment problem bacap aims to allocate a berthing time a position in the quay and a number of quay cranes qcs for arriving vessels in a seaport container terminal feasible assignments in the bacap need to fulfil requirements on desired berthing period and position and an agreement on the use of qcs general reviews and a taxonomy to compare related work can be found in the surveys of stahlbock and vo 2008 bierwirth and meisel 2010 and bierwirth and meisel 2015 we follow the presentation by iris et al 2015 who give a precise description of the 21 application characteristics and a clear classification of related literature let v be the set of vessels t be the set of time slots in the planning horizon l be the set of berthing positions in the quay andk be the number of available qcs also define the set of berthing time position combinations p t l this corresponds to two shared resources in our base gspp structure they define the set as we have used throughout this paper the complete set of feasible individual allocations in this case each element j encondes a suitable space in the quay time slots and a number of cranes to serve a given vessel besides its cost cj this cost in turn depends on qc usage deviations from parameters on the desired position on the quay and expected starting and finishing times for the service binary decision variables y b indicate which individual assignments are used in the solution finally the coefficient matrices are in accordance with those in our description of the base gspp as we describe next a b v associates each column with a single vessel aij is equal to one if column j refers to an assignment for vessel i otherwise it is equal to zero b b p represents berths as combinations of time intervals and quay positions bpj is one iff the given pair of time space positions corresponding to p p is used in the assignment yj an element of q z t determines how many qcs are used by yj in time period t then the bacap formulation described by iris et al 2015 corresponds to min j cjyj 19 subject to j aijyj 1 i v 20 j bpjyj 1 p p 21 j qtjyj k t t 22 yj 0 1 j 23 set partition constraints 20 ensure that all vessels are served by exactly one assignment while set packing in 21 forbid overlapping of vessel assignments in each single time space 22 slot inequalities 22 guarantee that qcs availability in the terminal is respected it is clear then that one need only relax the latter set of inequalities 22 to view the formulation by iris et al as an instance of the base gspp structure we concern with a two dimensional analougous of the set r of resource tuples in this application time slots and quay space combinations the remainder of the above formulation is in 1 1 correspondence with the base gspp the matching relaxation from theorem 2 can thus be determined on a complete graph with a vertex for each vessel where the cost of an edge amounts to the weight of a cheapest compatible pair of assignments to the corresponding vessels finally we remark that two assignments for different vessels in the bacap are denoted compatible if they have no overlap in berthing time and space equivalently representing the two assignments in a cartesian plane with time and space coordinates they are compatible iff the corresponding rectangles do not intersect each other we can further tighten the definition of compatibility in this application by limiting the combined number of cranes used by two given assignments to the maximum available in the quay as in the case of the previous application this stronger compatibility criterion might rule out pairs of assignments and increase edge weights in g 2 possibly strengthening the matching bound 6 a computational case study the goals of the computational evaluation we present are twofold first we want to com pare the linear programming and the matching relaxations to evaluate the trade off between the strength of the bound and the time to compute it second we seek to assess the quality of the solutions provided by the matheuristic we introduced toward these ends we have implemented a series of algorithms concerning the last application we described the berth allocation and quay crane assignment problem bacap we consider the same benchmark instances used by meisel and bierwirth 2009 and iris et al 2015 to evaluate the efficiency of the proposed algorithms there are thirty instances of three different sizes ten of each 20 small 30 medium and 40 large vessels all algorithms were implemented in c using gurobi solver version 6 5 the number 23 of execution threads allowed for gurobi to solve each ip model was set to 2 in the case of instances with 20 or 30 vessels while a single thread is allowed to solve instances with 40 vessels since the gurobi solver needs copies of the complete model for each execution thread we verified improved performance using this setting because no virtual memory is needed to compute maximum weighted matchings with the blossom shrinking algorithm by edmonds 1965 we used the efficient implementation available in the open source library for efficient modeling and optimization in networks lemon dezso et al 2011 the time complexity of that implementation is o mn log n in the worst case where n is the number of graph vertices and m is the number of edges all experiments were run in a machine with an intel core i 7 4790 k 4 00 ghz cpu and 16 gb of ram the solver runtime used in the matheuristic experiments was limited to 1800 seconds the experiments corresponding to the solution approach proposed by iris et al 2015 were not time limited it is important to highlight that all results we present concerning the work by those authors were evaluated with our own implementation of their algorithms moreover the numbers concerning their results may have slight variations when compared to the original work which we have concluded to be explained by numeric precision matters first we compare the lower bounds and the runtime to compute the combinatorial relax ation against the lp relaxation table 1 presents the corresponding bounds in columns 3 and 4 column 5 indicates the percentual difference of the combinatorial bound with respect to the lp relaxation one columns 6 and 7 present the execution time required by each method the combinatorial bound matches the lp relaxation value for two instances but it is consistently weaker and the difference also grows with the input size nevertheless while building the model and solving its lp relaxation consumes significant time building the graphs representing compatible assignment and solving the corresponding weighted matching problem is performed very fast in comparison one can thus argue that when choosing a lower bound to use in the variable reduction technique or in the matheuristic algorithm the computational performance of the matching relaxation is the crucial factor since a lower bound must be computed after probing each variable and even the smallest instances have tens of thousands of variables the runtime of 24 table 1 results attained with the combinatorial and the linear programming relaxations instance lower bounds time s v id lp matching difference lp matching relaxation relaxation relaxation relaxation 20 1 885 0 698 0 21 1 5 61 0 01 2 562 0 562 0 0 0 0 16 0 00 3 816 5 646 0 20 9 6 69 0 02 4 762 0 620 0 18 6 7 37 0 02 5 592 0 516 0 12 8 1 62 0 01 6 592 0 592 0 0 0 1 23 0 00 7 722 0 646 0 10 5 2 77 0 00 8 582 0 532 0 8 6 4 02 0 00 9 782 0 620 0 20 7 6 47 0 01 10 930 7 700 0 24 8 9 34 0 02 lbgap i 20 13 8 30 11 1 408 8 922 0 34 6 29 98 0 06 12 891 3 800 0 10 2 5 23 0 01 13 1 091 7 894 0 18 1 7 64 0 02 14 1 036 5 880 0 15 1 12 19 0 02 15 1 600 1 1 046 0 34 6 36 58 0 09 16 1 137 0 1 008 0 11 3 7 56 0 01 17 1 084 0 894 0 17 5 9 07 0 02 18 1 245 0 860 0 30 9 31 71 0 07 19 1 705 0 1 052 0 38 3 44 07 0 08 20 1 354 4 1 008 0 25 6 22 13 0 03 lbgap i 30 23 6 40 21 2 058 8 1 150 0 44 1 94 29 0 22 22 1 680 0 1 288 0 23 3 36 68 0 12 23 2 380 7 1 250 0 47 5 102 59 0 28 24 2 727 0 1 544 0 43 4 118 38 0 38 25 1 559 9 1 102 0 29 4 44 00 0 13 26 2 364 1 1 294 0 45 3 97 34 0 31 27 1 965 8 1 222 0 37 8 58 83 0 18 28 2 533 3 1 412 0 44 3 122 40 0 41 29 2 071 8 1 404 0 32 2 65 54 0 16 30 1 872 5 1 240 0 33 8 73 21 0 21 lbgap i 40 38 1 lbgap i v stands for the arithmetic mean of the percentual difference in the bounds for instances with v vessels the lp relaxation becomes prohibitive in this context next we executed different experiments to evaluate the matheuristic algorithm we stress again that the matheuristic approach waives the optimality certificate of a solution in the sake of a reduced computation time in the following we verify this outcome and assess the 25 strength of the solutions attained in comparison with the exact approach in the literature several matheuristic parameter combinations were tested with 0 0 0 1 0 2 0 3 and 500 1000 1500 2000 preliminary evaluations with 0 and different choices for had a poor performance leading to such an extreme reduction that the resulting model was infeasible for at least one instance i e the corresponding polyhedron does not include a single integer point this is important to justify the final step in our algorithm requiring at least variables corresponding to each vessel the four parameter combinations with 0 0 0 1 and 500 1000 also led to an infeasible model for at least one instance the remaining combinations always found an integer feasible solution we report in table 2 the results with the configuration 0 1 2000 which yields the least average gapopt between the best primal solutions and the known optima for each instance we present the optimal solution value z the percentage of variables remaining after the matheuristic filter f followed by the cost z of the best solution found through the matheuristic and its gapopt to the optimal value z in the next columns we present the partial runtime pc of applying our combinatorial reduction technique from proposition 1 and the partial runtime pi of applying the one by iris et al 2015 then follows the respective total runtimes tc and ti i e the sum of the times for preprocessing and for solving the mathematical model the last column presents the runtime improvement of our proposal compared to the one from the literature e tc ti 100 it can be seen from these results that the proposed methodology is able to find the known optimal solution in 83 of instances while the gap is below 4 for those solutions which are not optimal note that the runtime efficiency of our methodology is inferior to the literature in half of the instances with 20 vessels and in one of the medium instances nevertheless these results do not have a significant impact because the corresponding execution times are at most 44 seconds and the time difference between the methods does not exceed 2 seconds for example while instance 2 is solved instantaneously by the technique from the literature it takes 1 09 seconds using the matheuristic therefore our proposal looses on the average efficiency for small instances on the other hand observing the results for medium and large instances in the benchmark 26 table 2 results concerning quality of solutions and runtime instance matheuristic results runtime efficiency matheuristic iris et al 2015 v id z f z gapopt pc s tc s pi s ti s e 20 1 89 00 60 84 89 00 0 00 32 44 56 65 14 84 64 28 88 13 2 56 20 100 00 56 20 0 00 1 01 1 09 0 09 0 16 681 25 3 85 70 59 09 85 70 0 00 9 63 73 19 0 79 114 73 63 79 4 81 80 47 86 81 80 0 00 8 58 39 24 2 22 60 22 65 16 5 59 20 99 13 59 20 0 00 2 62 7 99 0 16 7 59 105 27 6 59 20 100 00 59 20 0 00 1 53 6 73 0 16 5 09 132 22 7 75 20 94 32 75 20 0 00 6 42 21 33 2 56 19 92 107 08 8 61 40 73 20 61 40 0 00 5 39 22 10 0 95 21 41 103 22 9 79 00 52 22 79 00 0 00 16 37 45 45 3 77 54 32 83 67 10 101 00 45 56 101 00 0 00 26 05 76 27 3 13 214 43 35 57 e 20 101 34 30 11 143 20 31 43 143 20 0 00 60 66 186 16 7 64 421 91 44 12 12 92 00 87 55 92 00 0 00 13 59 43 93 0 85 43 67 100 60 13 110 00 66 45 110 00 0 00 24 53 64 00 3 01 85 90 74 51 14 107 40 50 85 107 40 0 00 28 50 111 48 6 73 164 24 67 88 15 168 40 26 53 168 40 0 00 70 46 236 08 10 64 665 77 35 46 16 121 60 72 09 121 60 0 00 57 76 144 80 22 03 153 33 94 44 17 109 40 61 39 109 40 0 00 28 97 73 98 4 30 85 56 86 47 18 135 00 28 24 135 00 0 00 56 29 253 90 10 72 651 13 38 99 19 176 20 23 18 176 20 0 00 86 51 252 40 27 41 737 74 34 21 20 139 80 38 27 139 80 0 00 70 84 204 72 28 60 346 50 59 08 e 30 59 01 40 21 246 80 16 20 252 60 2 30 235 29 2035 52 20 90 9237 00 22 04 22 178 40 30 14 178 40 0 00 171 43 449 33 45 42 694 91 64 66 23 266 30 15 39 266 30 0 00 322 13 1771 94 131 24 14516 88 12 21 24 307 00 15 39 318 20 3 52 1788 03 3588 11 538 36 11071 74 32 41 25 164 60 28 63 164 60 0 00 105 97 457 75 8 21 1049 86 43 60 26 258 20 16 31 261 90 1 41 274 46 2074 55 89 55 4337 52 47 83 27 205 40 19 92 205 40 0 00 171 92 454 28 17 81 1520 09 29 89 28 294 20 16 04 301 30 2 36 518 37 2318 46 66 65 42988 26 5 39 29 227 60 19 96 229 70 0 91 680 40 2480 52 567 79 2563 04 96 78 30 210 10 18 57 210 10 0 00 223 22 1470 65 46 59 4354 89 33 77 e 40 30 14 f m 1 100 where m denotes the number of variables remaining after the matheuristic filter and 1 denotes the number of variables after the enumeration and preprocessing phases e tc ti 100 e v corresponds to the geometric mean of e for instances with v vessels it is clear that the matheuristic times are significantly smaller than those from the exact method presented by iris et al 2015 the known optimal solution is found in all instances with 30 vessels spending on average 59 of the time spent by the exact method for more 27 difficult instances with 40 vessels the known optimal solution is attained in half of the cases while very good solutions can be achieved using about 30 of the time consumed by the baseline method considering instance 23 for example the optimal solution is obtained 8 times faster by the matheuristic algorithm in instance 28 the matheuristic consumes less than 6 of literature algorithm runtime to find a solution within less than 3 of the optimal value these results suggest that ranking the variables with the combinatorial bound is an effective selection criterion the model size decreases drastically the runtime reduces consistently in instances with more challenging dimensions while keeping solutions within 4 of the optimum 7 concluding remarks we investigate in this work two discrete relaxations for the class of combinatorial opti mization problems which can be described by a set partitioning formulation under packing constraints we introduce two lower bounds to this class of generalized set partitioning prob lems gspp based on computing weighted matchings on suitable graphs we prove that one of these bounds is stronger than the other and on the algorithmic side use the relaxations as the basis of a variable reduction technique and of a matheuristic method we seek to claim attention to the relevance of the gspp structure as interesting in its own right and indicate that it can be used to model different applications in the recent literature for instance we apply that base gspp and our constructions to three sample applications concerning job scheduling crew disruption management and maritime logistics in the particular case of the latter application we have conducted a computational case study and the matching relaxation setup has proven useful to reach the known optimal solutions on 83 of the benchmark instances of the problem otherwise the solutions were within 4 of the optimal value while using an average of 30 of the time required by methods recently introduced in the literature it is worth remarking that the purely combinatorial constructions that we devised may be extended to include application specific features as we illustrate with two possible relaxations 28 in the case of the train driver recovery problem and with the stronger compatibility criterion depicted in the port logistics problem there are several tracks for future work on this problem first the subproblem of deter mining the best compatible assignments for two tasks is critical in the computation time of the combinatorial bound and therefore the variable reduction technique one could investigate whether specialized data structures would allow designing a more efficient implementation we also suggest the statistical study of matheuristic variants using different criteria for choos ing its parameters finally it could be interesting to study alternative relaxations of the base gspp structure e g comparing combinatorial and lagrangean bounds or even extending the relax and cut approach of cavalcante et al 2008 to the gspp we explore references a i ali and h thiagarajan a network relaxation based enumeration algorithm for set partitioning european journal of operational research 38 1 76 85 1989 url http dx doi org 10 1016 0377 2217 89 90471 2 a atamtu rk g l nemhauser and m w savelsbergh conflict graphs in solving integer programming problems european journal of operational research 121 1 40 55 2000 url http dx doi org 10 1016 s 0377 2217 99 00015 6 e balas and m w padberg set partitioning a survey siam review 18 4 710 760 1976 url http dx doi org 10 1137 1018115 m o ball u derigs c hilbrand and a metz matching problems with gen eralized upper bound side constraints networks 20 6 703 721 1990 url http dx doi org 10 1002 net 3230200602 c bierwirth and f meisel a survey of berth allocation and quay crane scheduling problems in container terminals european journal of operational research 202 3 615 627 2010 issn 0377 2217 url http dx doi org 10 1016 j ejor 2009 05 031 29 http dx doi org 10 1016 0377 2217 89 90471 2 http dx doi org 10 1016 s 0377 2217 99 00015 6 http dx doi org 10 1137 1018115 http dx doi org 10 1002 net 3230200602 http dx doi org 10 1016 j ejor 2009 05 031 c bierwirth and f meisel a follow up survey of berth allocation and quay crane scheduling problems in container terminals european journal of operational research 244 3 675 689 2015 issn 0377 2217 url http dx doi org 10 1016 j ejor 2014 12 030 r borndo rfer aspects of set packing partitioning and covering phd thesis doctoral dissertation ph d thesis technischen universita t berlin germany 1998 r borndo rfer combinatorial packing problems in the sharpest cut chapter 3 pages 19 32 society for industrial and applied mathematics siam 2004 url http locus siam org doi abs 10 1137 1 9780898718805 ch 3 r borndo rfer and r weismantel discrete relaxations of combinatorial programs discrete applied mathematics 112 1 3 11 26 2001 issn 0166 218 x url http dx doi org 10 1016 s 0166 218 x 00 00307 3 m a boschetti a mingozzi and s ricciardelli a dual ascent procedure for the set partitioning problem discrete optimization 5 4 735 747 2008 url https doi org 10 1016 j disopt 2008 06 001 r e campello and n f maculan lagrangean relaxation for a lower bound to a set partitioning problem with side constraints properties and algorithms discrete applied mathematics 18 2 119 136 1987 issn 0166 218 x url http dx doi org 10 1016 0166 218 x 87 90015 1 v f cavalcante c c de souza and a lucena a relax and cut algorithm for the set partitioning problem computers operations research 35 6 1963 1981 2008 issn 0305 0548 url http dx doi org 10 1016 j cor 2006 10 009 t j chan and c a yano a multiplier adjustment approach for the set partitioning problem operations research 40 supplement 1 optimization s 40 s 47 1992 url https doi org 10 1287 opre 40 1 s 40 b dezso a ju ttner and p kova cs lemon an open source c graph template 30 http dx doi org 10 1016 j ejor 2014 12 030 http locus siam org doi abs 10 1137 1 9780898718805 ch 3 http dx doi org 10 1016 s 0166 218 x 00 00307 3 https doi org 10 1016 j disopt 2008 06 001 http dx doi org 10 1016 0166 218 x 87 90015 1 http dx doi org 10 1016 j cor 2006 10 009 https doi org 10 1287 opre 40 1 s 40 library electronic notes in theoretical computer science 264 5 23 45 2011 issn 1571 0661 url http dx doi org 10 1016 j entcs 2011 06 003 j edmonds paths trees and flowers canadian journal of mathematics 17 449 467 1965 url http cms math ca 10 4153 cjm 1965 045 4 e el darzi and g mitra graph theoretic relaxations of set covering and set partition ing problems european journal of operational research 87 1 109 121 1995 url http dx doi org 10 1016 0377 2217 94 00115 s l fanjul peyro and r ruiz size reduction heuristics for the unrelated parallel machines scheduling problem computers operations research 38 1 301 309 2011 issn 0305 0548 url http dx doi org 10 1016 j cor 2010 05 005 project management and scheduling m l fisher and p kedia optimal solution of set covering partitioning prob lems using dual heuristics management science 36 6 674 688 1990 url http dx doi org 10 1287 mnsc 36 6 674 k l hoffman and m padberg solving airline crew scheduling prob lems by branch and cut management science 39 6 657 682 1993 url https doi org 10 1287 mnsc 39 6 657 c iris d pacino s ropke and a larsen integrated berth allocation and quay crane assignment problem set partitioning models and computational results transportation research part e logistics and transportation review 81 75 97 2015 issn 1366 5545 url http dx doi org 10 1016 j tre 2015 06 008 y h kuo and j m leung on the mixed set covering packing and partitioning poly tope discrete optimization 22 part a 162 182 2016 issn 1572 5286 url http dx doi org 10 1016 j disopt 2016 05 004 e lalla ruiz and s vo popmusic as a matheuristic for the berth allocation problem 31 http dx doi org 10 1016 j entcs 2011 06 003 http cms math ca 10 4153 cjm 1965 045 4 http dx doi org 10 1016 0377 2217 94 00115 s http dx doi org 10 1016 j cor 2010 05 005 http dx doi org 10 1287 mnsc 36 6 674 https doi org 10 1287 mnsc 39 6 657 http dx doi org 10 1016 j tre 2015 06 008 http dx doi org 10 1016 j disopt 2016 05 004 annals of mathematics and artificial intelligence 76 1 173 189 2016 a issn 1573 7470 url http dx doi org 10 1007 s 10472 014 9444 4 e lalla ruiz and s vo modeling the parallel machine scheduling problem with step de teriorating jobs european journal of operational research 255 1 21 33 2016 b issn 0377 2217 url http dx doi org 10 1016 j ejor 2016 04 010 a n letchford on disjunctive cuts for combinatorial optimization jour nal of combinatorial optimization 5 3 299 315 2001 issn 1573 2886 url http dx doi org 10 1023 a 1011493126498 j t linderoth e k lee and m w savelsbergh a parallel linear programming based heuristic for large scale set partitioning problems informs journal on computing 13 3 191 209 2001 url https doi org 10 1287 ijoc 13 3 191 12630 v maniezzo t stu tzle and s vo matheuristics hybridizing metaheuristics and math ematical programming volume 10 of annals of information systems springer us 2010 isbn 978 1 4419 1305 0 url http dx doi org 10 1007 978 1 4419 1306 7 g r mauri a c m oliveira and l a n lorena a hybrid column generation approach for the berth allocation problem in j van hemert and c cotta editors proc evocop 2008 naples italy volume 4972 of lecture notes in computer science pages 110 122 springer berlin heidelberg 2008 url http dx doi org 10 1007 978 3 540 78604 7 10 f meisel and c bierwirth heuristics for the integration of crane productiv ity in the berth allocation problem transportation research part e logis tics and transportation review 45 1 196 209 2009 issn 1366 5545 url http dx doi org 10 1016 j tre 2008 03 001 g l nemhauser and g m weber optimal set partitioning matchings and la grangian duality naval research logistics nrl 26 4 553 563 1979 url http dx doi org 10 1002 nav 3800260401 32 http dx doi org 10 1007 s 10472 014 9444 4 http dx doi org 10 1016 j ejor 2016 04 010 http dx doi org 10 1023 a 1011493126498 https doi org 10 1287 ijoc 13 3 191 12630 http dx doi org 10 1007 978 1 4419 1306 7 http dx doi org 10 1007 978 3 540 78604 7 10 http dx doi org 10 1016 j tre 2008 03 001 http dx doi org 10 1002 nav 3800260401 d w pentico assignment problems a golden anniversary survey eu ropean journal of operational research 176 2 774 793 2007 url http dx doi org 10 1016 j ejor 2005 09 014 n j rezanova and d m ryan the train driver recovery problem a set partitioning based model and solution method computers operations research 37 5 845 856 2010 issn 0305 0548 url http dx doi org 10 1016 j cor 2009 03 023 c c ribeiro and v maniezzo preface to the special issue on matheuristics model based metaheuristics international transactions in operational research 22 1 1 1 2015 issn 1475 3995 url http dx doi org 10 1111 itor 12142 d m ryan the solution of massive generalized set partitioning problems in air crew rostering journal of the operational research society 43 5 459 467 1992 url https doi org 10 2307 2583565 a sebo characterizing noninteger polyhedra with 0 1 constraints in integer programming and combinatorial optimization 6 th international ipco conference volume 1412 of lec ture notes in computer science pages 37 52 springer berlin heidelberg 1998 isbn 978 3 540 69346 8 url http dx doi org 10 1007 3 540 69346 7 4 n z shor y v voitishin and v glushkov using dual network bounds in algorithms for solving generalized set packing partitioning problems computational optimization and applications 6 3 293 303 1996 url https doi org 10 1007 bf 00247796 r stahlbock and s vo operations research at container termi nals a literature update or spectrum 30 1 1 52 2008 url http link springer com article 10 1007 s 00291 007 0100 9 f stefanello o c b de arau jo and f m mu ller matheuristics for the capacitated p median problem international transactions in operational research 22 1 149 167 2015 issn 1475 3995 url http dx doi org 10 1111 itor 12103 33 http dx doi org 10 1016 j ejor 2005 09 014 http dx doi org 10 1016 j cor 2009 03 023 http dx doi org 10 1111 itor 12142 https doi org 10 2307 2583565 http dx doi org 10 1007 3 540 69346 7 4 https doi org 10 1007 bf 00247796 http link springer com article 10 1007 s 00291 007 0100 9 http dx doi org 10 1111 itor 12103 1 introduction 1 1 the base gspp 1 2 our contributions 2 on the literature of generalized set partitioning problems 3 matching relaxations of the gspp 4 embedding the relaxation in a matheuristic algorithm 4 1 preprocessing method for variable reduction 4 2 combinatorial ranking matheuristic 5 sample applications 5 1 job scheduling in parallel machines 5 2 crew disruption management 5 3 port logistics 6 a computational case study 7 concluding remarks