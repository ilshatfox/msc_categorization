risk aware submodular optimization for stochastic travelling salesperson problem rishab balasubramanian lifeng zhou pratap tokekar and p b sujit abstract we introduce a risk aware variant of the traveling salesperson problem tsp where the robot tour cost and reward have to be optimized simultaneously while being subjected to uncertainty in both we study the case where the rewards and the costs exhibit diminishing marginal gains i e are submodular since the costs and the rewards are stochastic we seek to maximize a risk metric known as conditional value at risk cvar of the submodular function we propose a risk aware greedy algorithm raga to find an approximate solution for this problem the approximation algorithm runs in polynomial time and is within a constant factor of the optimal and an additive term that depends on the value of optimal solution we use the submodular function s curvature to improve approximation results further and verify the algorithm s performance through simulations i introduction determining an optimal tour to visit all the locations in a given set while minimizing maximizing a metric is the classical travelling salesperson problem tsp that finds applications in robotics logistics etc however there are several applications where the environment is dynamic and uncertain as a result of which classical approaches to solv ing the tsp are insufficient examples include determining routes to visit active volcanic regions where the activity has temporal variability for obtaining scientific information as shown in fig 1 determining routes for a logistic delivery vehicle in dense urban regions with uncertain traffic etc in such scenarios the risk due to uncertainty in the travel times and or the rewards collected along the path needs to be considered while determining the tour several approaches to stochastic tsp have been presented in the literature in 1 a two step process to convert the tsp to a multi integer linear programming problem and then introduce a meta heuristic based on the probabilistic hedging method proposed in 2 is carried out paulin 3 uses an extension of stein s method for exchangeable pairs to rishab balasubramanian is research associate at iiser bhopal bhopal 462066 india email rishab edu gmail com lifeng zhou was with the department of electrical and com puter engineering virginia tech blacksburg va usa when part of the work was completed he is currently with the grasp lab oratory university of pennsylvania philadelphia pa usa email lfzhou seas upenn edu pratap tokekar is assistant professor in the department of computer science at the university of maryland college park md 20742 usa email tokekar umd edu p b sujit is associate professor in the department of electrical engineer ing and computer science iiser bhopal bhopal 462066 india email sujit iiserb ac in this work is supported in part by the national science foundation under grant no 1943368 approach the stochastic salesperson problem in 4 5 and 6 the authors develop a genetic algorithm to approach the uncertainty in tsp in 7 a constant factor approximation algorithm is developed for a dubin s vehicle visiting all the points with cost minimization being the main objective in 8 again an approximation algorithm is presented to minimize the time taken to visit the targets that are appearing stochastically in the environment in all the above articles the risk is not considered directly we argue that a different approach is necessary in many risk sensitive applications specifically instead of optimizing the expected cost optimizing a risk sensitive measure may be more appropriate in this paper we focus on this case and present a risk aware tsp formulation to do so we develop an approximation to the stochastic tsp with the optimization objective represented as a submodular function the resulting algorithm takes as input a risk tolerance parameter and produces a tour that maximizes the expected behavior in the worst percentile cases thus the user can choose tours ranging from risk neutral 1 to very conservative 0 an important property of submodular functions are their diminishing marginal values the use of submodular func tions is wide spread from information gathering 9 and image segmentation 10 to document summarization 11 rockafellar and uryasev 12 introduce a relationship be tween a submodular function and the conditional value at risk cvar cvar is a risk metric that is commonly employed in stochastic optimization in finance and stock portfolio optimization another popular measure of risk is the value at risk var 13 which is commonly used to formulate the chance constrained optimization problems in 14 and 15 the authors study the chance constrained optimization problem while also considering risk in the multi robot assignment and then extend it to a knapsack formulation in a comparison between the var and cvar majumdar and pavone 16 propose that the cvar is a better measure of risk for robotics especially when the risk can cause a huge loss in 17 and 18 a greedy algorithm for maximizing the cvar is proposed building on the work by 17 18 in this paper we develop a polynomial time algorithm for approximating a solution to the stochastic tsp our method differs from the previous approaches due to the presence of uncertainty in the tour cost making traditional path planning algorithms fail the framework presented in 17 18 is effective only for one stage planning selecting a path amongst a set of candidate paths in this paper we present a multi stage ar x iv 2 01 1 01 09 5 v 2 cs r o 2 1 s ep 2 02 1 a an image of an island with the locations of active volca noes highlighted in red b key sites of surveillance surrounding the volcanic sites c tour with low cost and low reward d tour with high cost and high reward fig 1 an example of risk aware tour selection for volcano monitoring in an island a low risk low reward monitoring tour avoids the more interesting region in the middle which the high risk high reward tour covers planner that finds a route taking the stochastic aspect into account to achieve this we propose an objective function that balances risk and reward for a tour and prove that this function is submodular the method in 19 addresses the deterministic tsp with a reward cost trade off while our work is focused on a stochastic version where the uncertainty in reward and cost is considered the algorithm from 19 can be viewed as a special case of our algorithm with 1 and the subsequent risk ignored contributions the main contributions of this paper are we present a risk aware tsp with a stochastic objective that balances risk and reward for planing a tsp tour problem 1 we show the objective is submodular lemma 3 and propose a greedy algorithm raga to find tours that maximize the cvar of a stochastic objective algo rithm 1 we prove that the solution obtained by raga is within a constant approximation factor of the optimal and an additive term proportional to the optimal solution theorem 1 and prove that raga has a polynomial run time theorem 2 we evaluate the performance of the algorithm through extensive simulations section v ii preliminaries we first introduce the conventions and notations used in this paper calligraphic capital letters denote sets e g a 2 a denotes the power set of a and a represents its cardinality given a set b a b denotes set difference let x be a random variable then e x represents the expectation of the random variable x and p denotes its probability a set and function properties optimization problems generally work over a set system x y where x is the base set and y 2 x a reward cost function f y r is then either maximized or minimized definition 1 monotonically increasing a set function f y r is said to be monotonically increasing if and only if for any set s s 2 x f s f s definition 2 submodularity a function f 2 x r is submodular if and only if f s f t f s t f s t s t 2 x definition 3 matroid an independence set system x y is called a matroid if for any sets s p 2 x and p s it must hold that there exists an element s s p such that p s y definition 4 curvature curvature is used as a measure of the degree of submodularity of a function f consider the matroid pair x y and a function f 2 x r such that for any element s x f s 6 0 the curvature k 0 k 1 is then defined as k 1 min s s s y f s f s s f s 1 b travelling salesperson problem definition 5 tsp given a complete graph g v e the objective of the tsp is to find a minimum cost maximum reward hamiltonian cycle in this paper we consider the symmetric undirected tsp where each edge has a reward and cost associated with it c measure of risk let f s y denote a utility function with solution set s and noise y as a result of y the value of f s y is a random variable for every s definition 6 value at risk the value at risk var is defined as var s min r p f s y 0 1 2 where is the user defined risk level a higher value of corresponds to the choice of a higher risk level definition 7 conditional value at risk the conditional value at risk cvar is defined as cvar s ey f s y f s y var s 3 maximizing the value of cvar s is equivalent to maxi mizing the auxiliary function h s theorem 2 12 h s 1 ey f s y 4 where t t t 0 and 0 when t 0 lemma 1 lemma 1 17 if f s y is monotone in creasing submodular and normalized in set s for any real ization of y then the auxiliary function h s is monotone increasing and submodular but not necessarily normalized 1 in set s for any given lemma 2 lemma 2 17 the auxiliary function h s is concave in s iii problem formulation in this section we first discuss a risk aware tsp and then formulate the problem as a stochastic optimization problem by using cvar a risk aware tsp in order to motivate our formulation consider the scenario of monitoring active volcanoes using a robot say aerial robot on an island as shown in fig 1 a where the red colored patches represent active volcanic regions the important sites v that the robot needs to visit are shown in fig 1 b these sites are strategic positions from which it is possible to observe the volcanic situation from a safe distance the robot travels between these monitoring sites and receives a reward based on the information gathered while traversing this tour in this work we do not constrain vehicle motion in terms of distance or time while traveling directly above the volcano the robot faces a higher chance of failure due to volcanic activity but can gather more information a higher reward while traveling along a shorter path less cost on the other hand while traveling around the volcano the robot has a lower risk but must travel a longer distance more cost while also receiving a lower reward fig 1 c and fig 1 d show the paths that could be adopted based on the risk level specified for the robot our objective is to find a suitable tour for a single robot while considering the risk threshold and the trade off between path cost and reward required the monitoring task is modeled as a risk aware tsp on a graph g v e of an environment e with v sites of interest the notation e represents the set of edges connecting the vertices a representative information density map m of the environment e is shown in fig 2 the robot has sensors with a sensing range r as it travels along the tour the robot receives a reward based on the amount of information it collects and a penalty proportional to the tour s cost we assume that both the reward and cost are random variables with the reward being positive and the cost of every edge having an upper bound of c we use r s yr and c s yc to denote the reward and cost for a set of edges s where r s and c s are the sum of rewards of all points observed and the costs incurred when travelling along the edges in 1 the function f s y is normalized in s if and only if f y 0 fig 2 map m shows the information distribution in the environment e the right bar shows the density degree of the information set s respectively and yr and yc are the respective noises induced as we want to minimize cost and maximize reward simultaneously our utility function f s y is a combination of these two terms with a weighting factor deciding the priority we place on the cost over the reward we define f s y as f s y 1 r s yr s c c s yc 5 where 0 1 is the weighting parameter when 0 we ignore the cost incurred and consider the rewards received only when 1 we ignore the rewards and are wary of only the cost penalized classical tsp note that we directly incorporate the cost reward trade off into the utility function let us define r s yr as fr s yr and s c c s yc as fc s yc lemma 3 the utility function f s y is both submod ular and monotone increasing in s proof let e be the edge to be added to the tour where e e s and s is set of edges selected so far let us consider the two parts of f s y separately a fr s y leftmargin as the rewards are sampled from a truncated gaussian with a lower bound of 0 they are thus always positive therefore fr s y is always monotone increasing in s fr s fr s e 6 while calculating the total reward we add the rewards obtained from all distinct points observed while travers ing this tour consider the current set of edges s and a new edge e if the new edge e and the edges s have any overlap in the sensed regions the total reward received from traversing s and e successively will be less than the sum of rewards of traversing s and e individually therefore fr s e fr s fr e also since e e s fr s e 0 then we have fr s e fr s e fr s fr e 7 and thus fr s y is submodular in s b fc s y the cost of each edge is defined as a truncated gaussian with a upper bound of mc for any set of edges in s the sum of costs will always be less than s mc which means any sample realization of fc s y is positive therefore fc s y is always monotone increasing in s i e fc s fc s e 8 consider again the current set of edges s and the new edge e the total cost of traversing s and e is equal to the sum of costs of traversing s and e individually therefore fc s e fc s fc e 9 and thus fc s y is modular in s c f s y since both fr s yr and fc s yc are monotone increasing in s f s y as the summation of these two is also monotone increasing in s similarly since fr s yr is submodular in s and fc s yc is modular in s f s y as the summation of these two is submodular in s b risk aware submodular maximization consider the set system e i where e is the set of all edges in the graph g v e if a 1 a 2 an each contains the edges forming n hamiltonian tours then i 2 a 1 2 a 2 2 an we define our risk aware tsp by maximizing cvar s where s i we know that maximizing the cvar s is equivalent to maximizing the auxiliary function h s thus we formally define the problem as problem 1 risk aware tsp max s i 0 1 ey f s y 10 where is the upper bound on the value of iv algorithm and analysis in this section we present a risk aware greedy algorithm raga that extends the deterministic algorithm in 19 for solving problem 1 we first explicitly introduce raga then analyze its performance in terms of approximation bound and running efficiency a algorithm raga has three main stages i initialization lines 2 3 the decision set s hamilto nian cycle is initialized as an empty set a degree vector d is set as 01 v which contains vertices degrees in order we use variables h max 0 and h cur 0 store the maximal and the current values of h s line 2 ii search for valid tour for every lines 4 20 for a specific value of we continue to add edges greedily until we have a complete tour or the edge set e is empty for every edge e e s we calculate the marginal gain of algorithm 1 risk aware greedy algorithm raga input graph g v e risk level 0 1 weighing factor 0 1 upper bound r on searching factor 0 oracle function o that approximates h s as h s output a hamiltonian tour sg and its respective g 1 for i 0 1 2 do 2 s d 01 v h max 0 h cur 0 3 i i 4 while e 6 and s v do 5 e argmax e e s h s e i h s i 6 u v v e 7 flag false 8 if d u 2 and d v 2 then 9 check subtour existence in s e by running dfs 10 if no subtour present then 11 flag true 12 end 13 end 14 if flag true then 15 s s e 16 d u 1 d v 1 17 h cur h s e i 18 end 19 e e e 20 end 21 if h cur h max then 22 h max h cur sg g s i 23 end 24 if h cur 0 then 25 break 26 end 27 end the auxiliary function h s e h s using the oracle function o and choose the edge e which maximizes the marginal gain line 5 we then check if the selected edge e forms or could form a valid tour with the elements in s i e if s e i lines 8 13 here we first validate the degree constraint for each edge in s e and then use the depth first search dfs algorithm to iterate through the selected edges to check for subtours if the new edge does not break the above constraints we add the edge in s and update d and h cur lines 14 18 finally we remove e from e in line 19 iii selecting best tour set sg g lines 21 23 for every tour we store the value of the auxiliary function h in h cur and compare it to the best value h max we store the pair s whenever h cur h max and update h max lines 24 26 show the condition of exiting the loop as h s is concave in and we start from a non negative value as seen in fig 6 a it is certain that if h s 150 175 200 225 250 275 300 325 350 value of the utility function f sg y 0 000 0 005 0 010 0 015 0 020 p ro b a b il it y d is tr ib u ti o n o f f s g y 0 01 0 1 0 3 0 5 0 7 0 9 1 a 0 150 175 200 225 250 275 300 325 350 value of the utility function f sg y 0 000 0 005 0 010 0 015 0 020 p ro b a b il it y d is tr ib u ti o n o f f s g y 0 01 0 1 0 3 0 5 0 7 0 9 1 b 0 4 150 175 200 225 250 275 300 325 350 value of the utility function f sg y 0 0000 0 0025 0 0050 0 0075 0 0100 0 0125 0 0150 0 0175 0 0200 p ro b a b il it y d is tr ib u ti o n o f f s g y 0 01 0 1 0 3 0 5 0 7 0 9 1 c 0 7 150 175 200 225 250 275 300 325 350 value of the utility function f sg y 0 0000 0 0025 0 0050 0 0075 0 0100 0 0125 0 0150 0 0175 p ro b a b il it y d is tr ib u ti o n o f f s g y 0 01 0 1 0 3 0 5 0 7 0 9 1 d 1 fig 3 probability density function of f s y at different values of keeping fixed 150 175 200 225 250 275 300 325 350 value of the utility function f sg y 0 000 0 005 0 010 0 015 0 020 0 025 p ro b a b il it y d is tr ib u ti o n o f f s g y 0 0 2 0 4 0 6 0 8 1 a 0 1 150 175 200 225 250 275 300 325 350 value of the utility function f sg y 0 0000 0 0025 0 0050 0 0075 0 0100 0 0125 0 0150 0 0175 0 0200 p ro b a b il it y d is tr ib u ti o n o f f s g y 0 0 2 0 4 0 6 0 8 1 b 0 4 150 175 200 225 250 275 300 325 350 value of the utility function f sg y 0 0000 0 0025 0 0050 0 0075 0 0100 0 0125 0 0150 0 0175 p ro b a b il it y d is tr ib u ti o n o f f s g y 0 0 2 0 4 0 6 0 8 1 c 0 7 150 175 200 225 250 275 300 325 350 value of the utility function f sg y 0 0000 0 0025 0 0050 0 0075 0 0100 0 0125 0 0150 0 0175 p ro b a b il it y d is tr ib u ti o n o f f s g y 0 0 2 0 4 0 6 0 8 1 d 1 fig 4 probability density function of f s y at different values of keeping fixed becomes negative it will continue to further decrease this improves the runtime of raga designing the oracle function o we use a sampling based oracle function to approximate h s as h s the authors of 20 have proved that if the number of samples ns o 2 2 log 1 0 1 the approximation for the value of cvar or equivalently the auxiliary function h s gives an error less than with a probability of at least 1 b performance analysis theorem 1 let sg and g be the tour and the searching scalar selected by raga and let s and be the tour and the searching scalar selected the optimal solution then h sg g 1 2 k h s 1 k 2 k 1 1 11 with a probability of at least 1 when the number of samples ns o 2 2 log 1 0 1 k is the curvature of h s with respect to s proof note that h s is monotone increasing sub modular but not normalized lemma 1 21 theorem 6 1 and 19 theorem 2 10 have shown that for a normalized submodular increasing function the greedy algorithm gives an approximation of 1 2 k for maximizing it following this result normalizing h s by h s h we get h sg h h s h 1 2 k 12 where h s is the optimal value of h s for any given value of then following the proof of theorem 1 in 18 we have the bound approximation performance of raga in equation 11 theorem 2 raga has a polynomial running time of o d e v 3 v np ns 2 log v 1 proof first the outer for loop lines 1 27 takes at most d e time to search for second the inner while loop lines 4 20 needs to check for edges e e to find the tour s thus running at most e times within the while loop raga finds the edge e with maximal marginal gain in line 5 to compute the marginal gain for an edge e raga calls the oracle function o as it estimates h s i e e s o is called at most e times during one iteration of the while loop in line 4 as raga needs to compute the marginal gains only when s is changed in line 15 and as s can have only v elements it needs to perform a total of v recalculations in addition the edges need to be sorted every time a recalculation is performed so that future calls to find the most beneficial element can be run in constant time without recomputing h s i for any edge e the oracle o must compute the new mean reward and cost of s e as only the distinct points in the environment are considered while calculating reward the oracle must maintain an array of points that were observed while traveling along s if the maximum points observed when traveling along any edge in e is np then the maximum number of points observed while traversing s would be v np afterward the oracle takes ns samples to compute h s y thus the total runtime of the oracle is v np ns therefore the total time for computing gains and sorting would be o v e v np ns e log e next within the while loop raga checks if a the selected edge e could form a valid tour with s lines 8 13 in particular it ensures the degree of the two vertices of edge e is less than two line 8 if both vertices have a degree less than two it runs dfs to traverse the elements in s to check for subtours line 9 which takes at most v time as this is performed for every edge e to be added to s in total validating the selected edge runs in o v e time assuming that all other commands take constant time raga has a runtime of o v e v np ns e log e v e for one iteration of the for loop notably for a complete graph e o v 2 considering that the for loop has d e iterations the total runtime of raga becomes o d e v 3 v np ns 2 log v 1 v simulation results the performance of raga is evaluated through extensive simulations with various environment maps and varying numbers and locations of nodes 2 simulation setup we consider the scenario with the number of sites nodes v 8 in a 2 d environment of size 100 m 100 m meters the sensing radius of the robot is r 2 meters we assume both the reward and cost of an edge are modeled as a truncated gaussian distribution but raga can handle other distributions as well since it only requires samples of the distributions to approximate cvar similarly the noise terms yr and yc are assumed to be gaussian however the terms are generic to accommodate any other distributions given the information density map m fig 2 in which each point depicts the mean reward obtained from observing that position the average reward for an edge r e is the sum of rewards of all points on m sensed while traversing this edge the mean cost c e of an edge is proportional to its length we assume the variances of the edge reward is proportional to its mean r e and variance in the cost to be proportional to c c e the average rewards and costs for every edge are normalized and re scaled to a maximum value of 10 we set the number of samples as ns 250 results fig 3 shows the probability distributions of the utility function f s y as a function of with a fixed from fig 3 c when the risk level is small a path with a lower mean utility value f s y is chosen this is because a lower indicates a small risk level and therefore a low utility low risk path is selected as the value of increases we see that the paths selected are more rewarding but tend to have a higher variance the case of 1 is the risk neutral scenario where we disregard the variance in reward and cost but rather focus only on the mean values which is the same as the deterministic settings in 19 as expected with 1 we select tours with the highest risk this gradation in tour selection thus illustrates raga s ability to select paths based on its evaluation of reward risk trade off fig 4 shows the probability distributions of the utility function f s y as a function of when is given let us use fig 4 b as an example we see that initially for 0 raga selects a high variance high utility path this is because at 0 we only consider maximizing the reward and disregard the cost of the tour as we increase we see that raga slowly shifts towards paths with lesser utility lesser risk with the most conservative paths chosen around 2 raga code is available at https github com rishabbala risk aware tsp a 0 1 0 b 0 1 0 5 c 0 1 1 d 0 5 0 e 0 5 0 5 f 0 5 1 g 1 0 h 1 0 5 i 1 1 fig 5 the tours chosen for varying values of and 0 2 0 4 at this point we wish to minimize cost while maximizing reward simultaneously and therefore are more cautious of both terms as continues to increase further we see that the tours with higher utilities are chosen which have a higher variance finally at 1 we consider only the cost minimization and select a tour with high variance high utility as the case of 0 table i provides a quantitative representation of fig 3 and 4 by showing the variations in fr s y and fc s y with respect to and fig 5 shows the tours chosen by raga for different values of and we can clearly see that the paths chosen in fig 5 a and fig 5 i are the same and fig 5 c and fig 5 g are similar this is because we get a lower reward when we travel less and a higher reward when we travel more thus highlighting our problem s true dual nature fig 6 a shows the value of h s with respect to and it can be seen that the auxiliary function is concave fig 6 b shows the computational time for varying number of vertices for 0 1 0 5 0 9 we use ns 250 200 and 1 the results show that the running time increases with increase in as for a larger reaching the maximum is slower this is shown in fig 6 a where the maximum for h s is reached at a larger value of when is larger combining this and lines 24 26 in raga we can see that with a smaller value of raga stops quickly as a result the number of iteration over performed is lesser and raga reaches a solution earlier than for a larger to show the scalability of raga we test it on an environment of size 500 m 500 m consisting of 20 nodes along with the generated tour as shown in fig 6 c the parameters for the robot are set as r 1 0 1 and 0 8 vi conclusions and future work in this paper we developed a risk aware greedy algorithm raga for the tsp while considering the risk reward trade https github com rishabbala risk aware tsp https github com rishabbala risk aware tsp 0 0 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 1 0 01 122 145 121 144 124 141 126 134 129 136 127 136 132 138 127 133 130 131 132 138 137 135 0 1 121 149 122 148 121 149 125 146 121 145 136 132 136 137 135 136 135 133 130 131 134 131 0 2 124 144 121 143 124 140 124 147 134 139 137 139 144 134 129 138 138 138 138 130 134 133 0 3 138 137 127 142 133 133 135 136 138 138 138 140 131 144 140 138 123 144 127 150 126 141 0 4 133 138 142 134 136 135 129 137 136 139 138 140 130 141 139 136 128 147 127 148 126 147 0 5 141 135 138 135 144 133 141 138 142 137 136 139 138 139 127 148 138 140 125 147 129 143 0 6 138 131 141 134 141 134 142 132 142 137 134 142 129 142 134 141 130 144 124 146 130 146 0 7 143 133 138 141 138 138 139 138 139 138 137 138 134 141 131 143 136 140 129 146 129 147 0 8 143 135 138 137 141 137 144 133 142 137 142 137 141 138 143 135 129 146 122 148 126 147 0 9 144 133 139 139 142 135 144 133 142 137 140 139 143 136 128 148 131 146 121 149 122 150 1 143 132 144 132 144 132 145 134 145 134 137 137 134 141 135 139 121 149 121 149 128 147 table i variations of fr s y fc s y with and 0 200 400 600 800 1000 100 50 0 50 100 150 200 h s g 0 1 0 3 0 5 0 7 0 9 1 a variation of h s with respect to b runtime performance of raga c the raga run on a map with 20 nodes fig 6 performance of raga off we used a cvar submodular maximization approach for selecting a solution set under matroidal constraints we also analyzed the performance of raga and its running time the results show raga s efficiency in optimizing both reward and cost simultaneously an ongoing work is to improve the running time of raga as a larger value of has a higher running time another future avenue is to extend raga to address arbitrary distributions for the reward and cost based on the real world data further the work can be extended for other types of combinatorial optimization problems and for the cases where the risk associated with the graph can be learned and the paths can be determined dynamically finally we also plan to extend raga to the stochastic version of multi robot tsp 22 where we plan tours for multiple robots with stochastic rewards and costs references 1 g perboli l gobbato and f maggioni a progressive hedging method for the multi path travelling salesman problem with stochastic travel times ima jmm vol 28 no 1 pp 65 86 2017 2 r t rockafellar and r j b wets scenarios and policy aggre gation in optimization under uncertainty mathematics of operations research vol 16 no 1 pp 119 147 1991 3 d paulin et al the convex distance inequality for dependent random variables with applications to the stochastic travelling salesman and other problems electronic journal of probability vol 19 2014 4 s maity a roy and m maiti a modified genetic algorithm for solving uncertain constrained solid travelling salesman problems computers industrial engineering vol 83 pp 273 296 2015 5 an imprecise multi objective genetic algorithm for uncertain constrained multi objective solid travelling salesman problem expert systems with applications vol 46 pp 196 223 2016 6 a mukherjee g panigrahi s kar and m maiti constrained covering solid travelling salesman problems in uncertain environment jaihc vol 10 no 1 pp 125 141 2019 7 s itani and m a dahleh on the stochastic tsp for the dubins vehicle in acc 2007 pp 443 448 8 a adler and s karaman the stochastic traveling salesman problem and orienteering for kinodynamic vehicles in ieee icra 2016 pp 2788 2795 9 a krause and c guestrin submodularity and its applications in optimized information gathering acm tist vol 2 4 pp 1 20 2011 10 y y boykov and m p jolly interactive graph cuts for optimal boundary region segmentation of objects in nd images in ieee iccv 2001 vol 1 2001 pp 105 112 11 h lin and j bilmes a class of submodular functions for document summarization in annual meeting of the association for computa tional linguistics human language technologies 2011 pp 510 520 12 r t rockafellar and s uryasev optimization of conditional value at risk journal of risk volume vol 2 2000 13 j morgan creditmetrics jp morgan new york 1997 14 f yang and n chakraborty algorithm for optimal chance con strained linear assignment in ieee icra 2017 pp 801 808 15 algorithm for optimal chance constrained knapsack problem with applications to multi robot teaming in ieee icra ieee 2018 pp 1043 1049 16 a majumdar and m pavone how should a robot assess risk towards an axiomatic theory of risk in robotics in robotics research springer 2020 pp 75 84 17 l zhou and p tokekar an approximation algorithm for risk averse submodular optimization in wafr springer 2018 pp 144 159 18 risk aware submodular optimization for multi robot coordina tion arxiv preprint arxiv 2003 10492 2020 19 s t jawaid and s l smith the maximum traveling salesman problem with submodular rewards in acc 2013 pp 3997 4002 20 n ohsaka and y yoshida portfolio optimization for influence spread in www conference 2017 pp 977 985 21 m conforti and g cornue jols submodular set functions matroids and the greedy algorithm tight worst case bounds and some general izations of the rado edmonds theorem discrete applied mathematics vol 7 no 3 pp 251 274 1984 22 g n frederickson m s hecht and c e kim approximation algorithms for some routing problems in ieee annual symposium on foundations of computer science 1976 pp 216 227 i introduction ii preliminaries ii a set and function properties ii b travelling salesperson problem ii c measure of risk iii problem formulation iii a risk aware tsp iii b risk aware submodular maximization iv algorithm and analysis iv a algorithm iv b performance analysis v simulation results vi conclusions and future work references