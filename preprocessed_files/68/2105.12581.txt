1 securing serverless computing challenges solutions and opportunities xing li student member ieee xue leng and yan chen fellow ieee abstract serverless computing is a new cloud service model that reduces both cloud providers and consumers costs through extremely agile development operation and charging mecha nisms and has been widely applied since its emergence nev ertheless some characteristics of serverless computing such as fragmented application boundaries have raised new security challenges considerable literature work has been committed to addressing these challenges commercial and open source server less platforms implement many security measures to enhance serverless environments this paper presents the first survey of serverless security that considers both literature work and industrial security measures we summarize the primary security challenges analyze corresponding solutions from the literature and industry and identify potential research opportunities then we conduct a gap analysis of the academic and industrial solu tions as well as commercial and open source serverless platforms security capabilities and finally we present a complete picture of current serverless security research index terms cloud computing serverless computing secu rity survey i introduction the development of cloud computing has driven variousservice model innovations including serverless comput ing in this model cloud providers are responsible for all server related management tasks such as resource allocation service deployment scaling and monitoring and an appli cation is charged only for its execution time as a result consumers can avoid tedious management tasks focus on the business code and save costs by not paying for idle resources these advantages in terms of efficiency and economy have led to the rapid development of serverless computing in recent years and have attracted extensive attention from both industry and academia according to a recent report the global serverless market size is estimated to grow to 21 1 billion by 2025 1 however as a novel service model serverless computing also has certain distinguishing features that present some challenges leading to security and compliance concerns for example its agile and lightweight virtualization technologies may lead to weak isolation and the ephemeral nature of its computing instances could increase the difficulty of se curity management in recent years substantial efforts have x li and x leng are with the college of computer science and technology zhejiang university hangzhou 310027 china e mail xing li zju edu cn lengxue 2015 outlook com y chen is with the department of computer science northwestern university evanston il 60208 usa e mail ychen northwestern edu this work has been submitted to the ieee for possible publication copyright may be transferred without notice after which this version may no longer be accessible been made to address these challenges related studies have arisen from academic research commercial cloud providers and thriving open source communities and have considerably enhanced serverless security therefore a systematic survey of current research progress is needed to provide a foundation for continuing security enhancement some previous surveys of serverless computing have been conducted 2 3 however they have three main drawbacks in revealing the current status of security research in terms of subject matter these surveys have extensively discussed the concepts challenges applications and prospects of serverless computing but have not specifically targeted security re garding content the previous surveys have briefly introduced possible risks or attacks but have not systematically analyzed existing solutions and future directions of research in terms of materials these surveys have focused on literature work and have not considered the measures adopted in industry i e commercial or open source platforms however an academic focus alone is insufficient for a review of a widely applied cloud computing model such as serverless computing therefore a complete and systematic review of serverless security is urgently needed to promote serverless computing and inspire new research we present the first survey on server less security whose horizon is expanded from academia alone to include industry in this paper we first introduce the concept and background of serverless computing section ii starting from the unique characteristics of this service model we then present a classification of the main security challenges and analyze their root causes subsequently we review the state of the art solutions proposed in the literature and adopted by popular serverless platforms for each challenge based on the degree to which these problems are solved we note potential research opportunities section iii section vi finally we illustrate our findings in comparisons of the current academic and industrial solutions as well as commercial and open source platforms section vii the main contributions of this work are as follows a systematic summary of the challenges arising in secur ing serverless computing is presented a brief but comprehensive review of academic and in dustrial solutions is provided a set of promising potential research opportunities is proposed a multiaspect gap analysis of the current research status is conducted ar x iv 2 10 5 12 58 1 v 1 cs c r 2 5 m ay 2 02 1 2 vm container engine container container container faas runtime faas runtime faas runtime function a function b function c bare metal server virtual machine a faas technology stack b a typical serverless application function a function d api gateway storage service log service scheduled task application boundary end user other clients message queue sms service function b function c functions backend services trigger events fig 1 a a container based faas technology stack typically only the top level function code is managed by customers b the architecture of a serverless application that includes faas and baas components ii background and overview a serverless computing virtualization technology is the cornerstone of cloud ser vices based on the platform as a service paas model the recent prosperity of lightweight virtualization e g contain ers has given birth to a new model function as a service faas as shown in figure 1 a in this model customers develop and deploy small code pieces called functions in the cloud these functions are deployed in lightweight virtualized environments such as containers and executed on platform provided runtimes each function focuses on a different task and multiple functions can be combined in an event driven manner to realize complex business logic events that can activate the execution of functions are called triggers these include but are not limited to http requests logs storage events and timers with lightweight virtualization functions can be initialized extremely fast usually within a few milliseconds therefore providers can instantiate functions only when needed and flexibly scale them thereby maximizing resource utilization consequently functions usually have a short lifecycle this agility is also beneficial to consumers since the occupied resources will be released when they are not in use consumers need to pay only for functions actual execution time and do not need to reserve resources for emergencies moreover cloud providers offer dedicated services and application programming interfaces apis for tasks such as storage logging and identity management these services can help customers build and manage server side logic thus significantly accelerating application development and release this service model is known as backend as a service baas serverless computing is generally regarded as a combination of faas and baas by undertaking all management tasks directly related to infrastructure resources cloud providers make server related details transparent to consumers from the customer s perspective cloud applications are serverless neither development deployment management nor billing is server centric figure 1 b illustrates the architecture of a typical serverless application currently serverless computing is widely applied major providers such as amazon web services aws microsoft azure and google cloud have all launched serverless prod ucts a series of open source platforms is also emerging management interface management services a infrastructure resources storage c b monitoringbackend services logging visualization authentication deployment security functions customer 2 customer 1 1 2 3 4 threats challenges 1 4 fig 2 locations of threats and security challenges in the serverless computing framework meanwhile this new cloud service model has begun to be embraced in many scenarios such as data processing and the internet of things iot paradigm b threats and security challenges as a multitenant cloud service model serverless computing is susceptible to security threats that can be divided into five categories based on where they are launched the first category consists of external attacks on applications from malicious users such as cross site scripting attacks and injection attacks due to the unlimited scalability and the pay as you go feature of serverless computing denial of service attacks will lead to a substantial increase in the cost to application owners the second comprises internal attacks on applications from malicious insiders such as illegal internal access and sniffing attacks adversaries in the internal network can even perceive sensitive information from the communication pattern and activity level of functions for example in a health monitoring application a particular sequence of triggered functions may reflect a specific health condition of the patient 3 the remaining three categories are horizontal attacks between tenants e g side channel attacks vertical attacks on serverless infrastructures from malicious tenants e g container escape attacks and vertical attacks on applications from malicious platforms to address these threats the best practice is to build a defense in depth system to protect serverless applications and 3 table i the landscape of the survey including security challenges and their root causes proposed solutions our reviews and research opportunities challenges resource isolation security monitoring security management data protection root causes the weakness of lightweight virtualization technologies in isolation the ephemerality of functions and the broken boundaries of serverless applications the distributed nature of func tions and the fragmented appli cation boundaries platforms control of the func tion lifecycle and baas ser vices participation in business logic literature work virtual machine based secure containers e g minimized vmms 4 and unikernels 5 information flow mining and tracing e g static analysis 6 and dynamic tracing 7 8 advanced management capa bilities e g workflow sensitive authorization 9 and secure container network stacks 10 hardware based trusted execu tion environments e g protect ing running code with intel sgx 11 12 industrial solutions secure containers and network boundaries e g firecracker 4 gvisor and vpcs security scanning and monitor ing tools e g azure monitor aws x ray and devsecops tools fine grained authentication and authorization e g iam sys tems and role based access con trol encryption in transit and at rest e g tls ssl code data en cryption and key management services status well resolved partially resolved partially resolved partially resolved research opportunities secure containers with better isolation better performance and lower overhead nonintrusive tracing schemes and advanced insight capabil ities such as diagnosis and forensics automatic security configura tion and auditing tools other confidential computing solutions such as homomorphic encryption platforms at multiple stages and levels however the flexibility and agility of serverless applications expose them to a series of security challenges in the process of achieving this goal these challenges are concentrated in four aspects resource isolation security monitoring security management and data protection figure 2 depicts the locations of the threats and challenges in the serverless framework c survey methodology and objects to fully understand the current state of the art in serverless security technologies we collected and investigated the solu tions proposed in research work and the security mechanisms adopted in practice for serverless platforms an overview of this survey is presented in table i for the literature work we collected 77 papers related to serverless security that have been published since 2014 when the serverless concept emerged we selected nine recent research papers published in high reputation confer ences or journals to showcase the academic world s latest achievements moreover we collected the security features of popular serverless platforms from their documentation these platforms include the leading commercial platforms aws lambda google cloud functions azure functions alibaba cloud function compute and ibm cloud functions as well as the popular open source serverless frameworks openfaas kubeless knative fission apache openwhisk and nuclio iii challenge 1 resource isolation serverless computing relies on the dynamic release and reuse of software and hardware to improve resource utilization and reduce costs thus there is a strong requirement for resource isolation especially among multiple tenants however this requirement conflicts with the weak isola tion of lightweight virtualization thereby giving rise to this challenge serverless computing requires swift and on demand function initialization to this end lightweight virtualization technologies have been widely adopted unlike traditional virtual machines vms with guest operating systems oss containers share the host s os kernel and thus their isolation is weak malicious consumers could employ this weakness to influence or attack other consumers located on the same host e g via side channel attacks for example wang et al 13 found that aws lambda suffers from performance isolation issues and azure functions has placement vulnerabilities that facilitate side channel attacks literature work to enhance the isolation of lightweight virtualization technologies and address this challenge pub lished research focuses on vm based solutions compared with containers vms can provide better security boundaries but require a longer time to initialize hence researchers have attempted to make vms more lightweight to meet the flexibility requirements of serverless computing the basic idea is to reduce the size of the guest kernels that is remove unnecessary modules to build microvms even keeping only the libraries that will be used 4 5 moreover cadden et al 5 employed unikernel snapshots to further accelerate initialization and agache et al 4 minimized virtual machine monitors vmms to reduce the trusted computing base these microvms have successfully reduced the initialization time to the millisecond level while providing vm level isolation industrial solutions led by amazon firecracker 4 has been applied in aws lambda moreover all surveyed com mercial serverless platforms except ibm functions utilize their own secure container products these containers enable advanced isolation by employing various techniques such as microvms e g firecracker and container sandboxes e g gvisor commercial platforms also provide mechanisms for network layer isolation such as virtual private clouds vpcs review and analysis secure containers provide vm level resource isolation and have become a standard mode of implementation in production environments therefore we consider this challenge well resolved however due to hard ware sharing these approaches are still susceptible to side channel attacks moreover trade offs remain between security and performance for example gvisor sacrifices significant performance for security in particular a 216 reduction in 4 file opening speed 14 additionally many existing efforts employ snapshots 15 or even memory sharing 5 to reduce the start up time as much as possible which also degrades security to a certain extent research opportunities looking forward serverless com puting will embrace new secure containers if they offer progress in the following three dimensions 1 security achieving better isolation than vms 2 efficiency providing performance closer to that of physical machines and 3 lightweight computing incurring lower overheads iv challenge 2 security monitoring a serverless platform generally maintains a set of run times for functions including commonly used packages of the supported programming languages moreover to meet diverse development needs most providers also support cus tom runtimes and even provide function marketplaces the security risks posed by third party packages and functions necessitate reliable monitoring capabilities to detect anomalies and determine the security status furthermore in a serverless environment the ephemeral nature of functions and the broken application boundaries present new challenges first although the short lived nature of functions reduces the attack surface it also significantly narrows the window for developers to discover and diagnose problems second as shown in figure 1 b a serverless application may have multiple entry points due to a variety of triggers these entry points coupled with baas services cause the boundaries of serverless applications to be fragmented and further increase the difficulty of monitoring moreover lacking control over the execution environments and baas services consumers must rely on the provided interfaces for monitoring which may lead to incomplete views of the running status for example lin et al 7 noted that aws lambda s monitoring granularity is relatively coarse and the tracking paths are not continuous across baas services literature work to address this challenge researchers have attempted to mine and track the information flows in serverless applications from both static and dynamic perspectives obetz et al 6 proposed an augmented call graph that considers baas services and explained the feasibility of obtaining the graph through static analysis to dynamically track where and how data flow datta et al 8 placed an agent in each function s container to proxy its network requests these agents generated and propagated labels for inbound and out bound traffic to record the flow of information and could also restrict functions behavior based on preconfigured policies in addition lin et al 7 proposed gammaray a dynamic tracking tool that can capture the causality of invocations across baas services to build complete trace graphs industrial solutions commercial platforms provide various tools and interfaces to record aggregate display and analyze monitoring data some can even serve as triggers for automatic function management they also aim to gradually enable dis tributed tracing while ensuring adequate performance more over to further mitigate the impact of nonsecure third party components providers recommend continuous security vali dation in continuous integration and continuous deployment ci cd pipelines and offer a series of tools such as static vulnerability scanning and automatic penetration testing for this purpose review and analysis the proposed dynamic methods solve the problem of the coarse grained and incomplete nature of the existing monitoring schemes to a certain extent for example data oriented tracing 8 can be integrated with traditional behavior oriented mechanisms moreover since functions have relatively low internal complexity static analysis based meth ods are feasible these approaches could be an effective supplement to dynamic methods which may introduce con siderable runtime overhead following best practices in the development phase can also mitigate the threat posed by non secure third party components unfortunately the information that can be obtained through static analysis is limited current dynamic solutions all require code instrumentation or agent embedding to enable end to end monitoring and tracking resulting in high compilation and runtime overheads 7 8 hence we consider this challenge only partially resolved research opportunities the exploration of nonintrusive tracking schemes is a potential research opportunity fur thermore advanced insight capabilities are lacking in current platforms these capabilities include assessing security status predicting and diagnosing faults and conducting detection and forensics for security events with various triggers server less applications can naturally perform feedback regulation for self management meanwhile functions short lifecycles and massive logs impose high requirements on the speed of solutions we believe this scenario represents a research opportunity where artificial intelligence ai based methods might be beneficial v challenge 3 security management security management is a critical means for administrators to enforce security intentions and protect applications as described in subsection ii b the diversity of the possible attacks in serverless environments necessitates comprehensive security management capabilities that can provide protection at multiple levels however the fragmented application boundaries of server less applications increase the difficulty of security manage ment the distributed nature of functions further exacerbates this challenge on the one hand functions must carefully inspect the input and output at all their entry points failure to comply with this principle may lead to injection attacks on the other hand an external request may trigger communication among multiple functions and baas services necessitating fine grained authentication and authorization among functions and services this task can be challenging for large scale or complex applications literature work traditional authentication and authorization mechanisms have been well studied building on this work re searchers are currently attempting to provide advanced security management capabilities at new levels sankaran et al 9 built a workflow sensitive authorization mechanism for serverless 5 applications it proactively verifies external requests permis sions for all functions involved in their workflows at the application entry point thus applications can reject illegal requests as early as possible thereby avoiding partial pro cessing of illegal requests and reducing the potential attack surface moreover nam et al 10 revealed a data leakage risk in container networks and redesigned a secure network stack to protect intercontainer communication specifically the method verifies and filters out illegal requests based on the intercontainer dependencies and utilizes end to end direct forwarding to prevent traffic exposure it even improves the container network s performance industrial solutions based on various security policies cloud providers have formulated best practices for security management these policies act on multiple layers and mul tiple resources and have the potential to provide promising management capabilities for example commercial platforms achieve well defined identity authentication and fine grained authorization with mature identity access management iam systems aws lambda even provides role based policies resource based policies access control lists and other man agement methods for consumers to choose among and flexibly combine review and analysis based on fine grained security man agement policies existing solutions provide multilevel protec tion for serverless applications providers also document best practices as guidance however a gap may inevitably exist between actual situations and the recommended best practices first both academic 9 10 and industrial solutions require administrators to customize security policies in accordance with the application architecture and business logic although server management is the providers responsibility the burden placed on consumers for security management has not been relieved but instead has been made even heavier fine grained policies require attentive design and careful configuration which is a time consuming and error prone process second providers marketing emphasizes only cost effectiveness and convenience making it easy for consumers to ignore their responsibility to ensure security as mentioned above any vio lation of design principles and best practices may compromise applications security in other words current mechanisms do not reduce the complexity of security management applica tions safety depends on the extent to which best practices are followed therefore we consider this challenge partially resolved research opportunities at present the assistance of auto mated tools is urgently needed one possible research direction is automated security configuration the ideal tool would be able to perceive an application s architecture and status extract the consumer s security intentions and provide support for policy configuration maintenance and updating another research direction concerns automated security audits for which there is a growing market the ideal tool is expected to not only check whether security measures are deployed but also evaluate the quality of these measures based on an appli cation s specific characteristics we believe that the security risks posed by incorrect configurations can be alleviated by advancing research in these two directions vi challenge 4 data protection data security is the lifeline of cloud services unlike in other models serverless providers control the whole application lifecycle e g the deployment scaling execution and termi nation of functions and the entire software stack moreover as part of the application and business logic baas services can directly access and process data all these characteristics require consumers to have deep trust in the provider nevertheless whether during the execution of code in an uncontrolled environment or the processing of sensitive data through the platform s services privacy and compliance con cerns may arise to alleviate these concerns platforms need to implement strict data protection measures to clearly and fully persuade consumers given the flexibility requirements of serverless environments this task could be challenging but it is essential for expanding the application scenarios of serverless computing literature work in addition to protecting data at rest or in transit through encryption recent work has focused on protecting data in use researchers have attempted to estab lish a trusted execution environment tee for functions to relieve customers of the need to fully trust providers 11 12 specifically several approaches employ intel sgx a hardware based mechanism that uses encrypted memory to protect running code and data from privileged software even the os moreover qiang et al 11 proposed a two way sandbox that is a webassembly sandbox nested in an sgx sandbox to prevent a platform from accessing sensitive data processed by functions while also protecting the platform from untrusted code industrial solutions on the basis of their mature storage services and security management experience commercial platforms provide adequate support for encryption in transit and at rest this protection covers the files and code uploaded by customers as well as the environment variables of func tions moreover standard key management services kms are provided to help customers handle secrets review and analysis protecting data in use has become a significant dimension of cloud security in this regard current serverless research is focused on hardware based tees which still have many limitations such as poor performance diffi culty with hardware heterogeneity and running only in the user space moreover these techniques have not yet been applied to serverless products therefore we consider this challenge to be partially resolved research opportunities in recent years many confidential computing solutions such as homomorphic encryption and se cure multiparty computation have emerged for the protection of data in the cloud considering the limitations of the current solutions the community is expected to appreciate further exploration and adoption of these techniques vii gap analysis during our investigation we obtained some interesting findings about the current research status of serverless secu 6 table ii a brief list of security mechanisms used in commercial serverless platforms aspect category aws lambda google azure functions alibaba cloud ibmcloud functions function compute cloud functions isolation system firecracker gvisor azure container instances alibaba cloud sandbox docker containers network vpc vpc azure ase vpc vpc monitoring visualization amazon cloudwatch stackdriver logging azure monitor cloudmonitor sisdig tracing aws x ray cloud trace application insights context objects zipkin jaeger management authentication aws iam cloud functions iam azure ad and third party identities digital signatures ibm iam authorization role based resource based access control and other policies role based access control role based access control role based access control role based access control encryption in transit mtls google alts mtls tls on ingress tls on ingress at rest files secrets environment variables all data kms all data key vault code environment variables kms data secrets tools tools aws trusted advisor event threat detection etd devsecops tools azure ad access reviews table iii a brief list of security mechanisms used in open source serverless platforms aspect category openfaas kubeless knative fission openwhisk nuclio isolation system docker docker docker docker docker docker network k 8 s namespace k 8 s namespace k 8 s namespace k 8 s namespace k 8 s namespace k 8 s namespace monitoring visualization grafana grafana grafana grafana kamon dashboard tracing zipkin jaeger zipkin jaeger zipkin jaeger management authentication oauth 2 kong authentication istio authentication did key method self hosted authentication authorization k 8 s rbac k 8 s rbac k 8 s istio rbac k 8 s istio rbac support encryption in transit tls on ingress tls on ingress istio mtls istio mtls tls on ingress tls on ingress at rest k 8 s secrets k 8 s secrets k 8 s secrets k 8 s secrets k 8 s secrets k 8 s secrets rity which may imply potential directions towards a better ecosystem a academic solutions vs industrial solutions we compared the efforts in academia and industry from three perspectives research interests features of the solutions and application status as mentioned above both academic and industrial solutions cover the four main security challenges this consistency in research interests implies that the current research is in a healthy state nonetheless the solutions show different characteristics academic research tends to demonstrate the feasibility of using specific methods especially new technologies to solve particular problems in contrast the goal of commercial plat forms is to be as secure as possible while ensuring stability thus providers prefer methods that have been proven in long term practice and usually combine several methods to achieve multilayer protection in addition research led solutions often adopt a more holistic approach from developer to platform without control over other parties providers can promote their solutions only through guidelines or best practices regarding application status some of the reported academic research work has not yet been tested or applied in industry as it is relatively new we believe that open source efforts from both academia and industry such as publicly available research real world datasets and standardized benchmarks can help promote smooth adoption of newly emerging solu tions b commercial platforms vs open source platforms various commercial and open source serverless platforms have flourished thanks to the vigorous serverless computing market during our investigation we found considerable dif ferences in security between these two kinds of platforms we discuss and analyze this phenomenon in this section specifically we compare the security measures adopted in commercial and open source platforms in terms of five aspects isolation monitoring management encryption and tools the detailed results are listed in table ii and table iii first most commercial platforms are equipped with self developed secure containers and provide vpcs for network level isolation in terms of monitoring they introduce their own specialized distributed tracing and monitoring prod ucts into serverless scenarios and connect them to unified visualization consoles through security policies and iam systems these platforms provide mature authentication and authorization capabilities and support data encryption via storage services furthermore their long term investment and technological accumulation allow commercial platforms to provide many tools to assist customers such as configuration recommendation and risk detection in contrast most open source platforms are built atop ku bernetes k 8 s therefore standard docker containers and k 8 s namespace based network isolation have become a general technical solution for monitoring these platforms usually integrate third party tools or employ their infrastructures capabilities to avoid reinventing the wheel moreover open source platforms mainly rely on ingress gateways and infras 7 tructures such as k 8 s and istio to achieve security management and encryption in transit the secret management task is also outsourced to the underlying k 8 s infrastructure similar to the monitoring aspect open source platforms usually do not provide security tools natively but support the integration of third party tools such as jenkins in terms of the above five aspects the security measures of commercial platforms are all stronger than those of open source platforms in terms of completeness and richness the latter s security capabilities mainly rely on infrastructure or third party tools two main reasons for this difference exist first commercial platforms have richer cloud management experience and more capital and human resources so they can leverage their existing security mechanisms and provide standardized features as baas services e g iam systems second the development of open source platforms is still rela tively rudimentary they focus more on realizing core features of serverless computing such as agile application construction and automatic function scaling rather than security features mature and standardized open source platforms can counter the vendor lock in problem and stimulate community efforts and related work nevertheless open source platforms still have a long way to go to compete with commercial platforms in terms of security this security lag also limits their applica tion hence more effort is needed to develop and standardize the security mechanisms of open source serverless platforms although some have taken the lead e g openfaas the competition among open source serverless platforms is still fierce and there is no de facto standard from this perspective unremitting efforts in developing security measures and the establishment of unique security capabilities therewith may become the key to gaining the dominant position viii conclusion this paper has presented a survey of both literature research and industrial solutions to elucidate the research status of techniques for securing serverless computing starting from the characteristics of serverless environments we explained the origins of four main security challenges resource isolation security monitoring security management and data protection based on a review of existing solutions we then identified pos sible research directions finally we compared academic and industrial solutions as well as current commercial and open source serverless platforms and elaborated on our thoughts re garding promising directions for establishing a better research and application ecosystem references 1 marketsandmarkets serverless architecture market size share and global market forecast to 2025 2020 accessed on 2021 03 15 online available http bit ly serverless market 2 e jonas j schleier smith v sreekanti c c tsai a khandelwal q pu v shankar j carreira k krauth n yadwadkar et al cloud programming simplified a berkeley view on serverless computing arxiv preprint arxiv 1902 03383 2019 3 h shafiei a khonsari and p mousavi serverless computing a survey of opportunities challenges and applications jan 2020 accessed on 2021 03 15 online available engrxiv org u 8 xth 4 a agache m brooker a iordache a liguori r neugebauer p piwonka and d m popa firecracker lightweight virtualization for serverless applications in 17 th usenix symposium on networked systems design and implementation nsdi 20 2020 pp 419 434 5 j cadden t unger y awad h dong o krieger and j appavoo seuss skip redundant paths to make serverless fast in proceedings of the fifteenth european conference on computer systems 2020 pp 1 15 6 m obetz s patterson and a milanova static call graph construction in aws lambda serverless applications in 11 th usenix workshop on hot topics in cloud computing hotcloud 19 2019 7 w t lin c krintz r wolski m zhang x cai t li and w xu tracking causal order in aws lambda applications in 2018 ieee international conference on cloud engineering ic 2 e ieee 2018 pp 50 60 8 p datta p kumar t morris m grace a rahmati and a bates valve securing function workflows on serverless computing plat forms in proceedings of the web conference 2020 2020 pp 939 950 9 a sankaran p datta and a bates workflow integration alleviates identity and access management in serverless computing in annual computer security applications conference 2020 pp 496 509 10 j nam s lee h seo p porras v yegneswaran and s shin bastion a security enforcement network stack for container networks in 2020 usenix annual technical conference usenix atc 20 2020 pp 81 95 11 w qiang z dong and h jin se lambda securing privacy sensitive serverless applications using sgx enclave in international conference on security and privacy in communication systems springer 2018 pp 451 470 12 s brenner and r kapitza trust more serverless in proceedings of the 12 th acm international conference on systems and storage 2019 pp 33 43 13 l wang m li y zhang t ristenpart and m swift peeking behind the curtains of serverless platforms in 2018 usenix annual technical conference usenix atc 18 2018 pp 133 146 14 e g young p zhu t caraza harter a c arpaci dusseau and r h arpaci dusseau the true cost of containing a gvisor case study in 11 th usenix workshop on hot topics in cloud computing hotcloud 19 2019 15 d ustiugov p petrov m kogias e bugnion and b grot bench marking analysis and optimization of serverless function snapshots in proceedings of the 26 th acm international conference on architectural support for programming languages and operating systems 2021 pp 559 572 xing li s 19 received a b e degree in software engineering from shandong university jinan china in 2016 he is currently pursuing a ph d degree in cybersecurity at zhejiang university hangzhou china his research interests are focused on the security of cloud networking and applications xue leng received a ph d degree in computer science and technology from zhejiang university hangzhou china in 2020 her research interests include security enhancement in sdn and performance optimization of microservices and service meshes yan chen f 17 received a ph d degree in computer science from the university of california at berkeley berkeley ca usa in 2003 he is currently a professor with the department of computer science northwestern university evanston il usa his research interests include network security measurement and diagnosis for large scale networks and distributed systems http bit ly serverless market engrxiv org u 8 xth i introduction ii background and overview ii a serverless computing ii b threats and security challenges ii c survey methodology and objects iii challenge 1 resource isolation iv challenge 2 security monitoring v challenge 3 security management vi challenge 4 data protection vii gap analysis vii a academic solutions vs industrial solutions vii b commercial platforms vs open source platforms viii conclusion references biographies xing li xue leng yan chen