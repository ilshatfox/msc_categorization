covernet multimodal behavior prediction using trajectory sets tung phan minh caltech tung caltech edu elena corina grigore freddy a boulton oscar beijbom and eric m wolff nutonomy an aptiv company elena corina grigore freddy boulton oscar eric nutonomy com abstract we present covernet a new method for multimodal probabilistic trajectory prediction for urban driving previ ous work has employed a variety of methods including mul timodal regression occupancy maps and 1 step stochastic policies we instead frame the trajectory prediction problem as classification over a diverse set of trajectories the size of this set remains manageable due to the limited number of distinct actions that can be taken over a reasonable predic tion horizon we structure the trajectory set to a ensure a desired level of coverage of the state space and b eliminate physically impossible trajectories by dynamically generat ing trajectory sets based on the agent s current state we can further improve our method s efficiency we demonstrate our approach on public real world self driving datasets and show that it outperforms state of the art methods 1 introduction we are motivated by autonomous systems operating in dynamic interactive and uncertain environments specifi cally we focus on the problem of a self driving car navigat ing in an urban environment where it must share the road with a diverse set of other agents including vehicles bicy clists and pedestrians in this context reasoning about the possible future states of agents is critical for safe and con fident operation effective prediction of future agent states depends on both road context e g lane geometry cross walks traffic lights and the recent behavior of other agents trajectory prediction is inherently challenging due to a wide distribution of agent preferences e g a cautious vs aggressive and intents e g turn right vs go straight useful predictions must represent multiple possibilities and their associated likelihoods furthermore we expect that predicted trajectories are physically realizable multimodal regression models appear naturally suited for this task but may degenerate during training into a sin gle mode avoiding this mode collapse requires careful work done during an internship at nutonomy an aptiv company considerations 13 7 20 additionaly most state of the art methods predict unconstrained positions 13 7 20 31 resulting in trajectories that may not be physically possible for execution 12 is a recent exception our main insights leverage domain specific knowledge to effectively structure the output representation and address these concerns our first insight is that there are relatively few distinct actions that can be taken over a reasonable time horizon dynamic constraints considerably limit the set of reachable states over a standard six second prediction horizon and the inherent uncertainty in agent behavior outweighs small approximation errors we exploit this insight to formulate multimodal probabilistic trajectory prediction as classifica tion over a trajectory set this avoids mode collapse and lets the user design the trajectory set to meet specific require ments e g dynamically feasible coverage guarantees our second insight is that predicted trajectories should be consistent with the current dynamic state thus we for mulate our output as motions relative to our initial state e g turn slightly right accelerate when integrated with a dynamics model the output is converted to an appropri ate sequence of positions beyond helping ensure physi cally valid trajectories this dynamic output representation ensures that the outputs are diverse in the control space across a wide range of speeds while 12 exploit a simi lar insight for regression we extend the use of a dynamic representation to classification and anchor box regression we now summarize our main contributions on multi modal probabilistic trajectory prediction with covernet introduce the notion of trajectory sets for multimodal trajectory prediction and show how to generate them in both a fixed and dynamic manner compare state of the art methods on nuscenes 5 a public real world urban driving benchmark empirically show the benefits of classification on tra jectory sets over multimodal regression 2 related work we focus on trajectory prediction approaches based on deep learning and refer the reader to 26 for a survey of more classical approaches the approaches below typically 1 ar x iv 1 91 1 10 29 8 v 2 cs l g 1 a pr 2 02 0 figure 1 covernet overview we generate a trajectory set fixed or dynamic based on current state that we classify over the input and backbone follow 13 use cnns to combine agent history with scene context and vary significantly in their output representations depend ing on the method the scene context will include everything from the past states of a single agent to the past states of all agents along with high fidelity map information stochastic approaches encode choice over multiple pos sibilities via sampling random variables one of the earliest works on motion forecasting frames the problem as learning stochastic 1 step policies 22 r 2 p 2 30 improves sample coverage for such policies via a symmetric kl loss recent work has considered the multiagent setting 31 and uncer tainty in the model itself 19 other methods generate sam ples using cvaes 20 25 2 21 or gans 34 17 36 stochastic approaches can be computationally expensive due to a repeated 1 step rollouts in the 1 step policy ap proach or b requiring a large number of samples for ac ceptable performance often hard to determine in practice unimodal approaches output a single trajectory per agent 27 6 15 1 this is often unable to adequately cap ture possibilities in complex scenarios even when predict ing gaussian uncertainty these methods typically average over behaviors which may result in nonsensical trajectories e g halfway between a right turn and going straight multimodal approaches output either a distribution over multiple trajectories 7 13 20 14 or a spatial temporal oc cupancy map 20 28 35 the latter flexibly captures mul tiple outcomes but often has large memory requirements for grids at reasonable resolutions sampling trajectories from an occupancy map a is not well defined and b adds additional compute during inference multimodal regres sion methods can easily suffer from mode collapse to a single mode leading 7 to use a fixed set of anchor boxes in contrast the strength of our contribution lies in framing the problem as classification rather than regression we also contribute three methods of creating trajectory sets to clas sify over and achieve performance improvements over 7 most trajectory prediction methods do not explicitly en code motion constraints predicting trajectories that can be physically infeasible a recent exception is 12 by careful choice of our output representation we exclude all trajecto ries that would be physically impossible to execute al though our predictions can result in off road trajectories at test time our model learns to assign them a low probability as long as such trajectories are not included during training graph search is a classic approach to motion plan ning 24 and often used in urban driving applications 4 a motion planner grows a compact graph or tree of possi ble motions and computes the best trajectory from this set e g max clearance from obstacles since we do not know the other agent s goals or preferences we cannot directly plan over the trajectory set instead we implicitly estimate these features and directly classify over the set of possible trajectories there is a fundamental tension between the size of the trajectory set and the coverage of all potential motions 3 since we are only trying to predict the motions of other vehicles well enough to drive we can easily accept small errors over moderate time horizons 3 to 6 seconds comparing results on trajectory prediction for self driving cars in urban environments is challenging numer ous papers are evaluated purely on internal datasets 13 35 6 28 as common public datasets are either relatively small 16 focused on highway driving 9 or are tangen tially related to driving 32 while there are encouraging new developments in public datasets 8 20 there is no standard to help provide clear and open results we evalu ate our models on nuscenes 5 a recent public self driving car dataset focused on urban driving 3 method in this section we outline the main contribution of the pa per a novel method for trajectory set generation and show how it can be used for behavior prediction 2 3 1 notation covernet computes a multimodal probabilistic predic tion of the future states of a given vehicle using i the cur rent and past states of all agents e g vehicles pedestrians bicyclists and ii a high definition map we assume access to the state outputs of an object de tection and tracking system of sufficient quality for self driving we denote the set of agents that a self driving car interacts with at time t by it and sit the state of agent i it at time t let sim n sim s i n where m n and i it denote the discrete time trajectory of agent i from for times t m n furthermore we assume access to a high definition map including lane geometry crosswalks drivable area and other relevant information let c i s i t m t map denote the scene context over the past m steps i e map and partial history of all agents figure 1 overviews our model architecture it largely fol lows 13 with the key difference in the output represen tation see section 3 2 we use resnet 50 18 given its effectiveness in this domain 13 7 while our network only computes a prediction for a sin gle agent at a time our approach can be extended to simul taneously predict for all agents in a similar manner as 7 we focus on single agent predictions as in 13 both to simplify the paper and focus on our main contributions the next sections detail our input and output represen tations our innovations are in our output representations the dynamic encoding of trajectories and in treating the problem as classification over a diverse set of trajectories 3 2 output representation due to the relatively short trajectory prediction horizons up to 6 seconds and inherent uncertainty in agent behav ior we approximate all possible motions with a set of tra jectories that gives sufficient coverage of the space let r st be the set of all states that can be reached by an agent with current state st in n timesteps purely based on physical capabilities we approximate this set by a finite number of trajectories defining a trajectory set k st t n we define a dynamic trajectory set genera tor as a function fn s 0 k which allows the trajectory set to be consistent with the current dynamics in contrast a fixed generator does not use information about the cur rent state and thus returns the same trajectories for each in stance we discuss trajectory set construction in section 3 we encode multimodal probabilistic trajectory predic tions by classifying over the appropriate trajectory set given an agent of interest and the scene context c as is common in the classification literature we use the softmax distribu tion concretely the probability of the k th trajectory is given as p skt t n x exp fk x i exp fi x where fi x r is a fixed b dynamic figure 2 overview of trajectory set generation approaches the output of the network s penultimate layer in contrast to previous work 13 7 we choose not to learn an uncertainty distribution over the space while it is straightforward to add gaussian uncertainty along each trajectory in a similar manner to 7 the density of our tra jectory sets reduces its benefit compared to the case when there are only a handful of modes an ideal trajectory set always contains a trajectory that is close to the ground truth we propose two broad categories of trajectory set generation functions fixed and dynamic see figure 2 in both cases we normalize the current state to be at the origin with the heading oriented upwards 3 3 fixed trajectory sets we consider a trajectory set to be fixed if the trajec tories that it contains do not change as a function of the agent s current dynamic state or environment intuitively this makes it easy to classify over since it allows for a fixed enumeration over the set but may result in many trajecto ries that are poor matches for the current situation given a set of representative trajectory data the problem of finding the smallest fixed approximating trajectory set k can be cast as an instance of the np hard set cover prob lem 11 approximating a dense trajectory set by a sparse trajectory set that still maintains good coverage and diver sity has been studied in the context of robot motion plan ning 3 in this work we use a coverage metric defined as the maximum point wise euclidean distance between tra jectories our trajectory set construction procedure starts with subsampling a reasonably large set k of trajectories ours have size 20 000 from the training set selecting an acceptable error tolerance we proceed to find the solution to argmin k k subject to k k k k l k k l 1 where st t n s t t n max t n t s s 2 we refer to this metric as the maximum point wise 2 distance 3 we employ a simple greedy approximation algorithm to solve 1 which we refer to as the bagging algorithm we cherry pick the best among candidate trajectories to place in a bag of trajectories that will be used as the covering set we repeatedly consider as candidates those trajectories that have not yet been covered and choose the one that covers the most uncovered trajectories ties are broken arbitrarily standard results without using the specialized structure of the data show that our deterministic greedy algorithm is suboptimal by a factor of at most log k see chap ter 35 3 11 in our experiments we were able to obtain decent coverage specifically under 2 meters in maximum point wise 2 distance for 6 second trajectories with fewer than 2 000 elements in the covering set 3 4 dynamic trajectory sets we consider a trajectory set to be dynamic if the trajec tories that it contains change as a function of the agent s current dynamic state this construction guarantees that all trajectories in the set are dynamically feasible we now describe a simple approach to constructing such a dynamic trajectory set focused on predicting vehicle mo tion we use a standard vehicle dynamical model 24 as similar models are effective for planning at urban non highway driving speeds 23 our approach however is not limited to vehicles or any specific model the dynami cal model we use is x v cos y v sin v b tan usteer v uaccel with states x y position v speed yaw controls usteer steering angle uaccel longitudinal acceleration and parameter b wheelbase the dynamics model controls sequence and current state determine a trajectory st t n by forward integration we create a dynamic trajectory set k based on the current state st by integrating forward with our dynamic model over diverse control sequences such a dynamic trajectory set has the possibility of being sparser than a fixed set for the same coverage as each control sequence maps to multiple trajectories as a function of the current state we parameterize the controls output space by a diverse set of constant lateral and longitudinal accelerations over the prediction horizon using lateral acceleration instead of steering angle is a way of normalizing the output over a range of speeds a desired lateral acceleration will corre spond to different steering angles as a function of speed we convert the lateral acceleration into a steering angle as suming instantaneous circular motion alat v 2 with cur vature tan usteer b this conversion is ill defined figure 3 number of trajectories needed for coverage in meters see section 3 when the speed is near zero so we use max v 1 in place of v note that it is straightforward to expand the controls output space to include multiple lateral and longitudinal accelerations over a non uniform prediction horizon we can further prune the dynamic trajectory set con struction in a similar manner to how we handled the fixed trajectory sets in 3 3 the main difference is that the cov ering set here is constructed from the set of control input profiles as opposed to elements of k itself namely we use an analogous greedy procedure to cover the set of sam ple trajectories with a subset of control profiles e g lateral and longitudinal accelerations as a function of time note that unlike the case of fixed trajectories the synthetic na ture of the dynamic profile may not guarantee 100 cov erage of k to counter this problem we can also create a hybrid trajectory set by combining a fixed and dynamic set particularly we find a covering subset for the elements of k that cannot be covered by the dynamic choices and combine this subset with the dynamic choices when the dynamic set is well constructed this can result in a smaller covering set as may be seen from figure 3 4 experiments we present empirical results on trajectory prediction of vehicles in urban environments the following sections de scribe the baselines metrics and urban driving datasets that we considered we used the same input representation and model architecture across our models and baselines 4 1 baselines physics oracle we introduce a simple and interpretable model that extends classic physics based models we use the track s current velocity acceleration and yaw rate to compute the following predictions i constant velocity and yaw ii constant velocity and yaw rate iii constant accel eration and yaw and iv constant acceleration and yaw rate 4 the oracle is the minimum average point wise euclidean distance over the four models regression baselines and extensions we compare our contribution to state of the art methods by implementing two main types of regression models multimodal regres sion to coordinates 13 and multimodal regression to resid uals from a set of anchors 7 ordinal regression we overview these methods for completeness and to provide context for novel variations that we introduce multimodal regression to coordinates our implemen tation follows the details of multiple trajectory prediction mtp 13 adapted for our datasets this model predicts a fixed number of trajectories modes and their associated probabilities the per agent loss agent i at time t is de fined as lmtpit k k 1 1 k k log pik l sit t n s i t t n 2 where 1 is the indicator function that equals 1 only for the best matching mode k represents a mode l is the re gression loss and is a hyper parameter used to trade off between classification and regression with some abuse of notation we use k to represent the set of trajectories pre dicted by a model the original implementation 13 uses a heuristic based on the relative angle between each mode and the ground truth we select a mode uniformly at random when there are no modes with an angle below the threshold multimodal regression to anchor residuals our im plementation follows the details of multipath mp 7 this model implements ordinal regression by first choos ing among a fixed set of anchors computed a priori and then regressing to residuals from the chosen anchor the proposed per agent loss is 2 where 1 and the k th trajectory is the sum of the corresponding anchor and pre dicted residual to remain true to the implementation in 7 we choose our best matching anchor by minimizing the av erage displacement to the ground truth we compute the set of fixed anchors by employing the same mechanism described in section 3 3 note that this set of trajectories is the same for all agents in our dataset we then regress to the residuals from the chosen anchor 4 2 our models covernet fixed our classification approach where the k set includes only fixed trajectories covernet dynamic our classification approach where the k set is a function of the current agent state covernet hybrid our classification approach where the k set is a combination of fixed and dynamic trajectories multipath with dynamic anchors the multipath ap proach extended to use dynamic anchors described in sec tion 3 4 the set of anchors is a function of the agent s speed helping ensure that anchors are dynamically feasible we then regress to the residuals from the chosen anchor 4 3 implementation details our implementation setup follows 13 and 7 with key differences highlighted below see figure 1 for an overview we implemented our models using resnet 50 18 as our backbone with pre trained imagenet 33 weights downloaded from 10 we read the resnet conv 5 feature map and apply a global pooling layer we then concatenate the result with an agent state vector including speed accel eration yaw rate as detailed in 13 we then add a fully connected layer with dimension 4096 the output dimension of covernet is equal to the num ber of modes namely k for the hybrid models the fixed dynamic trajectory split for the nuscenes dataset is 92 682 and that of the internal dataset is 524 500 we chose these values to maximize coverage at 2 meters and minimize the sum of the total number of categories for the regression models our outputs are of dimension k x n 1 where k represents the total number of predicted modes x represents the number of features we are predicting per point n represents the number of points in our predictions and the extra output per mode is the probability associated with each mode for our imple mentations n h f where h represents the length of the prediction horizon in seconds and f represents the sampling frequency for each point we predict x y coor dinates so x 2 our internal datasets have f 10 hz while the pub licly available nuscenes is sampled at f 2 hz we in clude results on two different prediction horizon lengths namely h 3 seconds and h 6 seconds the loss functions we use are the same across all of our implementations for any classification losses we utilize cross entropy with positive samples determined by the ele ment in the trajectory set closest to the actual ground truth in minimum average of point wise euclidean distances and for any regression losses we utilize smooth 1 for our mtp implementation we place equal weighting between the classification and regression components of the loss set ting 1 similar to 13 for our classification models we utilize a fixed learn ing rate of 1 e 4 for our regression models we use a learning rate of 1 e 4 with a drop by 0 1 as follows for our internal dataset we always perform the drop at epoch 6 for nuscenes we perform the drop at 1 epoch 31 for mtp with 1 and 3 modes and mp dynamic with 16 modes 2 epoch 12 for mtp with 16 and 64 modes mp with 16 modes and mp dynamic with 64 modes and 3 epoch 7 for mp with 64 modes 5 a covernet fixed 2 1937 modes b covernet hybrid 1024 modes c covernet dynamic 3 342 modes d mtp 13 3 modes e multipath 13 dynamic 16 modes f multipath 13 64 modes figure 4 examples of predicted trajectories on the same scene the top row includes our covernet models ranging from fixed to dynamic the bottom row includes the baselines we compare against as well as our dynamic templates variation objects in the world are rendered up to the current time 4 4 metrics there are multiple ways of evaluating multimodal trajectory prediction common measures include log likelihood 7 31 average displacement error and hit rate 20 we focus on the a displacement error and b hit rate both computed over a subset of the most likely modes for insight into trajectory prediction performance in scenarios where there are multiple plausible actions we use the minimum average displacement error ade the minadek is mins p 1 n t n t s s where p is the set of k most likely trajectories we also analyze the final displacement error fde which is st n s t n where s is the most likely mode in the context of planning for a self driving vehicle the above metrics may be hard to interpret we use the no tion of a hit rate see 20 to simplify interpretation of whether or not a prediction was close enough we define a hitk d for a single instance agent at a given time as 1 if mins p max t n t s s d and 0 otherwise when averaged over all instances we refer to it as the hitratek d 4 5 input representation similar to 13 7 15 we rely on results from an ob ject detection module and we rasterize the scene for each agent as an rgb image we start with a blank image of size h w 3 and draw the drivable area crosswalks and walk ways using a distinct color for each semantic category we rotate the image so that the agent s heading faces up and place the agent on pixel l w measured from the top left of the image we assign a different color to vehicles and pedestrians and choose a different color for the agent so that it is distinguishable in our experiments we use a resolution of 0 1 meters per pixel and choose l 400 and w 250 thus the model can see 40 meters ahead 10 meters behind and 25 meters on each side of the agent we represent the sequence of past observations for each agent as faded bounding boxes of the same color as the 6 figure 5 best models of each type on internal dataset 6 second horizon covernet models significantly outperform others legend lists the model name whether the model is dynamic or fixed if applicable and the number of modes agent s current bounding box we fade colors by linearly decreasing saturation in hsv space as a function of time although we have only used one input representation in these experiments our novel output representation can work with the input representations of 28 35 4 6 datasets internal self driving dataset we collected 60 hours of real world urban driving data in singapore raw sensor data is collected by a car outfitted with cameras lidars and radars a highly optimized object detection and tracking system filters the raw sensor data to produce tracks at a 10 hz rate each track includes information regarding its type e g car pedestrian bicycle unknown pose physical ex tent and speed with quality sufficient for fully autonomous driving we also have access to high definition maps with semantic labels of the road such as the drivable area lane geometry and crosswalks each ego vehicle location at a given timestamp is consid ered a data point we do not predict on any tracks that are stationary over the entire prediction horizon our internal dataset contains around 11 million usable data points but for this analysis we created train validation and test sets with 1 million 300 000 and 300 000 data points respectively nuscenes we also report results on nuscenes 5 a public self driving car dataset nuscenes consists of 1000 scenes each 20 seconds in length scenes are taken from urban driving in boston usa and singapore each scene includes hand annotated tracks and high definition maps tracks have 3 d ground truth annotations and are published at 2 hz since annotations are not public on the test set we cre ated a set for validation from the train set called the train val set and treated the validation set as the test set as with our internal dataset we removed vehicles that are sta tionary and also removed vehicles that go off the annotated method minade 1 minade 5 minade 10 minade 15 max 2 1 0 0 67 0 64 0 64 average 2 0 96 0 66 0 64 0 64 rms of 2 0 96 0 66 0 64 0 63 table 1 ground truth matching for fixed trajectory set 150 modes on internal dataset 3 sec horizon map this leaves us with 32 186 observations in the train set 8 560 observations in the train val set and 9 041 obser vations in the validation set this split publicly available in the nuscenes software development kit 29 5 results the main results are summarized in table 2 qualitative results are shown in figure 4 quantitative results across the six metrics and the two datasets we used covernet outperforms previous methods and baselines in 8 out of 12 cases however there are big differences in method ranking depending on the metric covernet represents a significant improvement on the hitrate 5 2 m metric achieving 33 on nuscenes with the hybrid trajectory set the next best model is multipath where our dynamic grid extension is a slight improvement over the fixed grid used by the authors 13 vs 10 mtp with three modes performs worse achieving 10 barely outperforming the constant velocity baseline we notice a similar pattern on the internal dataset where covernet outperforms previous methods and base lines here the fixed set with 1 937 modes performs best 57 closely followed by the hybrid set 55 among previous methods again multipath with dynamic set works the best at 30 hitrate 5 2 m figure 5 shows that covernet significantly outperforms previous methods as the hit rate is expanded over more modes covernet also performs well according the average displace error minadek metrics in particular for k 5 10 15 where we see covernet outperforming state of the art methods in every category most notably under the minade 15 metric for our internal dataset the hybrid covernet with fixed set and 2 206 modes performs best with minade 15 of 0 84 4 x better than the constant veloc ity baseline and 2 x better than the mtp and multipath for the minade 1 metric the regression methods performed the best this is not surprising since for low k it is more impor tant to have one trajectory very close to the ground truth a metric paradigm that favors regression over classification a notable difference between nuscenes and internal is that the hitrate 5 2 m and minadek continues to improve for larger sets while it plateaus or even decreases at around 7 https www nuscenes org method modes minade 1 minade 5 minade 10 minade 15 fde hitrate 5 2 m const vel yaw n a 4 61 3 63 4 61 3 63 4 61 3 63 4 61 3 63 11 21 9 86 0 09 0 22 physics oracle n a 3 70 1 88 3 70 1 88 3 70 1 88 3 70 1 88 9 09 5 72 0 12 0 31 mtp 13 1 1 4 17 1 88 4 17 1 88 4 17 1 88 4 17 1 88 9 37 5 22 0 05 0 24 mtp 13 3 3 4 13 2 01 2 93 1 73 2 93 1 73 2 93 1 73 9 23 5 45 0 10 0 28 mtp 13 16 16 4 55 3 15 3 32 2 48 3 25 2 43 3 23 2 42 9 58 7 79 0 08 0 25 mtp 13 64 64 4 50 3 21 3 24 2 63 3 15 2 51 3 13 2 47 9 59 7 74 0 09 0 27 multipath 7 16 16 4 89 2 34 2 64 1 71 2 47 1 71 2 43 1 70 10 41 5 83 0 08 0 24 multipath 7 64 64 5 05 2 30 2 32 1 42 1 96 1 36 1 86 1 34 10 69 5 63 0 10 0 27 multipath 7 dyn 16 16 3 89 2 06 3 34 1 47 3 28 1 46 3 27 1 46 9 19 5 76 0 10 0 30 multipath 7 dyn 64 64 4 05 2 23 3 45 1 53 3 33 1 46 3 28 1 44 9 47 6 17 0 13 0 28 covernet fixed 8 64 64 5 16 2 77 2 41 1 98 2 18 1 93 2 13 1 93 10 84 6 65 0 08 0 06 covernet fixed 5 232 208 4 73 2 32 2 14 1 35 1 72 1 25 1 60 1 22 10 16 5 67 0 15 0 31 covernet fixed 4 415 374 5 07 2 27 2 31 1 29 1 76 1 15 1 57 1 10 10 62 5 85 0 17 0 35 covernet fixed 3 844 747 4 74 2 28 2 32 1 32 1 74 1 13 1 51 1 07 10 19 5 92 0 23 0 33 covernet fixed 2 2206 1937 5 41 2 16 2 62 1 16 1 92 0 93 1 63 0 84 11 36 5 53 0 24 0 57 covernet dyn 3 357 342 3 90 2 06 2 02 1 17 1 57 0 97 1 36 0 88 9 65 5 90 0 33 0 52 covernet hybrid 774 1024 3 87 2 18 1 96 1 24 1 48 0 99 1 28 0 88 9 26 5 84 0 33 0 55 table 2 nuscenes and internal datasets 6 sec horizon results listed as nuscenes internal smaller minadek and fde is better larger hitrate 5 2 m is better dyn dynamic vel velocity const constant is given in meters 500 1 000 modes on nuscenes we hypothesize that this is due to relatively limited size of nuscenes qualititive results in figure 4 we show the visualization of a scene overlaid with predictions from our top models compared against our baselines we note that our prediction horizon for this scene is six seconds as such the predic tions do not reflect collisions as the pedestrians in the scene will have crossed the road before our vehicle reaches the pedestrian pose reflected in the images we emphasize that the covernet predictions do not in clude straight trajectories because the vehicle slows down before the curve when visualized as a video we first pre dict straight trajectories followed by predicting left turn tra jectories when the vehicle starts slowing down we high light the smoothness of the trajectories predicted by our model contrasted against the regression baselines figure 4 also suggests that the different alternatives for left turns are better captured by covernet than by the baseline models 6 ablation studies 6 1 distance function we analyzed different methods for matching the ground truth to the most suitable trajectory in the trajectory set table 1 compares performance using the max average and root mean square of the point wise error vector of eu clidean distances for matching ground truth to the best trajectory in a fixed trajectory set of size 150 performance is relatively consistent across all three choices so we picked the average point wise 2 norm to better align with related regression approaches 7 6 2 dynamic vs fixed trajectory set coverage in figure 3 we compare the number of trajectories needed to achieve 100 coverage of the trajectory set for different levels of for the fixed and hybrid trajectory set generation functions where the latter use a mix of fixed and dynamic trajectories this figure highlights the advantage of adding dynamic trajectories they are able to achieve the same level of coverage as the fixed trajectories but need a smaller number of trajectories to do so 7 conclusion we introduced covernet a novel method for multi modal probabilistic trajectory prediction in real world ur ban driving scenarios by framing this problem as classi fication over a diverse set of trajectories we were able to a ensure a desired level of coverage of the state space b eliminate dynamically infeasible trajectories and c avoid the issue of mode collapse we showed that the size of our trajectory sets remain manageable over realistic prediction horizons dynamically generating trajectory sets based on the agent s current state further improved performance we compared our results to multiple state of the art methods on real world self driving datasets public and internal and showed that it outperforms similar methods acknowledgments we would like to thank emilio fraz zoli and sourabh vora for insightful discussions and robert beaudoin for help on the implementation 8 references 1 a alahi k goel v ramanathan a robicquet l fei fei and s savarese social lstm human trajectory prediction in crowded spaces in the ieee conference on computer vision and pattern recognition cvpr june 2016 2 2 apratim bhattacharyya bernt schiele and mario fritz ac curate and diverse sampling of sequences based on a best of many sample objective in the ieee conference on com puter vision and pattern recognition cvpr june 2018 2 3 m s branicky r a knepper and j j kuffner path and trajectory diversity theory and algorithms in the ieee in ternational conference on robotics and automation icra may 2008 2 3 4 martin buehler karl iagnemma and sanjiv singh the darpa urban challenge autonomous vehicles in city traffic springer publishing company 1 st edition 2009 2 5 holger caesar varun bankiti alex h lang sourabh vora venice erin liong qiang xu anush krishnan yu pan giancarlo baldan and oscar beijbom nuscenes a mul timodal dataset for autonomous driving arxiv preprint arxiv 1903 11027 2019 1 2 7 6 sergio casas wenjie luo and raquel urtasun intentnet learning to predict intention from raw sensor data in pro ceedings of the 2 nd conference on robot learning october 2018 2 7 yuning chai benjamin sapp mayank bansal and dragomir anguelov multipath multiple probabilistic anchor trajec tory hypotheses for behavior prediction in 3 rd conference on robot learning corl november 2019 1 2 3 5 6 8 8 ming fang chang john lambert patsorn sangkloy jag jeet singh slawomir bak andrew hartnett de wang peter carr simon lucey deva ramanan and james hays argo verse 3 d tracking and forecasting with rich maps in the ieee conference on computer vision and pattern recogni tion cvpr june 2019 2 9 j colyar and j halkias us highway 101 dataset 2007 2 10 torch contributors torchvision models https pytorch org docs stable torchvision models html 2019 5 11 thomas h cormen charles e leiserson ronald l rivest and clifford stein introduction to algorithms third edi tion the mit press 3 rd edition 2009 3 4 12 henggang cui thi nguyen fang chieh chou tsung han lin jeff schneider david bradley and ne manja djuric deep kinematic models for physi cally realistic prediction of vehicle trajectories 2019 https arxiv org abs 1908 00219 v 1 1 2 13 h cui v radosavljevic f chou t lin t nguyen t huang j schneider and n djuric multimodal trajectory predictions for autonomous driving using deep convolutional networks in international conference on robotics and au tomation icra may 2019 1 2 3 5 6 8 14 nachiket deo and mohan trivedi convolutional social pooling for vehicle trajectory prediction in the ieee con ference on computer vision and pattern recognition cvpr workshops june 2018 2 15 nemanja djuric vladan radosavljevic henggang cui thi nguyen fang chieh chou tsung han lin and jeff schnei der short term motion prediction of traffic actors for au tonomous driving using deep convolutional networks 2018 https arxiv org abs 1808 05819 v 2 2 6 16 andreas geiger philip lenz and raquel urtasun are we ready for autonomous driving the kitti vision benchmark suite in the ieee conference on computer vision and pat tern recognition cvpr 2012 2 17 agrim gupta justin johnson li fei fei silvio savarese and alexandre alahi social gan socially acceptable tra jectories with generative adversarial networks in the ieee conference on computer vision and pattern recognition cvpr june 2018 2 18 kaiming he xiangyu zhang shaoqing ren and jian sun deep residual learning for image recognition the ieee conference on computer vision and pattern recognition cvpr 2015 3 5 19 mikael henaff alfredo canziani and yann lecun model predictive policy learning with uncertainty regularization for driving in dense traffic in 7 th international conference on learning representations iclr april 2019 2 20 joey hong benjamin sapp and james philbin rules of the road predicting driving behavior with a convolutional model of semantic interactions in the ieee conference on computer vision and pattern recognition cvpr june 2019 1 2 6 21 boris ivanovic edward schmerling karen leung and marco pavone generative modeling of multimodal multi human behavior in proceedings of the international con ference on intelligent robots and systems iros october 2018 2 22 kris m kitani brian d ziebart j andrew bagnell and martial hebert activity forecasting in the european con ference on computer vision eccv 2012 2 23 j kong m pfeiffer g schildbach and f borrelli kine matic and dynamic vehicle models for autonomous driving control design in the ieee intelligent vehicles symposium iv june 2015 4 24 steven m lavalle planning algorithms cambridge uni versity press new york ny usa 2006 2 4 25 namhoon lee wongun choi paul vernaza chris choy philip torr and manmohan chandraker desire distant future prediction in dynamic scenes with interacting agents in the ieee conference on computer vision and pattern recognition cvpr july 2017 2 26 stphanie lefvre dizan vasquez and christian laugier a survey on motion prediction and risk assessment for intelli gent vehicles robomech journal 2014 1 27 wenjie luo bin yang and raquel urtasun fast and furi ous real time end to end 3 d detection tracking and mo tion forecasting with a single convolutional net in the ieee conference on computer vision and pattern recog nition cvpr june 2018 2 28 abhijit ogale mayank bansal alex krizhevsky chauffeur net learning to drive by imitating the best and synthesizing the worst in robotics science and systems rss june 2019 2 7 9 https pytorch org docs stable torchvision models html https pytorch org docs stable torchvision models html https pytorch org docs stable torchvision models html 29 nuscenes contributors nuscenes https www nuscenes org 2020 7 30 nicholas rhinehart kris m kitani and paul vernaza r 2 p 2 a reparameterized pushforward policy for diverse precise generative path forecasting in the european conference on computer vision eccv september 2018 2 31 nicholas rhinehart rowan mcallister kris kitani and sergey levine precog prediction conditioned on goals in visual multi agent settings in the ieee international con ference on computer vision iccv october 2019 1 2 6 32 a robicquet a sadeghian a alahi and s savarese learning social etiquette human trajectory prediction in crowded scenes in the european conference on computer vision eccv 2016 2 33 olga russakovsky jia deng hao su jonathan krause san jeev satheesh sean ma zhiheng huang andrej karpathy aditya khosla michael bernstein alexander c berg and li fei fei imagenet large scale visual recognition chal lenge the international journal of computer vision de cember 2015 5 34 amir sadeghian vineet kosaraju ali sadeghian noriaki hirose hamid rezatofighi and silvio savarese sophie an attentive gan for predicting paths compliant to social and physical constraints in the ieee conference on computer vision and pattern recognition cvpr june 2019 2 35 wenyuan zeng wenjie luo simon suo abbas sadat bin yang sergio casas and raquel urtasun end to end in terpretable neural motion planner in the ieee conference on computer vision and pattern recognition cvpr june 2019 2 7 36 tianyang zhao yifei xu mathew monfort wongun choi chris baker yibiao zhao yizhou wang and ying nian wu multi agent tensor fusion for contextual trajectory predic tion in the ieee conference on computer vision and pat tern recognition cvpr june 2019 2 10 https www nuscenes org https www nuscenes org supplementary material a trajectory set visualization figure 6 visualizes the trajectory sets for fixed hybrid and dynamic trajectory set generation functions to better understand the space covernet learns to classify over we present the fixed trajectory sets for different coverage levels and the dynamic trajectory sets for a fixed coverage level but varying speeds b minade 1 over the prediction horizon in figure 7 we show the minade 1 for the best regres sion and covernet models to demonstrate how the perfor mance of the different methods scales with time we note that all of the methods show similar performance over time for the most likely mode figure 7 the minade 1 over the prediction horizon for the best regression and covernet models on our internal dataset c greedy approximation algorithm in 3 3 we detail our bagging algorithm this is a greedy approximation algorithm for solving 1 in this work we utilize a deterministic variant of this al gorithm detailed in 3 3 we mention that another possibil ity is to use a random version of this algorithm this variant makes a weighted random choice based on how many un covered trajectories the candidates are covering until there are no more trajectories to cover this can be repeated many times to obtain multiple bags and we can choose the cover set based on the smallest number of elements 11 figure 6 visualization of fixed and dynamic trajectory sets for different coverage levels on the internal dataset for a 6 second prediction horizon 12