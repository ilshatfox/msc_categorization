missiles an efficient resolution of the co simulation coupling constraint on nearly linear differential systems through a global linear formulation missiles an efficient resolution of the co simulation coupling constraint on nearly linear differential systems through a global linear formulation yohan eguillon a b bruno lacabanne b damien tromeur dervout a ainstitut camille jordan universite de lyon umr 5208 cnrs u lyon 1 villeurbanne france yohan eguillon damien tromeur dervout univ lyon 1 fr bsiemens digital industries software roanne france yohan eguillon bruno lacabanne siemens com abstract in a co simulation context interconnected systems of differential equations are solved separately but they regularly communicate data to one another during these resolutions iterative co simulation methods have been developed in order to enhance both stability and accuracy such methods imply that the systems must integrate one or more times per co simulation step the interval between two consecutive communications in order to find the best satisfying interface values for exchanged data according to a given coupling constraint this requires that every system involved in the modular model is capable of rollback the ability to re integrate a time interval that has already been integrated with different input commands in a paper previously introduced by eguillon et al in 2022 the costarica process is presented and consists in replacing the non rollback capable systems by an estimator on the non last integrations of the iterative process the missiles algorithm introduced in this paper consists in applying the costarica process on every system of a modular model simulated with the ifosmondi jfm iterative co simulation method introduced by eguillon et al in 2021 indeed in this case the iterative part on the estimators of each system can be avoided as the global resolution on a co simulation step can be written as a single global linear system to solve consequently missiles is a non iterative method that leads to the same solution than the ifosmondi jfm iterative co simulation method applied to systems using the costarica process to emulate the rollback keywords cosimulation solver coupling coupling algorithm explicit coupling scheme fmi rollback free 2010 msc 65 65 l 05 68 u 20 1 introduction simulation nowadays has a wide range of facets among them all simulation in time of multiphysics models industrial modular models and composite equations in general is a challenge that is mainly solved by application of a co simulation method a co simulation consists in simulations of interconnected systems exchanging coupling data to one another each of them embedding its own solver such approach has many benefits a multiphysical system can be splitted into different systems also called subsystems so that each of them represents the equations of a given physical domain and is solved by a tailored authors yohan eguillon and bruno lacabanne are currently employees at siemens digital industries software the authors would like to thank siemens digital industries software for supporting this work and institut camille jordan and universite de lyon for supervising this research the patent advanced cosimulation scheduler for dynamic system simulation is currently pending to siemens and includes the missiles co simulation method 1 ar x iv 2 20 3 02 44 1 v 1 m at h n a 4 m ar 2 02 2 https orcid org 0000 0002 9386 4646 https orcid org 0000 0003 1790 3663 https orcid org 0000 0002 0118 8100 y eguillon et al 1 21 2 solver for instance the electrical part can use a dedicated method based on the known shape of the electrical signals the fluid part can benefit from a solver preserving the conservation laws etc another aspect of it is that the systems can be black boxed indeed given a specified set of interactions systems can be part of a co simulation modular model without any need to disclose it in order to simulate it among the related industrial applications we can mention the protection of the intellectual property around the modelling and simulation technologies another one is the interoperability it is possible to connect a set of systems with other systems coming from different platforms and as far as each system provides the requires interactions the modular model made of these interconnected black boxed systems can be simulated thanks to a co simulation method a wide range of co simulation methods also called co simulation algorithms have been proposed in the literature 1 different approaches can be distinguished from the most generic ones preserving the black box aspect of the systems 2 3 4 5 to the ones using the knowledge of the quantities inside of the systems benefiting from this information in order to design a more accurate method 6 7 8 9 10 in addition to the fact that the less a method is generic the more it is accurate in general another trade off has to be taken into account the need for advanced capabilities a set of basic interactions is always required on a system involed in a co simulation the capability to take into account quantities system s inputs the capability to move forward in time simulate on a given time interval and the capability to retrieve some quantities system s outputs no disclosure of the system is required so far more advanced interaction exist and some of them are also generic and non disclosing for instance the capability to provide the directional derivatives or the possibility to move forward in time for periods of different sizes even though most of the simulation and modelling platforms produce systems with a specified way to know which interactions is available or not on a system a standard specification exists the fmi functional mock up interface 11 in this paper advanced capabilities of the systems will be referred to as in the fmi standard without loss of generality other platforms are expected to provide similar capabilities should it have a different name one of these capabilities in particular is critical in co simulation the rollback the rollback is the ability of a system to be integrated more than once on a given time interval also called co simulation step or co simulation time step once a non rollback capable system reaches a given time it can only move forward from this time its past is frozen and can not be changed anymore in opposite a rollback capable system can be simulated on its last co simulation step with different inputs than the ones being used in the previous integrations on this co simulation step a particular class of co simulation method requires the rollback capability on every system the iterative co simulation methods these methods use the results of several integrations on a given co simulation step in order to converge to a more reliable solution regarding the coupling quantities 2 12 13 3 14 15 the rollback being a rare capability in practice iterative co simulation methods can usually only be applied on very academic test cases and most of the industrial modular models cannot benefit from the advantages of the iterative co simulation methods due to the involved non rollback capable systems moreover model based methods are usually challenging to apply on black boxed systems when the structure of the circuit inside of the system is hidden including the equations in order to avoid being restricted to non iterative and non disclosing co simulation methods on industrial systems the authors proposed an approach to replace the rollback requirement by the use of an estimator based on more common capabilities 16 the idea behind this process called costarica for cautiously obtrusive solution to avoid rollback in iterative co simulation algorithms is the following instead of integrating the systems on a given co simulation step in case we do not yet know if this integration will be the last one on the step an estimator of the outputs at the end of the step is used in replacement of the real integration once the iterative co simulation method predicts the converged solution on this co simulation step as it iterated on the estimators a single real integration of the systems is done with the predicted solution as inputs reference 16 details this process and the underlying estimator the latter requires advanced capabilities which are less rare in practice than the rollback the ifosmondi jfm iterative co simulation algorithm 15 introduced by the authors as an evolution of the classical ifosmondi method 14 also introduced by the authors can benefit from the costarica process in order to run a co simulation on non rollback capable systems moreover in case every system of a modular model uses costarica the underlying coupling constraint satisfaction problem that the ifosmondi jfm method solves can be transformed into a global linear problem given the expressions of the costarica estimators on every system the solution of this global linear system directly gives the expressions of the coupling quantities this paper introduces missiles the co simulation methods consisting in writting and solving this linear system are using the obtained expressions of the coupling quantities in the real simulation of the systems on every co simulation step 2 y eguillon et al 1 21 3 the paper is structured as follows the formalism is introduced as well as the notations with a recall of the outcomes of the costarica process 16 and ifosmondi jfm method 15 then the missiles method is introduced and the procedure is detailed both regarding the non iterative co simulation method and regarding the practical implementation finally the behavior of missiles is shown on two test cases before a discussion about the outcomes and the future of the method to conclude 2 formalism and notations this paper focuses on the cases of modular models made of interconnected ordinary differential equations ode systems the aim is the application to circuits also sometimes called 0 d systems corresponding to simulations in time the method can be adapted to other cases dae pde yet the adaptation is not straightforward and will not be discussed in this paper 2 1 problem dimensions and time domain let nsys n denote the number of systems involved in a modular model please note that the particular case nsys 1 corresponds to a monolithic simulation where a single system is simulated without connections to any other system and where no co simulation method is required we can thus suppose that nsys n 0 1 with k 1 nsys being the index of a system we define the following quantities nin k n the number of input variables of system s k nout k n the number of output variables of system s k nst k n the number of state variables of system s k equivalently the inputs outputs and states can be seen as vectors of dimension nin k nout k and nst k respectively finally t init r and t end t init will respectively denote the start time and end time of the simulation 2 2 ode system and discretization as stated in the beginning of section 2 every system is an ode system as we are considering interconnected systems each of them is sensitive to inputs and has outputs let the equation of these system be written the following way k 1 nsys s k dxk dt fk t xk uk yk gk t xk uk where t t init t end xk l t init t end rnst k uk l t init t end rnin k yk l t init t end rnout k xk t init xinitk r nst k 1 in 1 uk represent the inputs yk the outputs and xk the states of system s k these time dependent quantities may be vectorial in case nin k 1 nout k 1 or nst k 1 hence an extra subscript will denote the index of the element uk uk i i 1 nin k with i 1 nin k uk i uk i l t init t end r yk yk i i 1 nout k with i 1 nout k yk i yk i l t init t end r xk xk i i 1 nst k with i 1 nst k xk i xk i l t init t end r 2 the fk and gk applications in 1 are respectively called the derivatives and the outputs functions of the ode in co simulation the systems are black boxes with a specific set of interaction among which direct calls to fk or gk are usually not possible hence the co simulation is done through a discretization on a time grid on which each mesh is called a macro step or co simulation step the nodes are the communication times and they will be denoted by a superscript n to avoid the confusion with power exponents n denotes the time index and the time domain is partitioned as follows in figure 1 figure 1 partition of the time domain in macro steps 3 y eguillon et al 1 21 4 let t n denote the size of the nth macro step n 0 nmax 1 t n t n 1 t n 0 3 every system can be integrated on a macro step as far as an initial condition for the state variables is given in co simulation a system s k can only be integrated on t n t n 1 if it has previously been integrated until t n in that case the initial values for the state variables is x n k the value obtained at this time when integrating the previous step see 4 in the whole paper quantities with a tilde symbol will denote an evaluation of a time dependent quantity at a given time x n k xinitk if n 0 lim t t n t t n x n 1 k t otherwise 4 equation 4 define the initial value of the state variables on a time step of the form t n t n 1 with a reference to the time dependent states x n 1 the later is the solution of the corresponding system on the corresponding step equation 5 presents these systems k 1 nsys n 0 nmax s n k dx n k dt fk t x n k u n k y n k gk t x n k u n k where t t n t n 1 x n k l t n t n 1 rnst k u n k rn t nin k y n k l t n t n 1 rnout k x n k t n x n rnst k 5 analogously to 2 the elements of the the inputs outputs and states on a step use the double subscript notation in this paper u n k u n k i i 1 nin k with i 1 nin k u n k i u n k i l t n t n 1 r y n k y n k i i 1 nout k with i 1 nout k y n k i y n k i rn t x n k x n k i i 1 nst k with i 1 nst k x n k i x n k i l t n t n 1 r 6 please note that on 5 and 6 the inputs of s k on the macro step t n t n 1 are restricted to polynomials in other words u n k rn t nin k in most of the co simulation methods as the inputs are not known on t n t n 1 when the integration of 5 is being performed an extrapolation is made on this interval most of the signal extrapolation methods used in co simulation in practice are covered with the polynomial form zero order hold 3 first order hold hermite entries 5 15 smooth polynomial extrapolations 4 limited variable order 5 17 the integration of system s n k in 5 leads to the output values y n 1 k and their time derivatives some co simulation methods require it y n 1 k these quantities are limits at the end of the macro step as defined in 7 y n 1 k lim t t n 1 t t n 1 y n k t y n 1 k lim t t n 1 t t n 1 dy n k dt t 7 as these quantities depend on the initial states on this step x n k and the time dependent inputs u n k we introduce the formalism of the step function s n k and the analog function s n k in 8 please note that the step function of k th system on the nth macro step s n k should not be confused with the system s n k with brackets nevertheless the one corresponds to the integration of the other hence similar notations are not meaningless s n k rnst k rn t nin k rnout k x n k u n k 7 s n k x n k u n k y n 1 k outputs after integration of 5 at t n 1 see 7 s n k rnst k rn t nin k rnout k x n k u n k 7 s n k x n k u n k y n 1 k time derivatives of these outputs at t n 1 see 7 8 an evaluation of the step function s n k implies the integration of the system on the n th macro step as shown on 4 y eguillon et al 1 21 5 figure 2 the s n k function is not available on every system depending on the modelling and simulation software that generated the system similar advanced interactions are not always available and their availability on a given system is often conditioned by capability information some of these capabilities are presented in 2 3 2 3 capabilities the theoretical framework regarding the systems in a co simulation has been introduced in subsection 2 2 yet in practice the black boxed systems do not always allow to set or evaluate every quantity as we want every interaction is standardized in the fmi standard 11 so even if the fmi framework is not mandatory to define apply or implement the missiles method the standardized naming is useful for the sake of clarity some of the interactions we are interested in in this paper are presented in the table 1 table 1 interaction possible with a co simulation system non exhaustive list name name in the fmi 2 0 standard description type provide inputs fmi 2 setreal specify u n k t n zero order hold is used across the macro step by default basic provide time dependent inputs fmi 2 setrealinputderivatives specify non constant u n k usually polynomial advanced do a step fmi 2 dostep proceed to the underlying integration at the call of the s n k function basic retrieve outputs fmi 2 getreal obtain y n 1 k basic retrieve outputs time derivatives fmi 2 getrealoutputderivatives obtain y n 1 k advanced retrieve states internal state variables must be exposed in the system obtain x n 1 k once the macro step t n t n 1 has been integrated advanced retrieve linearization fmi 2 getdirectionalderivative obtain the derivatives of the fk and gk functions with respect to the states and the inputs respectively advanced rollback fmi 2 getfmustate and fmi 2 setfmustate re integrate a macro step that has already been integrated advanced the column named type in table 1 indicates whether the interaction is basic i e possible in every system for co simulation or advanced i e not mandatory only available on some systems depending on the modelling and simulation platform used and submitted to a capability flag in case of the fmi standard or a similar mechanism system generation parameters for instance a visualization of these interactions is presented in figure 2 on a single system the kth one and on a macro step of the form t n t n 1 the advanced interactions are not equivalently rare in practice lots of simulation and modelling platforms can generate systems with the possibility to represent polynomial inputs for instance yet the rollback is very seldom possible on a system for co simulation as the rollback is mandatory to use an iterative co simulation method like 2 12 18 3 14 15 or any implicit co simulation method 13 19 lots of industrial models cannot benefit from the advantages of such methods however a slight modification of any co simulation method requiring the rollback on the systems has been pro posed in 16 the costarica process 5 y eguillon et al 1 21 6 figure 2 possible interactions with a system for co simulation 2 4 costarica estimator the costarica process introduced by the authors in 16 is a modification applicable to any co simulation method requiring the rollback as far as the inputs to provide to the systems can be represented by polynomials of a known maximum degree n n non rollback capable systems have the retrieve states and the retrieve linearization capabilities see table 1 less rare than the rollback in practice and the systems equations are odes current ongoing developpments tend to extend this restrictions to daes differential algebraic equations this modification consists in replacing calls to the step function s n k and s n k on every non rollback capable system by estimations of it that does not require to integrate the system by integrating such systems once the definitive inputs for all of them are known the resulting method does not require the rollback anymore the costarica estimators denoted by a hat symbol for output values and time derivatives are the following ones regarding a system s n k like in 5 at a step t n t n 1 the expressions are y n 1 k y l n 1 k y c n 1 k r nout k y n 1 k yl n 1 k yc n 1 k r nout k 9 where y c n 1 k and y c n 1 k are called the control parts and can be obtained by any signal reconstruction method zoh foh f 3 ornits 5 as described in 16 and where y l n 1 k and yl n 1 k are called the linear parts and can be computed with y l n 1 k gv n k n k pv n k x n k yl n 1 k gd n k n k pd n k x n k 10 where gv n k and gd n k are tensors of size nout k nin k n 1 and pv n k and pd n k are matrices of size nout k nst k all four depend on the current macro step size t n and the linearization of the system s n k at time t n in the form of the matrices referred to as a n b n c n and d n on figure 2 their expression is given in 11 12 13 yet further computation details are given in 16 gv n k n k t n gd n k d n k dt t n pv n k n k t n pd n k d n k dt t n 11 6 y eguillon et al 1 21 7 where for all system k at every time step t n t n 1 the n k and n k functions are defined by n k t 7 l 1 n k t n k t 7 l 1 n k t 12 and where n k s 7 c n si a n 1 b n d n p sp 1 p 0 n t n k s 7 c n si a n 1 13 in 10 n k is a matrix of size nin k n 1 and corresponds to the coefficients of the time shifted polynomials of the input variables u n k on the whole paper the polynomial degree will be the only dimension in the matrices and tensors whose indexing starts by zero instead of 1 like the system index for instance so that the pth element correspond to the monomial of degree p with p 0 n the coefficients of the polynomials of the input variables u n k can be written as n k a n j p j 1 nin k p 0 n 14 with j 1 nin k u n k j u n k j t 7 n p 0 a n j p t p rn t 15 as the inputs are considered polynomial with a maximum degree of n however the n k required in 10 for the costarica estimators is slightly different than due to a time shift 2 5 time shift let s denote by u n k the time shifted inputs of s n k on 0 t n instead of t n t n 1 the time shifted time variable in 0 t n is denoted by t t t n t 0 t n u n k t u n k t n t 16 let s denote the coefficients of u n k as follows j 1 nin k u n k j u n k j t 7 n p 0 a n j p t p rn t 17 finally the n k matrix in 10 is filled with the coefficients of the time shifted polynomials of the input variables n k a n j p j 1 nin k p 0 n 18 these coefficients can be computed using formula 19 proven in 16 j 1 nin k p 0 n a n j p n q p a n j q q p t n q p 19 where q p denote the binomial coefficient of q choose p also referred to as the combinations in the literature this transformation can be written as a tensor of order 4 of size nin k n 1 nin k n 1 denoted by c n k and satisfying n k c n k n k 20 such a tensor is simply defined by c n k j 1 j 2 1 q p q p t n q p j 1 1 nin k p 0 n j 2 1 nin k q 0 n 21 where j 1 j 2 denotes the kronecker coefficient 1 in case j 1 j 2 and 0 otherwise as the coefficients of a single time shifted input of index j only depends on the original input of index j and none other inputs c n k is a diagonal tensor with respect to its first and third dimensions this is precisely the role of the kronecker coefficient in 21 and the diagonal elements with respect to these dimensions is the following matrix j 1 nin k c n k j p j q p 0 n q 0 n 0 0 t n 0 0 1 0 t n 1 0 n 0 t n n 0 0 1 1 t n 1 1 n 1 t n n 1 0 0 nn t n n n 22 7 y eguillon et al 1 21 8 2 6 hermite interpolation at some point in the method a hermite interpolation will be required by the ifosmondi jfm method 15 the interpolation has to occur on two points in time with values and first order time derivative constraints the aim of this subsection is to give a linear relationship between the value and time derivative contraints on one of the points and the coefficients of the hermite interpolating polynomial let s consider the one dimensional hermite interpolation on 2 generic points at times t 1 and t 2 with t 2 t 1 with values v 1 and v 2 and derivatives v 1 and v 2 respectively r r t 7 t t 1 v 1 d dt t 1 v 1 t 2 v 2 d dt t 2 v 2 23 such polynomial has the following expression t a 3 t 3 a 2 t 2 a 1 t a 0 24 where the coefficients of have the following linear expressions with respect to v 2 and v 2 constraints a 3 1 t 2 t 1 2 2 t 2 t 1 1 v 2 v 2 1 t 2 t 1 2 v 1 2 v 1 t 2 t 1 a 2 1 t 2 t 1 2 1 2 t 2 2 t 1 t 2 t 1 t 2 2 t 1 v 2 v 2 1 t 2 t 1 2 v 1 t 1 2 t 2 v 1 2 v 1 t 2 t 1 a 1 1 t 2 t 1 2 t 1 4 t 2 t 2 t 1 2 2 t 1 t 2 t 1 t 1 2 t 1 t v 2 v 2 1 t 2 t 1 2 t 2 2 v 1 2 v 1 t 2 t 1 t 1 v 1 t 2 v 1 2 v 1 t 2 t 1 a 0 1 t 2 t 1 2 t 21 1 2 t 2 t 2 t 1 t 21 t 2 v 2 v 2 1 t 2 t 1 2 t 22 v 1 v 1 2 v 1 t 2 t 1 t 1 25 finally we can write a 0 a 1 a 2 a 3 av elem ad elem v 2 v 2 belem 26 where av elem ad elem is the 4 2 matrix concatenation of the 4 1 column vectors av elem and ad elem and where av elem ad elem and the third 4 1 column vector belem have the following expressions av elem 1 t 2 t 1 2 t 21 1 2 t 2 t 2 t 1 t 1 4 t 2 t 2 t 1 2 2 t 1 t 2 t 1 1 2 t 2 2 t 1 t 2 t 1 2 t 2 t 1 ad elem 1 t 2 t 1 2 t 21 t 2 t 1 2 t 1 t 2 2 t 1 1 belem 1 t 2 t 1 2 t 22 v 1 v 1 2 v 1 t 2 t 1 t 1 t 2 2 v 1 2 v 1 t 2 t 1 t 1 v 1 t 2 v 1 2 v 1 t 2 t 1 v 1 t 1 2 t 2 v 1 2 v 1 t 2 t 1 v 1 2 v 1 t 2 t 1 27 2 7 connecting systems into a modular model let nin tot nout tot and nst tot respectively denote the total amount os inputs outputs and states nin tot nsys k 1 nin k nout tot nsys k 1 nout k nst tot nsys k 1 nst k 28 let also the total input total output and total state vectors be the concatenation of all inputs outputs and states respectively of all systems on a step of the form t n t n 1 u n u n k k 1 nsys r nin tot y n y n k k 1 nsys l t n t n 1 rnout tot x n x n k k 1 nsys l t n t n 1 rnst tot 29 8 y eguillon et al 1 21 9 at any time t in any step t n t n 1 the total input total output and total state vectors are big column vectors u n t 7 u n 1 1 t u n 1 nin 1 t u n 2 1 t u n 2 nin 2 t u n nsys 1 t u n nsys nin nsys t t y n t 7 y n 1 1 t y n 1 nout 1 t y n 2 1 t y n 2 nout 2 t y n nsys 1 t y n nsys nout nsys t t x n t 7 x n 1 1 t y n 1 nst 1 t x n 2 1 t y n 2 nst 2 t x n nsys 1 t y n nsys nst nsys t t 30 let x n y n and y n be the instant total state instant total output and instant total output time derivative vectors respectively based on 4 and 7 we can write for any n 0 nmax x n x n 1 1 x n 1 nst 1 x n 2 1 x n 2 nst 2 x n nsys 1 x n nsys nst nsys t y n y n 1 1 y n 1 nout 1 y n 2 1 y n 2 nout 2 y n nsys 1 y n nsys nout nsys t y n y n 1 1 y n 1 nout 1 y n 2 1 y n 2 nout 2 y n nsys 1 y n nsys nout nsys t 31 the modular model is the global co simulation model made of the interconnected nsys systems the outputs of the different systems are connected to inputs of other systems with a possibility to connect a single output to several inputs an simple example with nsys 3 systems is presented on figure 3 the connections between the systems will be denoted by a matrix filled with zeros and ones with nout tot rows and nin tot columns denoted by nout tot nin tot 1 if output is connected to input 0 otherwise 32 please note that if each output is connected to exactely one input is a square matrix moreover it is a per mutation matrix in this case otherwise if an output is connected to several inputs more than one 1 appears at the corresponding row of without loss of generality let s consider that there can neither be more nor less than one 1 on each column of considering that an input can neither be connected to none nor several outputs indeed a system with an input connected to nothing is not possible a value has to be given and a connection of several outputs in the same input can always be decomposed regarding a relation sum difference so that this situation is similar to distinct inputs connected to a single output each with these inputs being combined added substracted inside of the considered system figure 3 example of a 3 system co simulation model with its interfaces and its matrix 2 8 ifosmondi jfm s underlying non linear problem the ifosmondi jfm co simulation method 15 is based on the following principle on each macro step t n t n 1 the inputs are defined so that their value and time derivative at t n 1 correspond to the connected outputs value and time derivative at t n 1 too hence after the integration of the systems on this step this will be called the coupling constraint and is presented in 33 u n t n 1 t y n 1 du n dt t n 1 t y n 1 33 9 y eguillon et al 1 21 10 as the outputs and their derivatives are given at t n 1 by the functions s n k and s n k on every system for k 1 nsys and as these functions require the expressions of all inputs this problem is implicit ifosmondi jfm uses newton like methods to solve this implicit problem see details in 15 as each evaluation of the s n k functions with different inputs require an integration of the systems the method requires the rollback capability see 2 3 the inputs are defined so that they are c 1 on the whole co simulation time domain even at the communication times in the middle of a co simulation step there is no problem inputs are polynomials so they are c however for the inputs to be c 1 at the communication times the method constraints their value and first order derivative therefore when a communication time t n has been reached with n 0 the value and time derivative of every input are known at t n as at this stage the step t n 1 t n has been integrated and validated the method moved forward in time from t n 1 t n to t n t n 1 the inputs on all systems used at the valid and final integration on t n 1 t n will be denoted u n 1 valid the c 1 smoothness at the beginning of t n t n 1 thus at t n on the right is hence guaranteed by the constrains at t n in 35 to solve the coupling constraint 33 the newton like method in ifosmondi jfm is used the problem formu lation is a zero finding of the function n defined in 34 n rnin tot rnin tot rnin tot rnin tot u n 1 u n 1 7 u n 1 u n 1 t 0 nin tot nout tot 0 nin tot nout tot t s n 1 x n 1 u n 1 s n nsys x n nsys u n nsys s n 1 x n 1 u n 1 s n nsys x n nsys u n nsys depend on u n 1 u n 1 34 where 0 nin tot nout tot denotes the null matrix of size nin tot nout tot where a vertical or horizontal bar represents vector or matrix concatenation and where the u n k time dependent inputs for every k 1 nsys are subparts of the total time dependent input vector as defined in 30 the latter is defined by the hermite interpolation 35 u n r 3 t nin tot u n t n u n 1 valid t n du n dt t n du n 1 valid dt t n u n t n 1 u n 1 du n dt t n 1 u n 1 35 where u n 1 and u n 1 are the variables of n see 34 hence once the root of n is found by the newton like method it is used to define u n valid with the hermite interpolation 35 this u n valid satisfies the coupling constraint 33 and the validated inputs are c 1 in t n more details about the underlying computations namely for the first macro step and the starting point of the zero finding of n on each new macro step are given on reference 15 which focuses on the ifosmondi jfm method 3 missiles method based on the formalism introduced in 2 and on the willingness to get benefit from the benefits of the ifosmondi jfm method without the rollback capability requirement we define in this section the missiles co simulation method standing for mock iteration for solving smooth interfaces with linear estimations of systems 10 y eguillon et al 1 21 11 3 1 general idea of course a first idea could be to simply replace the non rollback capable systems by a costarica it is indeed the aim of the costarica process however in case every system is replaced by a costarica the relationship between the inputs at a given macro step and the outputs at the end of this macro step is known cf subsection 2 4 we can therefore replace the occurences of s n k and s n k for all systems k 1 nsys in the expression of n the function whose root is searched in 34 and use the resulting function expression to directly find its root this modified version of n will be denoted by n missiles n missiles rnin tot rnin tot rnin tot rnin tot u n 1 u n 1 7 u n 1 u n 1 t 0 nin tot nout tot 0 nin tot nout tot t gv n 1 n 1 pv n 1 x n 1 y c n 1 1 gv n nsys n nsys pv n nsys x n nsys y c n 1 nsys gd n 1 n 1 pd n 1 x n 1 yc n 1 1 gd n nsys n nsys pd n nsys x n nsys yc n 1 nsys 36 where the matrices n 1 n nsys introduced in 10 depend on u n 1 u n 1 as the latter is used to calibrate the polyno mial inputs u n see 35 and as the n 1 n nsys matrices contain the coefficients of the time shifted version of u n see subsection 2 5 for details about time shift this relationship will be detailed further in 3 2 missiles removes the iterative part of the ifosmondi jfm method and replaces it by a single resolution detailed further in this paper to satisfy the coupling constraint however this resolution is based on the costarica estimators on each system linear estimations of systems in missiles name come from here therefore this is not really an iteration on the systems but a single fake iteration as the systems are not integrated at this stage mock iteration in missiles name come from here once this resolution is done root finding of n missiles the input values and time derivatives satisfying the cou pling constraint on the costarica surrogates are use together with the input values and time derivatives at the end of the previous macro step i e beginning of the current macro step to directly define the validated input expressions u n valid the systems can then be integrated on the macro step t n t n 1 parallely with their respective inputs the whole process is shown on figure 4 figure 4 schematic view of missiles co simulation method 11 y eguillon et al 1 21 12 three main characteristics of the missiles method can be noticed so far synchronicity the communication times t n n 0 nmax are the same on every system the method is said to be synchronous as well as the ifosmondi jfm method namely in opposition to asynchronous co simulation methods such as 20 or 5 explicit nature the polynomial inputs of all systems are predicted on t n t n 1 when when time t n is reached this prediction is then used in every system for their single first and last on this very macro step integration on the current macro step the rollback capability is therefore not required parallelizability the stage where the systems have to be integrated for real can be done in parallel in the sense that the inputs for each system can be computed using only data known when all systems have been simulated until time t n contrary to gauss seidel based co simulation methods 21 or others like 22 from the required capabilities point of view the rollback mandatory in the case of ifosmondi jfm is no more required on missiles however the linearization and the state variables retrievals are now required due to the use of the costarica estimators despite these capabilities were not required in the case of the ifosmondi jfm method however as the rollback is way scarser than the ability to retrieve the linearization and the state variables in practice we can reasonably stand that the missiles co simulation algorithm is more usable in an industrial context table 2 sums up the required available interactions in the co simulation systems each interaction is referred to by its designation in table 1 table 2 interaction with the co simulation systems for the missiles method and justification interaction name is it required why justification provide inputs yes basic interaction required for all co simulation methods provide time dependent inputs yes as in ifosmondi jfm the inputs must be c 1 at the communication times satisfy the coupling constraint at t n 1 on values and time derivatives and at t n de facto due to their c 1 character constant functions cannot do so on non constant signals do a step yes basic interaction required for all co simulation methods retrieve outputs yes basic interaction required for all co simulation methods retrieve outputs time derivatives no despite ifosmondi jfm needs to know the outputs time derivatives to evaluate the coupling constraint the costarica estimators can estimate them based on gd n k and pd n k on all systems retrieve states yes the substitution of the s n k and s n k for all systems k 1 nsys by the costarica estimators in n missiles makes missiles require the states and the a n b n c n and d n matrices to compute these estimators retrieve linearization yes rollback no contrary to evaluations of n the evaluations of n missiles do not require to integrate the systems the root finding process hence does not require to roll back the systems to re evaluate the function the remaining question is how to find the root of n missiles indeed on figure 4 the stage called find root of this application hasn t been discussed so far following subsection is dedicated to the assembly of a linear problem which solution is the root of n missiles 3 2 global linear problem let s gather the elements introduced previously in section 2 in order to find the root of n missiles let s consider the solution u n 1 u n 1 to the root finding problem by definition of n missiles in 36 we have 12 y eguillon et al 1 21 13 n missiles u n 1 u n 1 0 u n 1 u n 1 t 0 nin tot nout tot 0 nin tot nout tot t gv n 1 n 1 pv n 1 x n 1 y c n 1 1 gv n nsys n nsys pv n nsys x n nsys y c n 1 nsys gd n 1 n 1 pd n 1 x n 1 yc n 1 1 gd n nsys n nsys pd n nsys x n nsys yc n 1 nsys 37 let s now consider the outputs and their time derivatives estimations at t n 1 denoted by y n 1 y n 1 which when dispatched according to the modular model s topology generate the solution to 37 due to the structure of the matrix 32 presented in 2 7 either permutation or not by with a single 1 on each and every column to a given u n 1 u n 1 corresponds a single y n 1 y n 1 we can thus calculate the solution on the outputs instead of the inputs the solution to 37 will then be retrievable with 38 u n 1 u n 1 t 0 nin tot nout tot 0 nin tot nout tot t y n 1 y n 1 38 therefore to generate the solution to 37 the outputs solutions must write y n 1 y n 1 gv n 1 n 1 pv n 1 x n 1 y c n 1 1 gv n nsys n nsys pv n nsys x n nsys y c n 1 nsys gd n 1 n 1 pd n 1 x n 1 yc n 1 1 gd n nsys n nsys pd n nsys x n nsys yc n 1 nsys 39 the solution of problem 39 leads with dispatching 38 to the solution of 37 let s detail the five stage to get from the n 1 n nsys matrices in 39 introduced in 10 and detailed in 2 5 the outputs y n 1 y n 1 1 in 39 the n 1 n nsys matrices contain the coefficients of the time shifted version of the time dependent inputs as mentioned earlier for all system k 1 nsys this time shift corresponds to the tensor matrix product n k c n k n k introduced in 20 2 the n k matrix mentioned in step 1 contains the coefficients of the polynomial inputs u n k see 14 15 3 the polynomial inputs u n k mentioned in step 2 are calibrated with the hermite interpolation 35 the latter acts on the total input vector yet we can do it system by system as subparts of the vector u n see 30 4 the coefficients of the inputs can be expressed linearly with respect to the input constraints at t n 1 of the hermite interpolation mentioned in step 3 this linear expression has been introduced in subsection 2 6 the matrix and vector or this linear expression only depend on the times and the input constraints at t n known and independent of y n 1 y n 1 due to the c 1 condition 5 finally the input constraints at t n 1 mentioned in step 4 can be obtained from the output constraints at the same time that is to say y n 1 y n 1 using the dispatching relationship 38 the reciprocal is not always true in case an output is connected to several inputs a row of has several 1 coefficients as in figure 3 in this case if the inputs connected to the same output have different values no output vector corresponds to the input vector 13 y eguillon et al 1 21 14 the application of these steps to equation 39 gives y n 1 y n 1 gv n gd n c n a n t 0 0 t y n 1 y n 1 b n pv n pd n x n y n 1 c y n 1 c 40 where the underline tensors and matrices are composition of previously introduced by system quantities these global operators are described below using by system operators introduced in section 2 please note that despite the maxi mum input polynomial degree is n 3 due to the hermite interpolation 35 is it still written as n below for the sake of genericity let s recall that the degree is the only dimension in the tensors that starts by zero so that the pth element correspond to the monomial of degree p gv n gd n is a tensor of order 3 and of size 2 nout tot nin tot n 1 it represents the action of all inputs in the costarica estimators and is a concatenation of the two tensors gv n and gd n both of order 3 and of size nout tot nin tot n 1 p 1 2 nout tot 1 nin tot 0 n gv n gd n p gv n p if 1 nout tot gd n nout tot p if nout tot 1 2 nout tot 41 k 1 nsys l 1 nsys i 1 nout k j 1 nin l p 0 n gv n i k 1 1 nout j l 1 1 nin p k l gv n k i j p and gd n i k 1 1 nout j l 1 1 nin p k l gd n k i j p 42 pv n pd n is a matrix of size 2 nout tot nst tot it represents the effect of the initial states on the current macro step in the costarica estimators and is a concatenation of the two matricespv n andpd n both of size nout tot nst tot 1 2 nout tot 1 nst tot pv n pd n pv n if 1 nout tot pd n nout tot if nout tot 1 2 nout tot 43 k 1 nsys l 1 nsys i 1 nout k 1 nst l pv n i k 1 1 nout l 1 1 nst k l pv n k i and pd n i k 1 1 nout l 1 1 nst k l pd n k i 44 a n is a tensor of order 3 and of size nin tot n 1 2 nin tot and b n is a matrix of size nin tot n 1 they represent the hermite interpolation transforming the constraints upon inputs values and derivatives at the end of the current macro step into the coefficients of the polynomial inputs on this step they are compositions of av n elem and ad n elem elements andb n elem evaluations these quantities are defined in 45 from concrete applications on t n t n 1 of the quantities introduced in 26 27 in subsection 2 6 with t 1 t n t 2 t n 1 we define av n elem av elem ad n elem ad elem from definition 27 b n elem l j 7 belem as in 27 with v 1 u n 1 l j t n v 1 du n 1 l j dt t n l j l j l 1 nsys and j 1 nin l 45 with 45 we apply the generic problem 23 to the case 35 where constraints v 2 and v 2 in 23 represent the solution of 37 we are looking for global composite tensor a n is then defined in 46 and global matrix b n in 47 14 y eguillon et al 1 21 15 l 1 1 nsys j 1 1 nin l 1 p 0 n l 2 1 nsys j 2 1 nin l 2 a n j 1 l 1 1 1 nin p j 2 l 2 1 1 nin av elem p if l 1 j 1 l 2 j 2 0 otherwise and a n j 1 l 1 1 1 nin p nin tot j 2 l 2 1 1 nin ad elem p if l 1 j 1 l 2 j 2 0 otherwise 46 l 1 nsys j 1 nin l p 0 n b n j l 1 1 nin p belem p 47 c n is a tensor of order 4 and of size nin tot n 1 nin tot n 1 it represents the time shift of the coefficients of all polynomial inputs from t n t n 1 to 0 t n as described in 2 5 l 1 1 nsys j 1 1 nin l 1 p 1 0 n l 2 1 nsys j 2 1 nin l 2 p 2 0 n c n j 1 l 1 1 1 nin p 1 j 2 l 2 1 1 nin p 2 c n l 1 j 1 p 1 j 2 p 2 if l 1 j 1 l 2 j 2 0 otherwise 48 finally y n 1 c y n 1 c is a column vector of size 2 nout tot it corresponds to a concatenation of the control parts in the costarica estimators introduced in 2 4 y n 1 c y c n 1 1 y c n 1 nout 1 y c n 2 1 y c n 2 nout 2 y c n nsys 1 y c n nsys nout nsys t y n 1 c yc n 1 1 yc n 1 nout 1 yc n 2 1 yc n 2 nout 2 yc n nsys 1 yc n nsys nout nsys t 49 at this point every quantity appearing in 40 has been defined by manipulating the problem 40 we can finally obtain the linear problem 50 i gv n gd n c n a n t 0 0 t y n 1 y n 1 gv n gd n c n b n pv n pd n x n y n 1 c y n 1 c 50 problem 50 can be resolved when all systems reached t n and gives a solution at t n 1 by dispatching the solution of 50 using 38 this solves the find root of this application stage in figure 4 and answers the the final question of subsection 3 1 3 3 implementation and first step in practice it is possible to do the hermite interpolation and the time shift at the same time indeed instead of computing c n a n and b n operators it is possible to compute c n a n and c n b n directly to assemble the linear problem 38 the underlying meaning of this replacement is that instead of computing an interpolation on t n and t n 1 and shifting it on 0 and t n the interpolation is directly done on 0 and t n with the same values and derivatives constraints indeed no correction is required as t n 1 t n t n 0 practically a way to implement consists in replacing the c n operator by the identity tensor of order 4 or equivalenty simply remove it from problem 50 and computing a n and b n operators as explained in 45 46 47 but replacing t n and t n 1 by 0 and t n respectively let s denote by a v elem a d elem and b elem the elementary quantities 27 with this change their simpler expressions in that case is given in 51 15 y eguillon et al 1 21 16 a v elem 0 0 3 t n 2 2 t n 3 t a d elem 0 0 1 t n 1 t n 2 t b elem v 1 v 1 3 v 1 t n 2 2 v 1 t n v 1 t n 2 2 v 1 t n 3 t 51 regarding the first macro step despite it is expected to know the initial values of all coupling variables outputs and their corresponding inputs there is usually no available time derivatives of these coupling variables at t 0 t init this makes it impossible to compute b elem and thus b n elem in 45 v 1 is not available in this case the problem 50 can still be assembled but the underlying hermite polynomials will simply be calibrated on three constraints the input values at the beginning of the macro step and the input values and derivatives end the end of the macro step analogously to the computations of subsection 2 6 and calibrating the polynomials on 0 and t n as explained above in this subsection we obtain the expressions of a v elem first step a d elem first step and b elem first step in 52 a v elem first step 0 2 t n 1 t n 2 t a d elem first step 0 1 1 t n t b elem first step v 1 2 v 1 t n v 1 t n 2 t 52 4 results on test cases this section presents results on benchmark co simulation test cases the missiles method is compared to the explicit fixed step zero order hold co simulation method also called non iterative jacobi referred to as ni jacobi in this section as the latter is the most simple one requiring none of the advanced capabilities mentioned in 2 3 and therefore widely used in the industry comparisons are also done with the ifosmondi jfm method 15 as the latter uses an iterative newton like method jacobian free the convergence criterion might affect the performance of a co simulation this criterion further described in 15 is based on a parameter called the smaller this is the less tolerant the iterative method is on the validation of a solution the cases presented below here have been implemented in a way that enables all required capabilities including the rollback so that comparisons between the co simulation methods can be made however in practice as most of the modelling and simulation platforms provide non rollback capable systems neither ifosmondi jfm nor classical ifosmondi methods can be used moreover in order to get error measurements we dispose of a monolithic simulation for each test case that is to say the simulation referred to as monolithic reference denotes the simulation of the global model on a single solver without coupling such simulations will be used as reference in this section please note that such monolithic simulation cannot be done in practice as the need for co simulation usually arises when black boxed systems that might come from various simulation and modelling platforms are connected to one another despite the missiles method can handle variable step co simulation different values of t n across n can be taken the time stepping strategy was not discussed in this paper hence results will be compared on co simulation with a fixed macro step size the size of the macro steps will be denoted by tfixed and we will simply have n 0 nmax t n tfixed 53 4 1 linear mechanical benchmark this model is made of nsys 2 systems a sketch of it is presented on figure 5 it is a very common benchmark for co simulation methods 23 14 24 figure 5 benchmark co simulation modular model two linear mechanical bodies with springs and dampers 16 y eguillon et al 1 21 17 for the sake of reproducibility the parameters of the bodies springs dampers and co simulation run are given in table 3 physical quantities are measured positively from left to right and negatively from right to left table 3 parameters of the linear mechanical test case physical parameters name definition value d 1 damper rating 10 n m s d 2 damper rating 10 n m s d 3 damper rating 40 n m s c 1 sprint rate 10 000 n m c 2 sprint rate 10 000 n m c 3 sprint rate 100 000 n m m 1 body mass 5 kg m 2 body mass 80 kg initial states expression definition value x 1 1 t init left body position 1 m x 1 2 t init left body velocity 0 m s x 2 1 t init right body position 3 m x 2 2 t init right body velocity 0 m s co simulation parameters expression value t init t end 0 2 s initial coupling conditions input output definition value u 1 1 t init y 2 1 t init force on right of left mass 20 000 n u 2 1 t init y 1 1 t init left body velocity 0 m s u 2 2 t init y 1 2 t init left body position 1 m the results are presented in table 4 the parameter denotes the convergence criterion parameter of the iterative method used by ifosmondi jfm as described in the introduction of this section table 4 results on linear mechanical model relative error on left body s position in and computational time in s ni jacobi ifosmondi jfm missiles 10 2 10 5 tfixed 10 3 5 80 0 26 s 7 55 10 4 0 62 s 2 66 10 4 0 95 s 7 82 10 3 0 31 s tfixed 10 4 2 93 10 1 1 80 s 4 80 10 5 5 35 s 2 27 10 5 7 48 s 1 34 10 3 3 01 s several elements can be noticed on results of table 4 the ifosmondi jfm is slower than ni jacobi and missiles as its iterative aspect make it require a larger amount of systems internal solvers restarts which might be costly in terms of computational time contrary to the ifosmondi jfm method when the accuracy is not satisfactory with missiles there is no parameter to tune to get a lower error for a given macro step size as the method is based on a direct solving of the coupling problem on each step however the macro step size can be decreased in order to enhance the accuracy missiles is slower than ni jacobi method for a given fixed macro step size as the latter requires almost no computation in addition to the systems integrations please note that in this case as the macro step size does not change and the systems s 1 and s 2 of figure 5 are linear the matrix of the linear problem 50 could be computed assembled and factorized only once however in order to be as close as possible to a real use of co simulation in practice with black boxed systems we recomputed this operator at each macro step in order to mimic the case where the content of the systems is not known modular models in industrial applications for example nonetheless this overhead in terms of computational time with respect to the ni jacobi method is balanced by a better accuracy on missiles as expected finally despite the linear nature of the systems making the costarica estimators theoretically exact the missiles method is not exact several causes can be mentioned the inverse laplace is done numerically with the stehfest method 25 26 the global linear problem 50 is solved numerically too the accuracy is driven by the condition number of the matrix of this problem the successive local polynomial approximations of non polynomial solutions coupling variables generally missiles also relies on the data provided by the systems for instance the matrices of the linearizations are supposed to be exact as their computation is done inside of the black boxed systems nevertheless the error reached by missiles on table 4 is satisfactory 17 y eguillon et al 1 21 18 indeed figure 6 presents a superimposed view of the position of the left body x 1 1 state also y 1 2 output variable of system s 1 across the time and it is noticable that the co simulation with missiles is close to the monolithic reference quite as much as the co simulation with the ifosmondi jfm method this is even more apparent on a zoom on a peak of this variable as shown in figure 7 figure 6 left body s position comparison of co simulation methods with tfixed 10 3 s the framed zone is zoomed on figure 7 figure 7 zoom on 1 29 1 33 on curves of figure 6 this proves the usefullness of the missiles method on such model keeping in mind that the ifosmondi jfm cannot be used in case all involved systems are not rollback capable missiles is a good way to reach an almost similar accuracy as shows figure 7 4 2 non linear model lotka volterra equations this model is also made of nsys 2 systems a sketch of it is presented on figure 8 the lotka volterra prey predator equations 27 are represented in this model each system representing a species figure 8 lotka volterra model with a distinct model for the prey and another for the predator in a co simulation configuration as for test case 4 1 the parameters of the model are given in table 5 for the sake of reproducibility the results are then presented in table 6 contrary to the first test case we observe a slightly bigger error with the missiles method than with the ni jacobi method for similar macro step sizes ifosmondi jfm stays the method with the highest accuracy which is not surprising as the model is non linear indeed the rollback is the only way to exactely solve the non linear problem 33 with 34 the costarica estimators used by missiles are only locals and can thus only approximate the behavior of the systems on each step this is namely the reason why the error decreased by a factor 10 when the macro step size is 10 times facter last column of table 6 regarding the comparison between the ni jacobi and the missiles method an overshoot phenomenon cannot be seen on table 6 but can be observed on the solutions figure 9 shows the amount of prey x 1 1 state also y 1 1 output 18 y eguillon et al 1 21 19 variable of system s 1 macroscopically all curves are superimposed yet on the zoom on a peak presented in figure 10 we can observe that the ni jacobi co simulation produces an overshoot on the solution where the missiles co simulation produces an undershoot table 5 parameters of the lotka volterra test case model s parameters name definition value natural prey s birth rate 2 3 rate of predation upon the prey 4 3 predator s natural death rate 1 growth rate upon predators due to predation 1 initial states expression definition value x 1 1 t init amount of prey 1 x 2 1 t init amount of predator 1 co simulation parameters expression value t init t end 0 20 s initial coupling conditions input output definition value u 1 1 t init y 2 1 t init amount of predator 1 u 2 1 t init y 1 1 t init amount of prey 1 table 6 results on lotka volterra model relative error on prey in and computational time in s ni jacobi ifosmondi jfm missiles 10 2 10 5 tfixed 10 3 1 38 10 1 1 96 s 2 62 10 4 3 26 s 2 62 10 4 3 15 s 2 05 10 1 2 75 s tfixed 10 4 1 38 10 2 16 86 s 4 84 10 4 24 33 s 4 84 10 5 24 36 s 2 13 10 2 25 72 s figure 9 amount of prey comparison of co simulation methods with tfixed 10 3 s the framed zone is zoomed on figure 10 figure 10 zoom on 14 3 14 7 on curves of figure 9 the overshoot is a dangerous behavior in practice as it adds energy into the system this is even more obvious on even greater macro steps if we look as the orbit of the solution such orbits are presented in figure 11 compargin the orbit of the solution on the monolithic simulation with the orbits with the ni jacobi and the missiles method with a macro step size of 0 01 s it can be notices on the plot in the middle that the ni jacobi produced a solution with an diverging orbit which is not the case with the missiles method 19 y eguillon et al 1 21 20 figure 11 orbit of solution on from left to right the monolithic reference a co simulation with tfixed 10 2 s with ni jacobi method a co simulation with tfixed 10 2 s too and with missiles method the initial state 1 1 is indicated by a black dot 5 conclusion the introduced missiles co simulation method manages to properly approximate the implicit coupling con straint on the coupling variables between systems that are not capable of rollback although the latter is a mandatory capability for the implicit coupling formulations resolution methods this approach makes it possible to satisfy an approximation of the whole set of contraints on all systems through the resolution of a single global system of linear equations the coefficients of the polynomial expression of all coupling quantities can then be computed from the solution to this problem on linear co simulation systems this approach reaches a good time accuracy trade off the computational time stays competitive with the classical zero order hold non iterative jacobi fully explicit method due to the avoidance of repeated solver restarts contrary to iterative co simulation methods an the accuracy stays competitive with implicit methods requiring the rollback capability as the solved constraint concerns the coupling variables at the end of the co simulation steps regarding non linear systems the missiles methods stays a satisfactory co simulation method in case not all systems are capable of rollback even if taking the non linearities into account brings a significant improvement to the quality of the results in the context of an implicit co simulation method like it is the case in the rollback based ifosmondi jfm method it is usually not possible to do it due to the scarsity of the rollback in practice the accuracy of missiles on non linear cases is related to the validity of the local linearizations of the systems depending on the case the convenient co simulation step size can be different the aim being to stay on intervals where the linearization stays close enough to the systems behaviors even in a given modular model the satisfactory macro step size might vary for these reasons the missiles method would benefit from an adaptive co simulation time stepper moreover this would not be an obstacle to the construction of the core global system of linear equations of the method indeed the whole paper was written without supposing a constant macro step size in addition to that as missiles provides an estimation of the coupling variables at the end of a macro step before integrating the systems on it this estimation can act as a predictor a corrector being the coupling variables values once the systems reach this time further research will investigate the usage of missiles estimations in a time stepper that could benefit the method references 1 c gomes c thule d broman p g larsen h vangheluwe co simulation a survey acm computing surveys csur 51 3 2018 1 33 2 r ku bler w schiehlen two methods of simulator coupling mathematical and computer modelling of dynamical systems 6 2 2000 93 113 doi 10 1076 1387 3954 200006 6 2 1 m ft 093 3 s sicklinger v belsky b engelman h elmqvist h olsson r wu chner k u bletzinger interface jacobian based co simulation international journal for numerical methods in engineering 98 2014 418 444 doi 10 1002 nme 4 m busch performance improvement of explicit co simulation methods through continuous extrapolation in iutam symposium on solver coupling and co simulation vol 35 of iutam bookseries iutam 2019 pp 57 80 doi 10 1007 978 3 030 14883 6 4 5 y e guillon b lacabanne d tromeur dervout f 3 ornits a flexible variable step size non iterative co simulation method handling subsystems with hybrid advanced capabilities engineering with computers 2022 doi 10 1007 s 00366 022 01610 z 6 m benedikt d watzenig j zehetner a hofer nepce a nearly energy preserving coupling element for weak coupled problems and co simulation in proceedings of the international conference on computational methods for coupled problems in science and engineering 2013 pp 1 12 20 https doi org 10 1076 1387 3954 200006 6 2 1 m ft 093 https doi org 10 1002 nme https doi org 10 1007 978 3 030 14883 6 4 https doi org 10 1007 s 00366 022 01610 z y eguillon et al 1 21 21 7 g stettinger m horn m benedikt j zehetner model based coupling approach for non iterative real time co simulation in 2014 european control conference ecc 2014 pp 2084 2089 doi 10 1109 ecc 2014 6862242 8 g stettinger m horn m benedikt j zehetner a model based approach for prediction based interconnection of dynamic systems vol 2015 february 2014 pp 3286 3291 doi 10 1109 cdc 2014 7039897 9 s sadjina l t kyllingstad s skjong e pedersen energy conservation and power bonds in co simulations non iterative adaptive step size control and error estimation engineering with computers 33 3 2017 607 620 doi 10 1007 s 00366 016 0492 8 10 s sadjina e pedersen energy conservation and coupling error reduction in non iterative co simulations engineering with computers 36 2020 1579 1587 doi 10 1007 s 00366 019 00783 4 11 t blochwitz m otter j kesson m arnold c clauss h elmqvist m friedrich a junghanns j mauss d neumerkel h olsson a viel functional mockup interface 2 0 the standard for tool independent exchange of simulation models in proceedings of the 9 th international modelica conference the modelica association 2012 pp 173 184 doi 10 3384 ecp 12076173 12 m arnold m g unther preconditioned dynamic iteration for coupled differential algebraic systems bit 41 1 2001 1 25 13 b schweizer d lu predictor corrector co simulation approaches for solver coupling with algebraic constraints zamm journal of applied mathematics and mechanics zeitschrift fu r angewandte mathematik und mechanik 95 05 2014 doi 10 1002 zamm 201300191 14 y e guillon b lacabanne d tromeur dervout ifosmondi a generic co simulation approach combining iterative methods for cou pling constraints and polynomial interpolation for interfaces smoothness in s science t publications eds proceedings of the 9 th international conference on simulation and modeling methodologies technologies and applications insticc prague czech republic 2019 pp 176 186 doi 10 5220 0007977701760186 15 y e guillon b lacabanne d tromeur dervout ifosmondi co simulation algorithm with jacobian free methods in petsc engineering with computers 2021 doi 10 1007 s 00366 021 01558 6 16 y e guillon b lacabanne d tromeur dervout costarica estimator for rollback less systems handling in iterative co simulation algo rithms arxiv 2022 17 j kraft t meyer b schweizer parallel co simulation approach with macro step size and order control algorithm vol volume 6 15 th international conference on multibody systems nonlinear dynamics and control of international design engineering technical conferences and computers and information in engineering conference 2019 v 006 t 09 a 009 doi 10 1115 detc 2019 97781 url https doi org 10 1115 detc 2019 97781 18 a bartel m brunk m gu nther s scho ps dynamic iteration for coupled problems of electronic circuits and distributed devices siam j sci comp 35 2 2013 315 335 doi 10 1137 1208671111 19 j kraft s klimmek t meyer b schweizer implicit co simulation and solver coupling efficient calculation of interface jacobian and coupling sensitivities gradients journal of computational and nonlinear dynamics 07 2021 doi 10 1115 1 4051823 20 w mu ller f breitenecker an explicit approach for asynchronous step size control in co simulation 2016 pp 75 80 21 k burrage parallel and sequential methods for ordinary differential equations clarendon press 1995 doi 10 5555 208495 22 f r holzinger m benedikt optimal trigger sequence for non iterative co simulation in s science t publications eds proceedings of the 9 th international conference on simulation and modeling methodologies technologies and applications 2019 pp 80 87 23 m busch continuous approximation techniques for co simulation methods analysis of numerical stability and local error zamm journal of applied mathematics and mechanics zeitschrift fu r angewandte mathematik und mechanik 96 9 2016 1061 1081 doi 10 1002 zamm 201500196 24 t meyer j kraft b schweizer co simulation error estimation and macro step size control journal of computational and nonlinear dynamics 16 4 02 2021 doi 10 1115 1 4048944 url https doi org 10 1115 1 4048944 25 h stehfest algorithm 368 numerical inversion of laplace transforms commun acm 13 1 1970 47 49 doi 10 1145 361953 361969 26 r jacquot j steadman c rhodine the gaver stehfest algorithm for approximate inversion of laplace transforms ieee circuits systems magazine 5 1 1983 4 8 27 v volterra variations and fluctuations of the number of individuals in animal species living together ices journal of marine science 3 1 1928 3 51 doi 10 1093 icesjms 3 1 3 21 https doi org 10 1109 ecc 2014 6862242 https doi org 10 1109 cdc 2014 7039897 https doi org 10 1007 s 00366 016 0492 8 https doi org 10 1007 s 00366 019 00783 4 https doi org 10 3384 ecp 12076173 https doi org 10 1002 zamm 201300191 https doi org 10 5220 0007977701760186 https doi org 10 1007 s 00366 021 01558 6 https doi org 10 1115 detc 2019 97781 https doi org 10 1115 detc 2019 97781 https doi org 10 1115 detc 2019 97781 https doi org 10 1137 120867111 1 https doi org 10 1115 1 4051823 https doi org 10 5555 208495 https doi org 10 1002 zamm 201500196 https doi org 10 1002 zamm 201500196 https doi org 10 1115 1 4048944 https doi org 10 1115 1 4048944 https doi org 10 1115 1 4048944 https doi org 10 1145 361953 361969 https doi org 10 1145 361953 361969 https doi org 10 1093 icesjms 3 1 3 1 introduction 2 formalism and notations 2 1 problem dimensions and time domain 2 2 ode system and discretization 2 3 capabilities 2 4 costarica estimator 2 5 time shift 2 6 hermite interpolation 2 7 connecting systems into a modular model 2 8 ifosmondi jfm s underlying non linear problem 3 missiles method 3 1 general idea 3 2 global linear problem 3 3 implementation and first step 4 results on test cases 4 1 linear mechanical benchmark 4 2 non linear model lotka volterra equations 5 conclusion