ar x iv c s 01 12 00 1 v 10 cs c c 1 5 d ec 2 01 7 an average case np complete graph coloring problem leonid a levin boston university ramarathnam venkatesan microsoft research abstract np complete problems should be hard on some instances but those may be extremely rare on generic instances many such problems especially related to random graphs have been proven easy we show the intractability of random instances of a graph coloring problem this graph problem is hard on average unless all np problem under all samplable i e generatable in polynomial time distributions are easy worst case reductions use special gadgets and typically map instances into a negligible fraction of possible outputs ours must output nearly random graphs and avoid any super polynomial distortion of probabilities this poses significant technical difficulty msc codes 60 c 05 68 q 17 25 87 05 c 15 20 80 1 introduction many np complete problems are easy for random inputs see e g karp 76 reductions a f b between np problems preserve only the worst case hardness some instances of b f a are at least as hard as those of a johnson 84 gurevich 91 give a good account of some of the issues in average case analysis of np problems for instance the hamilton path problem takes linear average time angluin valiant 79 gurevich shelah 87 in such cases np completeness may be misleading as an evidence of hardness say for cryptography many crypto applications are based on pseudorandomness pioneered in blum micali 82 goldreich goldwasser micali 86 yao 82 those in turn require hard on average one way functions such a disappointment has happened with the knapsack problem shamir 82 lagarias odlyzko 83 another misinterpretation may cause premature abandoning of the search for algorithms efficient on all but extremely rare and peculiar instances some such algorithms are neat and simple e g the graph isomorphism algorithm in babai erdos selkow 80 some problems decoding of linear codes versions of graph coloring and independent sets etc however have eluded such average case attacks so one needs stronger hardness results related to typical or average instances of the problem such hardness would be sensitive to the choice of a particular np complete problem and its input distribution as an evidence that a problem with a particular distribution is hard on average we use a no tion analogous to np completeness our problem has no fast on average solution unless every np prob lem under every samplable distribution has one in that case there is no chance to generate in poly nomial time hard np instances and the p np question becomes academic other examples tiling matrix decomposition etc are given in levin 86 gurevich 90 these papers show that some np problems with uniform probability distributions are average case complete this concept was further analyzed in ben david chor goldreich luby 89 impagliazzo levin 90 venkatesan rajagopalan 92 blass gurevich 95 wang 95 ajtai 96 levin 03 micciancio regev 04 and other works in typical np completeness proofs a f b the reduction f of a to b uses special structures gadgets occurring only in a negligible fraction of instances of b except under strange distributions such as the one generated by f itself thus the hard instances of b may be extremely rare and the problem may be easy on average under the distributions of interest the need to avoid concentrating outputs to negligible sets presents a significant difficulty in designing f our f must output uniformly within a polynomial factor random graphs and only use gadgets available in them an abstract of a 20 color version of this result appears in venkatesan levin 88 this work was supported by nsf grant ccf 1049505 department of computer science 111 cummington mall boston ma 02215 http www cs bu edu fac lnd one microsoft way redmond wa 98052 venkie microsoft com 1 http arxiv org abs cs 0112001 v 10 http www cs bu edu fac lnd 2 average case np complete graph coloring problem l a levin and r venkatesan below we show the first such simple problem on graphs this hardness result is to be contrasted with previous works that used random graphs only to point out that many np complete problems are easy on average moreover as gurevich 87 has shown average case completeness of a random graph problem is unlikely unless dexp nexp without introducing randomizing reductions as we do here to motivate our problem we restate the classical edge coloring problem where all edges incident on a node must have distinct colors in terms of 3 graphs i e 3 node induced subgraphs with induced colors and nodes relabeled 1 2 3 given a simple graph and m colors edge color it so that no 3 graph contains two edges of the same color we generalize this notion by allowing the list c of permissible types of 3 graphs to be arbitrary as c poses only local restrictions we specify an additional global parameter the number l of edges to be left blank set c c l this formalism has notable power to express many graph problems even using only one color and blank one example is the matching problem on a 2 l node graph c contains 3 graphs with at most one blank edge each another is a similarly restated problem of finding l node clique in given graph c restricts blanks to be self loops all pairwise connected however our results below have no direct bearing on the complexity of these classical problems on random instances our graphs are directed digraphs we will color some of their edges and loops with 3 colors leaving l edges blank so each of the 9 edges of a 3 graph has 5 options to be colored red green yellow left blank or be absent c is taken by picking at random a number l 1 n 2 and a subset c of all 59 possible 3 graphs a c colored graph is a graph so edge colored that it has l blank edges and all its 3 graphs are in c in the above examples a random c is correct with a constant probability if m o 1 l is with probability 1 n 2 now our problem admits a simple statement given a random digraph g and a randomly chosen c c color g using a randomized reduction we show the problem is complete in the average case thus if this problem turns out easy on average complexity based cryptography will be impossible without requiring l blanks the problem is trivial but even with only one color say red and blanks no polynomial time algorithm is known c can restrict all blank edges to be self loops on a tournament we now compare our completeness with other proposed notions of average case intractability they reduce the worse case instances of a problem a reputed to be hard to random instances of a problem b some such a are self reducible i e a b or a is a variant of an np hard problem a with altered parameters in both cases a need not be np hard we give some examples solving a noticeable fraction of in stances would allow solving all instances for random self reducible problems such as taking square roots modulo a composite or discrete logarithm 1 these examples randomize only arguments but not the modulus ajtai 96 randomizes the entire instance for a problem given k q and a random matrix a solve ax 0 mod q x k this is shown to be at least as hard as the worst case versions of finding up to a polynomial approximation factor a shortest vector or a closest vector or a basis with the smallest orthogonality defect in lattices the approximation factor is what separates these problem from np hardness making such reduc tions and analysis of lattice based cryptosystems possible 2 the above examples may turn out to be easy on average while some similar problems would still be hard in contrast our completeness assures average hardness unless no hard on average problems exist the above examples have extra structure attractive to cryptographic applications thus if hard they provide one way functions a very desirable tool similar to hard on average problems but not known to follow from the existence of the latter and even from existence of one way function the hardness of the mentioned problems does not follow 2 basic concepts and claims it is essential to consider reductions to or hardness of problems with specific distributions if a is hard on average under some distribution and a f b then so is b under the induced distribution of f s outputs but the latter may not correspond to any distribution of interest it is interesting to show the reducibility under some common distributions e g uniform distribution on graphs to preserve their average case complexity our reductions must map typical instances of one problem into typical instances of another the definitions of distributions and averaging run times involve subtleties some discussed in this section 1 over gf p find x from p g z p g x or one elliptic curve or all jao miller venkatesan 09 elliptic curves of the same order mod p the best known algorithms see lenstra lenstra 91 run in conjectured time exp p log p 2 1 3 2 see e g aharonov regev 05 analogous rounding problems in non abelian discrete groups have tighter p time approxi mation limits any factor depending only on ambient dimensions would imply p np see begelfor miller venkatesan 15 l a levin and r venkatesan average case np complete graph coloring problem 3 our strings and logarithms are binary s 0 1 x is the bit length of x x y is a string representing a pair of strings x y algorithms average run times may be considered on inputs with probability distributions on 0 1 n e g the family n x 2 n this may be artificial sometimes the code lengths of two strings may be the same in some binary encodings of instances but differ in others instead distributions may be over the entire s such as the uniform one x 2 n n n 1 but for tighter analysis on specific lengths distributions n may be conditioned to 0 1 n we say a property holds for almost every a e x if it fails with probability n o 1 we may also consider uniform distribution on 0 1 n and use a cut off algorithm c 0 1 n s selecting a finite prefix of a stream of bits after rejecting all shorter prefixes these probabilities differ by x factors but our completeness results ignore polynomial factors in proba bility and thus in average running time this is similar to the worst case reduction theories which typically ignore polynomial factors in run times so we use for any of these types of uniform distributions when unambiguous our distributions may sum to 1 allowing processes a chance to fail in producing outputs r is the output distribution of r on distributed inputs r is samplable if r runs in polynomial time p time with respect to w r t output lengths we use standard asymptotic notations o o 2 1 random inversion problems and reductions our version of np is constructive the witnesses must be explicitly produced it is convenient to refer to them in the inversion form for an algorithm f with w f w o 1 given an instance x find a witness w f 1 x e g f a b may output the graph a if b is its hamiltonian cycle or else an error a random inversion np problem rip is a pair f where f is computable in p time and the distribution of the instances is samplable the choice of a particular distribution is significant different distributions may concentrate on different subsets of instances thus specifying completely unrelated problems rips require actually finding witnesses for instances so our reductions are pairs r q of algorithms to map both f is f s excluding x with x 0 r is f injective if r x 6 r y for all x f y f s x definition 1 a reduction of a rip f to g is a pair r q of p time 3 algorithms such that 1 r is f injective and r f g s i e r maps solvable instances to distinct solvable ones 2 r f q w g w i e q solves f instances x given a g witness for r x 3 r y y y o 1 i e r maps typical instances into typical ones the reductions are closed under composition and any fast on average algorithm for g yields a fast on average algorithm for f we consider two generalizations a padded rip g is a modification of a rip g where g w g w the distribution is only on y g w combining all padding g above with r s input circumvents the injection requirement a randomization f of f is a rip where the padding is also random it includes a cut off p time algorithm c x that selects the padding length the digits of are chosen at random but is restricted to sets sx of measure sx x o 1 in our case actually 1 then x is x 2 for sx or 0 for sx remark 1 sx consists of those helpful strings which allow r to output instances y whose witnesses can be transformed by q into witnesses for x if any sx is not required to be decidable in p time so this artificial restriction breaks samplability of but sx has a polynomial probability so a randomized algorithm can try several shrinking exponentially the probability of failure for solvable instances some algorithms inverting g give also negative answers no inverses exist unlike inverses they are not verifiable and so can be used in reductions only if their chance exceeds by x o 1 a known sx bound definition 2 a rip g is complete if every rip has a randomization reducible to it or to its padding the average complexity of f is an upper bound t k for the time needed to find w f 1 x expressed in terms of k x x r x where the instance s rareness or exceptionality r has x r x reductions and randomizations preserve average complexity up to a polynomial and completeness note that complete problems must have many easy instances since both hard and easy problems are reducible to them note also that if two distributions and are such that x x x o 1 then r x x reduces f to f the polynomial factors in distributions are absorbed by the definition 3 the p time requirement is essential for r only on average over x this allows a possibility to generalize completeness to problems whose worst case versions are not np complete also may be not a samplable distribution only dominated by one 4 average case np complete graph coloring problem l a levin and r venkatesan 2 2 main result let g be a digraph with edges including loops i e self loops colored red green or yellow or left blank blank edges play a different role than colored ones in that we limit the number of colored non blank edges a spot in g is a 3 node subgraph with induced edges and colors and the nodes unlabeled i e replaced by 1 2 3 so there are 59 distinct spots the coloration c g is the set c of all spots in g and the number l of its blank edges g g is obtained from g by removing the colors as noted in the introduction the classical edge coloring problem restricts the set of spots so that all edges in a spot have different colors we choose a random restriction instead we similarly have 2 node spots called links graph coloration problem invert the function f g g c g i e color the edges of a given graph to achieve the given coloration uniform distribution g 2 n 2 n n 1 c o 1 l n 2 for all c l and n node graphs g theorem 1 graph coloration is a complete random inversion problem we could use as well a monotone variation accepting also any smaller c and or larger l the function to invert would then map g c l to g c l if c g c l c c l l to error otherwise 2 3 outline of the proof the rest of the paper is devoted to proving this theorem section 3 has several lemmas on random graphs to show they are likely to have the structures gadgets needed for our reductions some of these properties require tighter bounds than the literature offers so we must go into some computations one is the likely existence of a unique logn node tournament t edges between a node and t define bits of a string we call node s code used to order some nodes another property to mention is a bound on probability of existence of matchings that are used to embed specially designed large graphs of bouded degree into random graphs section 4 defines a restricted type of tiling problem rrtp which retains its completeness and which we reduce to our graph coloring limited to 3 color 3 node patterns we must carefully select a universal turing machine split its symbols into bits trits and economically represent them in the tiling we use a utm from ikeno 58 and utilize its undefined transitions to implement our extras e g non deterministic choices a tiled square is encoded onto a colored grid represented as a graph which we call a template the grid squares have graph s looped nodes at the corners and unlooped nodes in the centers the edges connecting corners with adjacent corners and with the centers are to be colored to reflect the tiling symbols the reduction is based on embedding this template into a random graph the grid nodes are those connected with all tournament nodes the centers are placed in an order determined by their codes section 5 presents our reduction it generates roughly uniformly random graphs with an embedded instance of our random tiling problem we generate a graph at random except for several features imposed on it these features are likely to exist on their own but may be hard to discover e g it is not known how to find a logn node tournament in polynomial time some features are imposed for convenience to reduce to o 1 the probability of unsuitable graphs among these features are counts of certain types of nodes to match their expected value the codes mentioned above being distinct etc one feature is of a different nature the edges between successive grid centers must reflect the input bits of the tiling instance this feature appears in random graphs only because the instance of tiling is itself randomly chosen section 6 describes the required coloring patterns of all 3 node induced subgraphs and proves the equiv alence of solving the tiling problem to the graph coloring it is reduced to the tournament t is marked with blank loops its two way connections to looped nodes are allowed to include blank edges the limit on the non blank edges then assures the logn size of t which renders it unique we then transform a solved tiling instance into a template colored graph and use a lemma from section 3 to embed this graph into the graph produced by the reduction any coloring of the graph to exhibit a solution to the gcp instance is forced to mark a grid on all nodes connected to the whole tournament the colors of the grid edges must display the tiling solution this used to be the trickiest part of the construction but is now much simpler l a levin and r venkatesan average case np complete graph coloring problem 5 3 random graph lemmas we describe the structures needed for the reductions and prove that they exist on a polynomial fraction of graphs such questions when restricted to properties of almost all graphs are addressed in the theory of random graphs see bolloba s 01 transitive tournaments thereafter simply tournaments are complete acyclic except for loops at each node digraphs e y stands for the expected value of the random variable y w r t the distribution we omit when the distribution is understood unless stated otherwise our random graphs have edges drawn independently with probability 1 2 in this section we consider distributions on graphs with a given not chosen at random number of nodes f g means f n 1 o 1 g n remark 2 we use the following facts on probability and approximations 1 a n n e n 2 n n where n 3 e 2 2 1 1 11 b for k o n n k n k k c let k o n integers be chosen from 1 n randomly and independently the probability that all are distinct is k 1 j 1 1 j n e k 2 n 1 2 let random variable y take values i with probability p i pi 0 i 1 s let yi be the number of occurrences of i in n independent bernoulli trials of y then from the above item 1 a and the central limit theorem a npi e yi 2 i variance yi npi 1 pi b if x 3 o i then yi npi ix with probability e x 2 2 x 1 c let ki be integers with i ki n ti be ki npi 1 and i npit 2 i o 1 then p yi ki i 1 s n o 2 n s 1 11 s 2 proof of item 2 c the number of ways in which the event yi ki i 1 s can occur is n i s ki and each of these has probability s i 1 p ki i thus the required probability is n s i 1 pkii ki nn s i 1 pi ki ki 2 n n s i 1 2 ki ki now nn s i 1 pi ki ki e n i pi 1 ti log 1 ti which we will now see is 1 o 1 indeed log 1 t t so i npi 1 ti log 1 ti i npiti i npit 2 i 0 o 1 by the assumptions lemma 1 let xk be the number of k node tournaments in a random n node digraph c k logn c o k t 2 kc then e xk t e x 2 k t t 2 proof first note that x 2 k l nl where nl is the number of ordered pairs of k node tournaments sharing k l nodes by linearity of expectation e x 2 k l e nl there are k l ways to choose the positions of shared nodes in each tournament in a pair of k node tournaments and n k l k l ways to map this structure in our graph the probability of each pair to form the tournaments is 2 k 2 l 2 2 kl using item 1 b of the remark 2 we get n k l k l nk l and substituting n 2 k c below e nl 2 l 2 k 2 2 kl k l 2 nk l k l 2 2 c k l 2 l l k now e xk e n 0 t e nk t 2 and e x 2 k k l 0 e nl t t 2 k 1 l 1 e nl it remains to show that k 1 l 1 e nl o t t 2 note that for 0 l k 2 c k l 2 c t t 2 so e nl t t 2 k l 2 2 l l k 2 l k l 2 log k for 0 l k 2 2 k l l 2 log k for k 2 l k 2 k 2 2 k o 1 k 6 average case np complete graph coloring problem l a levin and r venkatesan let 0 c 1 c o k and c be the probability distribution of a 2 k c node graph g generated as follows first we choose randomly a sequence of k nodes of g and force a tournament t on them then we choose at random the set of all other edges i j 6 v t 2 the following corollary implies that a random graph on 2 k c nodes has a unique k node tournament with a polynomial probability if and only if c o 1 corollary 1 1 for those g with unique k node tournaments c g g 2 kc 2 c almost every g has only one k node tournament proof first note that c probability of all such pairs t g is the same and the total number of such pairs is gxk g e xk g g thus c g g xk e xk which is 2 kc if xk 1 then the expected number of tournaments other than the forced one is o 1 e c xk gxk g c g gxk g xk g g e xk e x 2 k e xk 2 kc 2 2 kc 2 kc 1 2 kc 1 we use the next lemma on matchings in random graphs to show that a e g contains any o 1 degree graph e g hamilton path grids as a spanning subgraph lemma 7 12 of bolloba s 01 proves a e graph has perfect matchings we need a tighter bound so use tighter calculations and a no solitary edge argument lemma 2 let g be a bipartite undirected graph with edges in v 0 v 1 chosen independently with probability b n n vi then for large enough n the probability that g has no perfect matching is 2 n eb proof by hall s theorem if g has no perfect matching it has an n 1 node independent set l 0 l 1 li vi let l be a smallest such li in g then a def l 1 n 2 and no node has exactly one edge to l otherwise it can replace its neighbor shrinking l let a be the probability of g containing such an l l 0 then 2 n 1 2 a 0 a assume that b n e b 2 otherwise lemma is trivial a node is isolated with probability p 1 b n n e b b 2 2 n e b 1 b 2 2 n l 0 l 1 and two edges from each x v 1 l 1 to l 0 have ca n a 1 n a a 1 2 a choices for a 2 n 2 h def 1 1 a a 1 n 1 2 3 n using n k ne k k we have a ca b n 2 a 1 b n n a a 1 ne a 1 a 1 ne a a a a 1 2 a b n 2 a pha 2 e 2 b 2 ph 2 a p 2 ne a 1 o p 2 n by inclusion exclusion 0 np n 2 p 2 n 3 p 3 np 1 pn 3 also 1 n 2 n b n 2 p 2 2 n n 2 b 2 p 2 2 n so 2 0 2 1 o p 2 n n 2 ne b 1 pn 3 b 2 2 p 1 2 n o pn 1 b 2 2 n 2 ne b indeed pn 3 b 2 2 p 1 2 n o pn b 2 2 n or equivalently b n n b 2 3 o 1 p p 1 2 nb by using x y 2 xy and b log p lemma 3 equitable colouring hajnal szemeredi 70 any undirected graph of degree d can be partitioned into d independent sets whose sizes differ at most by one see bolloba s 04 for a proof kierstead kostochka 08 gives a p time algorithm but we need here only the existence of the partition next we use this lemma to find embeddings in random digraphs of some structures we need in our reduction we first describe these embeddings write h g if h is an induced subgraph of g we call nodes u and v connected by a single edge if exactly one of the two directed edges u v v u exists by a double edge if both do and non adjacent or disconnected if neither does the degree u of a node u is the number of adjacent nodes and g is the maximum degree of nodes in g a di embedding g v g v h is a bijection isomorphic on each connected 2 node subgraph of g note disconnected nodes can be mapped to nodes that may be connected we call two graphs compatible compatible if they have the same number of looped and unlooped nodes lemma 4 embedding lemma let h f d f and m v f h 4 dd 3 o 1 choose digraphs g by dropping all non loop edges incident on f h and putting randomly chosen edges instead for a e such graph there exists a di embedding g of f into g which is an identity on h we will use this lemma for a graph with d o 1 a grid with some additional edges now we want to find this grid in the random digraph by constructing a suitable g we reduce the task of constructing g to that of finding perfect matchings in a sequence of random bipartite undirected graphs using the lemma 3 we partition f h suitably into some independent sets ij and extend g on each ij one by one l a levin and r venkatesan average case np complete graph coloring problem 7 proof initialization first we partition f h into independent sets ij j d 2 1 such that ij m m d 2 and each ij consists of either only looped nodes or only unlooped nodes let f be a graph obtained by adding edges between nodes in f h that share a neighbor in h clearly f d 2 now f can be partitioned into independent sets using the lemma 3 as needed next we split v g h into disjoint vj compatible with ij the latter condition can be met since g f are compatible set k h below k will denote the set of nodes on which g is defined i e di embedding is found repeat the following steps for j 1 2 until the extension of g is completed extension step j call v vj a candidate for u ij if setting g u v will extend g as a di embedding over k u for this v must satisfy at most 2 d connectivity constraints specifying which of the directed edges are present now we construct an undirected bipartite graph g j by connecting every node in ij to all of its candidates in vj then with a high probability over g we find a perfect matching that maps ij to vj satisfying the connectivity requirements this way we extend g over k ij and update k to k ij analysis of extension step j in g j the probability of an edge u v is 4 u also the edges are chosen independently the conditional probability of v being a candidate for u is the same given the set of all the edges from v to ij u k since ij u and u have no nodes in common in g j k which is guaranteed by construction of f in the initialization and partitioning steps the existence of matching is a monotone property i e cannot be broken by adding edges so it suffices to estimate its probability by decreasing the chance of all edges in g j to the uniform 4 d now we come to the overall success probability over g of finding g put b m 4 d then using lemma 2 the probability that one of the d 2 matching steps fails is o d 2 m d 2 e b o m em 4 d o e m d 24 d logm o 1 4 turing machines and tilings our proof uses the completeness of the random tiling problem rtp by impagliazzo levin 90 any samplable random inversion problem rip reduces to a problem with p time computable distribution i e with the measure of intervals 0 x n computable in time x o 1 levin 86 proved rtp to be complete for such problems using deterministic reductions a tile is a square with each corner labeled by a letter a z a tiling of an n n square involves covering it with n 2 tiles so that the letters on the touching corners of adjacent tiles match our rip will be inverting a function t that given a tiled square input returns the set of tiles called legal used in it and its lowest floor row of tiles problem invert t i e given a set of legal tiles and a floor row extend it into a tiled square distribution uniform choose randomly n with probability 1 n n 1 the set of legal tiles from all possible 264 tiles and a legal tile at the lower left corner choose each successive tile of the floor row with equal probability from the legal tiles matching the previously chosen if none exists output a trivial instance our graphs are edge colored with only 3 colors so we need careful restrictions on letters in the complete rtp we use figure 1 below pictures our rtp representing turing machines tm our symbols have four fields 0 1 called a trit and three bits b s s we refer to s s as the direction and previous direction leftward or rightward to b as priming and picture b 1 by priming the trit e g 7 no legal tile x yz u has zs 6 xs or xs ys thus each row will consist of two segments rightward pointing segment at the left and leftward pointing one at the right tiles where zs is have y u if us is then x z two tiles cannot agree on both z u but differ on both x y the left segment of the floor row must have b 1 the right segment b 0 6 the top and floor symbols carry a special flag and must agree so that the entire tiled square can be wrapped into a cylinder the cylinder has constant symbols at each end it is further wrapped into a torus by a ring of the special wall tiles made by repeating this pair of symbols we use just one particular tile set and it meets the above restrictions any tile set has a constant probability among all tile sets so the density requirements of the reductions are not affected note that tiling an n n square is easily reduced to tiling a larger 2 p p rectangle with a prime p n 2 n our argument will use only such rectangles we reduce such restricted form of rtp called rrtp to graph coloration problem thus we need to see that rrtp restrictions are compatible with reductions of levin 86 of non deterministic computations by a universal tm to tiling 8 average case np complete graph coloring problem l a levin and r venkatesan 4 1 completeness of the rrtp any rip can be stated as accepting random instances by a run of a given non deterministic p time tm all tms can be simulated by a universal tm with a polynomial time overhead and some special short logarithmic input prefix we will now describe such a universal tm of ikeno 58 turing machines work on a tape consisting of a sequence of cells exactly one cell contains the tm s head state s the others its tape symbols a cell content at a given step is called an event their space time table i e a rectangular grid where i th row contains the entire tape contents at i th step describes the history of the computation the tm s head follows some path from its bottom row to the top at each step the head acts on one of its two adjacent cells we call this cell the head s cell and the border between them active and others idle we now describe some local rules ensuring the global picture cells content specifies the direction s to the active border thus adjacent cells cannot both have s directions facing away from each other idle cells do not change content from one row to the next active cells do performing a transition exactly one of them changes direction and that one carries the head at the next step figure 1 pictures the space time history around the active cells for the tm transition moving the head to the right its box containing the state s 1 points toward 1 left or right as reflected in cases a and b respectively in case a the right move merely causes the head to flip its direction otherwise the head switches places with the other active cell of the current row left moves work similarly as per the above rules a 2 s 2 1 s 1 b 2 s 2 s 1 1 figure 1 space time history for a right move 1 s 1 2 s 2 right a binary tm has 0 1 tape alphabet to convert a regular tm into a binary one m we must deal with its lack of a blank symbol that usually denotes the end of input for this we prefix its input x with padding that encodes input length l x as a binary string preceded by a string of 2 l zeros in the cells carrying this padding two counters are initiated that monitor the distance to both ends of the used part of m s tape initially the input m s head moving on the tape pulls these counters along and keeps them updated when the right end of the used tape is reached any subsequent characters are treated as blanks m and its counter are initialized so that the head never approaches the tape ends the simulated tm m may have a write 0 or 1 nondeterministic command it is used to guess the solution of the instance our rrtp needs the space time history to wrap around making the top row consistent with the bottom row being next to it the non determinstic command is used for this after a successful end of the computation we describe below a version of a tm u of ikeno 58 that simulates any such binary m u has 6 leftward i e with our s and 5 rightward head states and 6 tape symbols we represent them by the same fields b plus the directions s s as used in rrtp head states differ from tape symbol by s 6 s i e changed from its previous value the tape of u simulating m consists of a program segment p followed by the tape of m segment denoted t at each step u marks the current cell it is working on goes all the way left to program segment decides on the next step to perform and returns to the current cell to do so the tape trits in segment p never change in segment t the trits represent the current tape bits of m except that the m s active tape symbol may be replaced by a this and the priming bits b are the only non m data u uses the simulation starts with p having only 0 1 symbols followed by the head then by t s the transition table below has the e command one of the halt commands in ikeno 58 denoted by modified to a choice of entering state a or b this simulates m s non deterministic command we modify the initial state to be e too the effect of the non determinism of u s first transition to a b disappears in 3 steps easy to see by tracing them afterwards the simulation proceeds in a regular way l a levin and r venkatesan average case np complete graph coloring problem 9 the table s columns are indexed by tape symbols the rows by the states rightward directed by uppercase letters leftward by lowercase the entries reflect the resulting state blank if unchanged the trit of the new blank if unchanged and its bit always even if unchanged e g in the transition from a 1 the symbol 1 gets unprimed while from a 1 it stays primed the d 0 command is unused we employ it to mark a column of wall tiles merging the left border of the space time history with its right border to obtain a cylinder u comes to its choose a or b state command e if the digit that m is to write in the ikeno s representation of m s command is replaced with a then u has a choice to act as if it was 0 or 1 1 0 1 0 a f f e 0 b f f e 1 f f c b a f c f e a b f e b a d d d d e d e e e b a a b 5 the reduction algorithm r the reduction r described below produces a graph g from any rrtp instance x supplemented with a random o x 7 bit r pairs g with a coloration standard c and l described in the next section we show that c colorings of such g exist for any solvable x and all of them easily yield solutions for x remark 3 recall that the reduction see sec 2 1 involves a pair of algorithms r and q such that randomized tiling instance y x r graph coloration instance g c solution w of tiling y q c colored g to assure the solvability of r y section 6 transforms a tiling solution to a colored graph template g and di embeds g into a suitably colored g this can be seen as a not necessarily p time inverse of q tiling solution w q 1 edge colored graph g g now we describe how r y designs the graph g let a prime p be the grid size of x k log 1 5 5 p 2 n 4 p 2 4 3 k first r randomly selects disjoint sets t ut lt in g 1 n so that ut lt 1 2 p 2 t k then r creates a graph g on g l u l being its set of looped u of unlooped nodes randomly except that i iv are enforced i each node i has n 8 xi xi n 2 3 double edges to l t forms a tournament tk t 1 source to sink ii lt l ut u ut lt t is the set of all nodes connected with every node in t the next condition uses the concept of codes defined in babai erdos selkow 80 as the 2 t bit string whose i th bit reflects the presence of the code edge u ti 2 or for odd i t i 1 2 u the code of u w r t ti t is the restriction of its code to the digits 2 i and 2 i 1 iii all codes of ut differ even in their 3 4 most significant digits 3 4 codes let v 1 v 2 v 2 p 2 be all the ut nodes in decreasing order of codes and vd be the first one disconnected from vd 1 iv t 1 has double edges to v 1 vp v 2 p 2 1 p v 2 p 2 the four connection types of vi to vi 1 i d reflect our rrtp floor s left s is symbols for d i p the forward vi 1 vi edges reflect its right bits denote n 2 the set of graphs with unique k node tournament respecting i ii n also respect iii iv proposition 1 in a e g all nodes in ut have distinct 3 4 codes proof the codes of nodes in ut are independent and uniformly distributed for graphs in n 2 there are x 33 k 4 possible 3 4 codes for ut and ut y 32 k the chance that all codes are distinct is 1 1 x y y 1 2 e y y 1 2 x 2 e y 2 x 1 since y 2 x 3 2 2 33 4 k 243 256 k 4 o 1 10 average case np complete graph coloring problem l a levin and r venkatesan remark 4 a e graph generated by r has a unique k tournament unique codes for ut and so is in n and uniformly distributed on it thus we will consider the uniform distribution on n and denote it by p we define sx in section 2 1 to contain exactly those in y resulting in graphs g n that satisfy all properties of a e g required below thus these properties of g will be assumed the theorem follows from the two following propositions the next proposition assures the gadgets produced by r and used in our reduction are available in uniformly random graphs proposition 2 the probabilities of graphs g output by r from random x are o g proof assigning edges between successive nodes in ut to encode random rrtp instance agrees with thus we only need to show that other constraints r enforces are satisfied by a sufficient fraction of graphs by corollary 1 and proposition 1 the set h of graphs with a k node tournament t have probability c h 2 kc h h o n with such t the probability of sizes of lt and ut being their expected value 2 p 2 is 1 o n by item 2 c of remark 2 all other conditional probabilities are 1 o 1 except for four t 1 links being double which is 1 81 proposition 3 with all x and a e the reduction r succeeds on y x i e g r y has a c coloring w if and only if x has a tiling w moreover w is constructed in p time by q w the proof is the topic of the next section it describes the standard coloration c required by r and the inverse q 1 of q mapping tiling solutions to c colored graphs the crucial part is to assure item 2 of the definition of reduction that q can transform any witness of coloring problem into a witness of tiling 6 the coloration c and the proof of proposition 3 enforcing structures with spots bootstrapping we now give simple and typical examples of how our design of c restricting spots allowed in the graph called c spots is used properties that all c colored graphs have we call forced by c for instance our c has only one spot with 3 blank blank looped nodes and it is a tournament this forces all blank nodes of any c colored graph to form a tournament as well another example no c spots have nodes with two links of certain types say outgoing red edges without reverse this forces the same on any c colored graph yet local conditions alone such as those imposed by spots cannot ensure all needed features e g at least one link of a given type at certain nodes but our c also requires leaving enough edges blank we show this assures the maximal size of the above tournament t and thus its unique location bootstrapping our construction indeed some links with blank edges are only at blank nodes and any smaller t lowers the number of blank edges obtainable by using only c spots next we describe a colored graph template reflecting any solved tiling instance and random graphs matching its input row we force it to be displayed by any adversary c coloring such a random graph mapping tiling to colored template we first make blank the loops of t and make blank yellow all double i e double edge links between l and t we then implement q 1 as outlined in remark 3 first we transform the tiling into a colored template graph g then we di embed g g into g copying the colors all other edges in g will be yellow c will assure any coloring of g to have this form see figure 2 our g consists of t ut and in addition a toroidal grid a product graph z 2 p z p including z 0 t 1 located at the origin of the grid grids s smallest squares undirected 4 node cycles represent rrtp tiles and are ordered by rows and by columns in each row the corners of each i th square are connected by radial links into its center vi ut treated thereafter as a part of the grid we also need the random edges of the graph g to determine uniquely the coloring of the grid s floor row containing z 1 for that we include in g its code links to t they assure sec 6 2 the correct placement of vi centers in the first row 1 the codes of section 5 determine a monotone order of vi nodes forming the input chain 2 the coloring of the code edges proves the correctness of this ordering 3 the connections of the input chain consecutive nodes determine the coloring of the grid s floor row 4 the coloring of the rest of the grid exhibits a solution to the tiling problem instance l a levin and r venkatesan average case np complete graph coloring problem 11 we may denote colors as r red g green y yellow and loosely refer to the absence or blankness of an edge as to two special colors a and b an edge colored red resp green etc or left blank we call a red edge resp green blank etc same for double edges e g a yellow edge with the reverse blank edge is yellow blank the node s color or blankness is that of its loop we denote the induced colored 3 node and 2 node subgraphs spots and links as u v w and v t respectively our grid s l nodes have two vertical v v 1 two horizontal h and four radial i j k l links each the h links are directed idle or undirected active and wall we artificially refer to active links as outgoing and wall as incoming at both ends with these convention each grid node has exactly one link of each type i j k l and l nodes one incoming and one outgoing h and v so we can treat them as functions if v connect x to y and i connects y to z we write y v x z i y iv x except for non idle h we also can use inverses x v 1 y we define h as j i and will prove this permutations to commute with v the column of the origin z 1 we call the wall by i links we call i in lt k from ut to the wall or j at the rest of ut they link our input chain z 1 v 1 z 2 v 2 z 3 z 2 p 2 v 2 p 2 zi 6 zj if i 6 j it passes through all 2 p floor nodes descends to the wall of the next lower rows via k and eventually passes through all the grid nodes the coloring of v links represents a solution to the tiling problem this includes a direction bit s also in i l used below j at z 1 carries wall w and floor f flags they propagate w via j l chain f via j i chain more details are in section 6 3 then we use the key fact that g t has degree o 1 this allows to prove in section 6 3 the existence of an identical on t ut di embedding gx of g into a e g 6 1 forcing the blank tournament this section shows how a selection of spots with blank edges enforces a z 2 p z p grid the tournament and the input chain first we show that coloring a tournament of size k forces in a e g a n shortage of blank edges between l and t this cannot be compensated by coloring edges of other types which are o n altogether since t is the only k node tournament the c coloring must use it now each c link with blank edges can occur at most bi times in a e random graph requiring total bi blank edges forces the coloring to use each type exactly bi times this strategy crucially depends on g being random let the graph g produced by the reduction r be c colored let t l t and u t be respectively its sets of blank nodes of looped non blank and of unlooped nodes connected to every node in t any link with a blank non loop edge falls into one of the following disjoint directed types v j i c the following constraints i iv on these types are enforced by the spots in c i each 3 node induced subgraph of t and thus the whole t is a tournament let t 1 be its sink node ii non blank nodes have at most one link of each of the types i j k l incoming and outgoing v h iii all i j k l run from u t to l t t 1 v h within lt t 1 single b or y b from ut to t iv c links are l t doubles with a blank edge to t in two places it is from t put b 0 k b 1 b 2 b 3 b 4 2 p 2 b 5 the number of double edges l to t and b bi let b 0 be the number of blanks on t and b 1 b 2 b 5 be the number of edges of types v i j and c respectively let b i b i be the number of all blank edges proposition 4 any coloring respecting i iv and b b of a e g n has b i bi and t t proof by i iv no non t node has 2 outgoing blank non c edges let t k k then in a e g 1 0 since by corollary 1 k k 2 3 4 k 2 n nodes are connected to all nodes of any given k node set b by remark 2 2 b any coloring of g n has b 5 b 5 n 9 to have b b one has to compensate by extra blank edges of other types whose total number is 4 3 4 k n this is possible only if 4 3 4 k n n 9 i e 4 3 4 3 k 36 whence k for large enough k which is a contradiction it follows that t k and by uniqueness of the k node tournament t t thus u t ut and lt lt the number of blank edges of each type v i j by iii is at most b 1 b 2 b 3 b 4 2 p 2 finally the number of loops on t is k thus b i bi as claimed 12 average case np complete graph coloring problem l a levin and r venkatesan 6 2 forcing of a monotone order on the input chain and of the toroidal grid we exhibit the decreasing codes order of vi s as follows for each i we choose l i and color a link vi tl i the existence of b 4 edges implies that every vi ut has a link the conditions described next imply that the colors of links from vi zi 1 vi 1 to t indicate that the code of vi 1 w r t tj is at most that of vi for j l i highest bits and strictly less for j l i thus the input nodes form an acyclic i linked path in the decreasing order of their codes note that x y as integers represented as ternary k digit strings iff for some l k and all j l digits xj yj and xl yl recall that a node in ut lt is connected to every node in t the code of vi w r t tj is copied onto zi 1 tj and will be compared in zi 1 tj vi 1 coloring the code links all edges tj to vi and down edges single edge to tj from vi are red if not down and j l i blank if j l i or yellow otherwise the code of vi w r t tj is 11 01 or 10 to reflect vi having a down up or double edge to tj for j l i this ternary code is exhibited on the zi 1 tj link by coloring its edges yellow red or green respectively for j l i 10 is encoded on the zi 1 tj link if vi has a code 11 w r t tj otherwise 01 for j l i the yellow zi 1 tj link encodes an 11 now we can in zi 1 vi 1 tj uniformly for all i j prohibit the codes of vi 1 to exceed those encoded at zi 1 toroidal grid first we prove the group generated by permutations v h is commutative indeed consider a vi path x o a v link from x followed by an i link to o a jv 1 path o y and an ij path x z by our c they will require an l link x o a k link o y and an h link x z the lk path requires an h link x y and i l carry the same direction bit s depending on s the h links at x are both outgoing or both incoming by c x cannot have two such links thus y z h vijv 1 so h v vij vh claim v h links induce a connected toroidal grid on v proof i chain spans the whole grid v lt ut z 1 thus z 1 lt any u lt is accessible from z 1 as u h ivj z 1 now h r z 1 v s z 1 z 1 for some minimal r s since v h permute the finite v if h ivj z 1 z 1 then h i z 1 v j z 1 z 1 and r i s j since blank z 1 is the only node with both w f flags up in j then the h i vj z 1 i j bijection sets up a rectangular grid co ordinates on v and rs 2 p 2 by our c r s 2 so the grid is either 2 p p or p 2 p in our toroidal rrtp exactly one i link changes direction at each row of any tiling hence s is even and s 2 r 2 p 6 3 forcing the correct representation of tiling link bits the grid links see figure 2 reflect rrtp fields trit bit b side s floor f and wall w the self loop color at a node in lt carries its now we list the bits carried by its incident links refers to their one transition later earlier values v b s i e v links carry b s i s f j f w l s s k b if idle else w h s b of both active ends or s of an idle end the same triple b s can encode a state if s 6 s or a symbol if s s link coloring blanks and loops distinguish all link types except k from l that together have 12 edge patterns v i j each have a blank edge with r g y a reverse h links have no blank edges each row of the torus has one active and one wall h link connected by two chains of idle links idle h have a red edge directed toward the active h and a green reverse active links carry s b 1 b 2 and have a red iff s or else a green if b 1 6 b 2 h has a yellow edge pointing to b 1 if b 1 b 2 h is monochromatic double iff b 1 else rightward single if red single with red loops it is the wall h link link chains the i j and j k chains propagate the floor and the wall flags respectively from the origin z 1 to its entire row and column the wall nodes in z 1 s column represent the symbol d of rrtp their left neighbors the symbol 0 they are oriented back to back and connected by a special wall h link it requires the wall flag up at j k links and vice versa adjacent idle h links match directions thus chains of leftward pointing and of rightward pointing idle h links can only meet at a unique active h link l a levin and r venkatesan average case np complete graph coloring problem 13 t t t t t t c d c d f f w sc f f w sd f f w bl bc bd br e f g w sc w sd br a s ba bb b l a b r f f w f f w f f w s ba s bb br o p q i j v kl h figure 2 simulation of a transition rrtp compliance the base case we now tell how c spots force copying the rrtp input onto the grid s floor row the reduction algorithm r sec 5 step iv on the floor s j i triangles e g pbq in fig 2 the presence of edges between unlooped ends pq is copied onto its g r y trit e g b floor s i link at active b has a y loop used for the symbol and for the starting e state this precludes edges between p and q this is the leftmost pair of disconnected successive input nodes on the i chain others to the left are blocked by rightward h links via rightward i links the left rightward directed segment has trits symbols from 0 1 it ends at the active h link whose right node encodes the starting state the right segment acts similarly except that only the rightward edge p q is used and mapped into r g trit colors induction on rows in the figure nodes a and b are active their incident edges carry the rrtp triples a sa ba b sb bb since a and b have opposite s values in the current step the incoming s are the same so that s a s b s as shown in the figure now the h link carries s ba bb the triangle abc with the h link on ab determines bc on the v link ac and c at c the triangle abf imposes sc on the l link af node d transition is similar this assures the representations of that tile s top symbols at the next row the i links fc and gd copy sc and sd respectively r is idle so its v link s br is copied from the incoming v link via k link this structure of computation and data flow is similar in each square proof of proposition 3 recall that a e graph g sampled by the reduction r x is in n i e has a unique k node tournament t ut lt 1 2 p 2 and distinct ut codes the tiling instance x determines the edges between successive input nodes we have described the graph g and its c coloration that must encode the tiling pattern the degree of g t is o 1 thus by the embedding lemma 4 g can be di embedded in a e g i e g g g 1 acknowledgments we thank peter ga cs for discussions and marvin minsky for comments on small utms 14 average case np complete graph coloring problem l a levin and r venkatesan references ajtai 96 m ajtai 1996 generating hard instances of lattice problems acm stoc proc pp 99 108 aharonov regev 05 dorit aharonov oded regev 2005 lattice problems in np conp jacm 52 5 angluin valiant 79 d angluin l g valiant 1979 fast probabilistic algorithms for hamilton circuits and matchings j comp syst sci 18 155 193 babai erdos selkow 80 l babai p erdos m selkow 1980 random graph isomorphism sicomp 9 628 635 begelfor miller venkatesan 15 e begelfor s d miller r venkatesan 2015 non abelian analogs of lattice rounding j groups complexity and cryptology 7 2 http doi org 10 1515 gcc 2015 0010 ben david chor goldreich luby 89 s ben david b chor o goldreich m luby 1989 on the theory of average case complexity acm stoc proc pp 204 216 blass gurevich 95 andreas blass and yuri gurevich 1995 matrix transformation is complete for the average case sicomp 24 1 3 29 blum micali 82 m blum s micali 1982 how to generate cryptographically strong sequences of pseudo random bits ieee focs proc also sicomp 13 4 850 864 bolloba s 01 b bolloba s 2001 random graphs cambridge univ press 2 nd edition bolloba s 04 b bolloba s 2004 extremal graph theory dover goldreich goldwasser micali 86 o goldreich s goldwasser s micali 1986 how to construct random functions j acm 33 4 792 807 gurevich 87 yu gurevich 1987 complete and incomplete randomized np problems ieee focs proc pp 111 117 gurevich shelah 87 yu gurevich s shelah 1987 expected computation time for hamilton path prob lem sicomp 16 486 502 gurevich 90 yu gurevich 1990 matrix decomposition is complete for the average case ieee focs gurevich 91 yu gurevich 1991 average case complexity j comput system sci 42 346 398 hajnal szemeredi 70 a hajnal e szemeredi 1970 proof of a conjecture of p erdos combinatorial theory and its applications ii proc colloq balatonfured 1969 pp 601 623 north holland ams terdam see a p time algorithm in kierstead kostochka 08 ikeno 58 shinichi ikeno 1958 a 6 symbol 10 state universal turing machine proc inst of electrical communications tokyo as cited and described in minsky 67 impagliazzo levin 90 r impagliazzo l a levin 1990 no better ways to generate hard np instances than picking uniformly at random ieee focs proc jao miller venkatesan 09 d jao s d miller r venkatesan 2009 expander graphs based on grh with an application to elliptic curve cryptography j number theory 129 6 1491 1504 karp 76 r karp 1976 the probabilistic analysis of some combinatorial search algorithms algorithms and complexity j f traub ed academic press ny pp 1 19 karp lenstra mcdiarmid kan 85 r karp j k lenstra c j h mcdiarmid a h g rinnoy kan 1985 probabilistic analysis in combinatorial optimization annotated bibliographies m o heigeartaigh j k lenstra a h g rinnoy kan eds new york wiley http doi org 10 1515 gcc 2015 0010 l a levin and r venkatesan average case np complete graph coloring problem 15 kierstead kostochka 08 h a kierstead a v kostochka 2008 a short proof of the hajnal szemeredi theorem on equitable colouring combin probab comput 17 2 265 270 http dx doi org 10 1017 s 0963548307008619 johnson 84 d johnson 1984 the np completeness column an ongoing guide j alg 5 284 299 lagarias odlyzko 83 j c lagarias a m odlyzko 1983 solving low density subset sum problems ieee focs proc pp 1 10 lenstra lenstra 91 a k lenstra h w lenstra 1991 the development of the number field sieve springer verlag levin 86 l a levin 1986 average case complete problems sicomp 15 285 6 levin 03 l a levin 2003 the tale of one way functions probl inform transm 39 1 92 103 micciancio regev 04 d micciancio o regev 2004 worst case to average case reductions using gaus sian measures ieee focs proc pp 372 381 minsky 67 m l minsky 1967 computation finite and infinite machines prentice hall shamir 82 a shamir 1982 a polynomial algorithm for breaking the basic merkle hellman cryptosys tem ieee focs proc pp 145 152 venkatesan levin 88 r venkatesan l a levin 1988 random instances of a graph coloring problem are hard acm stoc proc pp 217 222 venkatesan rajagopalan 92 r venkatesan s rajagopalan 1992 average case intractability of matrix and diophantine problems acm stoc proc pp 632 642 yao 82 a c yao 1982 theory and applications of trapdoor functions ieee focs proc pp 80 91 wang 95 j wang 1995 average case completeness of a word problem for groups acm stoc proc pp 325 334 http dx doi org 10 1017 s 0963548307008619 1 introduction 2 basic concepts and claims 2 1 random inversion problems and reductions 2 2 main result 2 3 outline of the proof 3 random graph lemmas 4 turing machines and tilings 4 1 completeness of the rrtp 5 the reduction algorithm r 6 the coloration c and the proof of proposition 6 1 forcing the blank tournament 6 2 forcing of a monotone order on the input chain and of the toroidal grid 6 3 forcing the correct representation of tiling