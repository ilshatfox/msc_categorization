optimal adaptive control of cascading power grid failures 1 version 2010 dec 10 daniel bienstock columbia university new york 1 introduction power grids have long been a source of interesting optimization problems perhaps best known among the optimization community are the unit commitment problems and related generator dis patching tasks see 16 however recent blackout events have renewed interest on problems related to grid vulnerabilities a difficult problem that has been widely studied the n k problem concerns the detection of small cardinality sets of lines or buses whose simultaneous outage could develop into a significant failure event see 6 23 and references therein this is a hard combinatorial problem which unlike the typical formulations for the unit commitment problem includes a detailed model of flows in the grid a different set of algorithmic questions concern how to react to protect a grid when a significant event has taken place this is the outlook that we take in this paper in this context the central modeling ingredient is that power grids display cascading behavior a cascade is the process by which components of the grid especially power lines sequentially become inoperative in a catastrophic cascade this process accelerates it snowballs until the grid collapses a control action must take this multi step behavior into account because a myopic action taken at the start of the process so as to immediately arrest the cascade may prove far from optimal the computation of an optimal control can be formulated as a multi stage mixed integer pro gramming problem ideally this should be a stochastic or robust formulation furthermore the formulation will need to include an explicit model of the power flows when dealing with large scale or even medium scale grids it is likely that such a formulation will prove extremely in tractable in addition it is likely that the prescribed control will call for counter intuitive and possibly impractical actions see section 4 and appendix a in this paper building on prior models for cascades we consider an affine adaptive distributive control algorithm that is computed at the start of the cascade and deployed during the cascade the control sheds demand as a function of observations of the state of the grid with the objective of terminating the cascade with a minimum amount of demand lost the optimization problem handled at the start of the cascade computes the coefficients in the affine control one set of coefficients per demand bus the discussion of this approach starts in section 4 1 section 5 describes an initial set of experiments with a simple form of affine control most of our algorithms are first order methods that compute local optima see section 6 1 however in a special case which is nevertheless of interest we obtain an exact algorithm that runs in polynomial time section 6 2 algorithms that account for stochastics are discussed in section 8 we present numerical experiments with parallel implementations of our algorithms using as data a snapshot of the u s eastern interconnect with approximately 15000 buses and 23000 lines 2 notation in the linearized approximation to the power flow problem we are given a directed graph g with n buses and m lines denoted respectively nodes and arcs in traditional graph theoretic language in addition 1 partially funded by grant de sc 000267 1 ar x iv 1 01 2 40 25 v 1 m at h o c 1 7 d ec 2 01 0 a line j is oriented from its tail t j to its head h j the orientation of any line is arbitrary and is simply used for notational convenience the set of lines is denoted by a for each line j we are given two positive quantities its flow limit uj and its reactance xj we are given a supply demand vector rn with the following interpretation for a bus i if i 0 then i is a generator a source bus while if i 0 then i is a load a demand bus and in that case i is the demand at i the condition i i 0 is assumed to hold for a generator bus i we indicate by the constant s i the maximum supply of i we denote by g denote the set of generators and by d the set of demand buses the linearized power flow problem specifies a variable fij associated with each line j and a variable i associated with each bus i denoting for each bus i the set of lines oriented out of into i by i resp i the power flow problem consists in finding a solution to the following system of equations j i fj j i fj i bus i 1 t j h j xjfj 0 line j 2 these equations can simply be abbreviated as nf nt xf 0 where n denotes the bus arc incidence matrix of g and x diag xij remark 2 1 it can easily be shown that system 1 2 is feasible if and only if i k i 0 for each component island k of g and in that case the solution is unique in the f variables we stress that the orientation of the lines is arbitrary consequently for a line j we might have fj 0 indicating that power flows in the reverse direction as a final point we note that the flow limits uij do not appear in 1 2 consequently it is possible for the unique solution f to exceed the flow limits i e it is possible that fj uj for certain lines j 3 cascades in this section we introduce our model of cascading failures of power grids which draws from the models in 9 10 11 a cascade starts with an initial event for example the removal of a number of lines that alter and compromise the power grid informally this is followed by a sequence of additional line outage events which are interspersed with simple control mechanisms as the grid adjusts to decreased resources for example decreased generator capacity as a starting point we have the following template template 3 1 generic cascade template input a power grid with graph g post initiating event set g 1 g for r 1 2 do comment round r of the cascade 1 set f r vector of power flows in gr 2 set or set of lines of gr that become outaged in round r 3 set gr 1 gr or adjust demands and supplies in gr in this template graph g 1 represents the grid we have after the initial event that causes the cascade to make the template complete we must specify a mechanism for determining the set or in step 2 and how to adjust demands and supplies in step 3 we tackle the second issue first 2 the supply demand adjustment in step 3 handles cases where the removal of or from gr creates new components in gr 1 any imbalance between supply and demand in a component of gr 1 must be corrected if in a component of gr 1 total supply exceeds total demand then supply must be reduced and viceversa such actions constitute a form of control we will discuss this item in more detail in section 4 1 now we turn to step step 2 we will say that line j is overloaded in round r if f rj uj practical experience shows that overloaded lines are likely to be come outaged two ways to implement this observation are f 1 simple deterministic rule j or if f rj uj 1 alternatively if f r j uj 1 f 2 stochastic rule for each line j there is a function j such that if f rj uj 1 then j o r with probability j f rj uj in 10 the function j takes a fixed value p the two alternate forms of f 1 are not strictly equivalent but we assume that from a practical perspective they are essentially identical in any case the use of f 1 may not be desirable because it represents a strict numerical criterion that may be difficult to implement using standard numerical algorithms a possibility is to use for uj a slightly larger value than the true flow limit the constant j version of rule f 2 can be criticized in that we would expect that higher overloads cause outages with higher probabilities that is to say we would expect that j t 1 as t the problem of choosing and calibrating such functions j is significant both rules can additionally be criticized on the grounds that they are memory free from a realistic perspective a line that was highly overloaded in round r 1 should be more likely to be outaged in round r than one that was not to address this issue we assume that for any line j we are given a parameter 0 j 1 and define quantities f rj by f rj j f r j 1 j f r 1 j 3 with f 0 j set to the absolute value of the flow on j prior to the incident that initiates the cascade the f rj quantities are then used instead of f r j to obtain memory dependent versions of rules f 1 and f 2 a variation of 3 is f rj j f r j 1 j f r 1 j 4 the choice of the parameters j depends on the time scale of the cascade but for robustness purposes the j should be treated as noisy the memory dependent versions of rules f 1 and f 2 can still give rise to non smooth be havior and ill conditioning for example solving the power flow equations with different solvers can give rise to different cascades in order to lessen this difficulty we introduce an additional detail in choosing if a line becomes outaged rule 3 2 stochastic line outage parameters 0 r 1 for each round r notation refer to template 3 1 and equation 3 application for a line j in gr if uj f r j then j o r 5 if 1 r uj f rj uj then j or with probability 1 2 6 if f rj 1 r uj then j o r 7 3 the random choice in 6 is an indirect way to incorporate some of the poorly defined noise mentioned above additionally from a mathematical perspective it serves to smooth the cascade process typically we would have 1 2 indicating increasing uncertainty as the cascade progresses if r 0 for all r we obtain the pure deterministic rule rule 3 2 and extensions will be used later in our numerical experiments 4 control algorithms we consider control algorithms designed to stop the cascade after a fixed number of rounds with a maximum amount of total demand feasibly satisfied in developing such algorithms we assume that the cascade is initially slow paced so that significant computation is possible at time zero immediately after the initiating event while this may not be true for all cascades it was true in the case of the 2003 cascade in the northeast u s and canada 25 with arguably on the order of one hour elapsing between subsequent outages at the start thus we assume that the algorithm is computed at time zero with significant information available as to the state of the grid the algorithm will be applied as the cascade progresses with no further computation we assume as a control requirement that there is a final round r in the cascade at the end of which no lines can be overloaded the computation of an optimal schedule for demand shedding can be stated as mixed integer optimization problem see appendix a however it is not clear that such an approach is either computationally feasible or even desirable see the discussion in the appendix in this paper we will take a different outlook 4 1 adaptive control we focus on robust control algorithms that take as input limited real time observations on the state of the grid and which prescribe simple control actions such as distributed load shedding loss of demand our generic cascade template 3 1 is modified as follows template 4 1 cascade control input a power grid with graph g set g 1 g step 0 compute control algorithm for r 1 2 r 1 do comment controlled round r of the cascade 1 set f r vector of power flows in gr 2 observe state of grid from state estimation 3 apply control 4 set gr vector of resulting power flows in gr 5 set or set of lines of gr that become outaged in round r 6 set gr 1 gr or adjust loads and generation in gr termination round r if any island of gr has line overloads proportionally shed demand in that island until all line overloads are eliminated a athe criterion of stability inherent in the termination step may obviously be incomplete when using a more complete model of power flows than the linearized model in this template steps 0 2 and 3 are the only ones requiring controller actions the remaining steps are due to the physics of the grid or underlying low level automatic control steps as discussed above in this paper we assume that the cascade allows enough time for significant computation to 4 take place in step 0 one could conceive of a variant of the template where step 0 is carried out in advance of an initiating event thus obtaining a more general form of control however proceeding as in the template resolves an exponential number of potential outcomes likely obtaining a simpler and faster step 0 and a more effective control algorithm having applied the control in a given round a given pre existing component of gr is likely to experience a supply demand imbalance this condition must be removed which we assume can be undertaken through a low level control mechanism this is not a trivial assumption and if the imbalance is large the rebalancing may be deemed impossible with existing technology resulting in the loss of all demand in that component it is straightforward to implement such a maxi mum imbalance feature in the above template however for the sake of simplicity we will assume that we can always rebalance supply and demand by proportionally decreasing the output of each generator in a given component again other rebalancing mechanisms are possible giving rise to alternative versions of the template having effected the rebalancing a new set of power flows will be instantiated this is vector gr in step 4 steps 5 and 6 now follow as in the generic cascade template in step 6 some of the new components of gr 1 may have an excess of supply over demand or the other way around and again we make the assumption that this excess is removed through a proportional scaling mechanism to make the above template complete we need to describe the type of control we have in mind including what type of data observations it requires and what kind of control actions it specifies in terms of the last item many possibilities exist including modifying the structure of the grid by e g shutting down lines in which case the terminology in steps 4 6 is not strictly correct but in this paper we will focus on one type of action which is feasible in practice load shedding or the controlled loss of demand in the linearized dc power flow models we have variables of just two types power flows and phase angles in this paper we concentrate on control algorithms that observe real time quantities related to flows two such quantities are a the maximum overload maxj gr f rj uj b the maximum relative flow variability maxj gr 1 f rj f r 1 j f r 1 j where we assume the maximum is taken over the lines with f r 1 j 6 0 from a practical standpoint a relevant issue is how accurately a or b can be observed in real time and whether such measurements can be disseminated to all buses of the grid we assume that in early rounds of a cascade this is not a fundamentally difficult technological problem nevertheless for a given integer 0 we define the radius version of either a or b in which each bus of the grid is expected to perform the measurement over all links within hops in the current topology note that even if is large we are still constraining the measurement performed by a bus v to take place in the same component as v we will discuss this topic in greater depth below putting aside this issue we propose an affine control policy where at each round r r each demand bus v independently adjusts its demand by making use of a precomputed triple crv b r v s r v of parameters 5 procedure 4 2 affine control input a power grid with graph g post initiating event set g 1 g 0 compute triples crv b r v s r v for each r r and v for r 1 2 r 1 do comment controlled round r of the cascade 1 set f r vector of power flows in gr and drv the demand of any bus v 2 for any demand bus v let rv be its data observation apply control if rv c r v reset the demand of v to min 1 brv s r v c r rv drv 3 adjust generator outputs in each component of gr so as to match demand 4 set or set of lines of gr that become outaged as a result of the flows instantiated in step 4 5 set gr 1 gr or adjust demands and supplies in gr round r for any component k of gr set rk min 1 maxj k frj uj if rk 1 then any bus v of k resets its demand to d r v r k in procedure 4 2 round r handles cascade termination under the linearized power flow the rescaling guarantees that no line overloads will exist note that step 0 requires the computation of 3 r 1 d parameters where d is the number of demand buses special cases of the control are 1 time or bus independent control for any demand bus v crv b r v s r v cv bv sv for all 1 r r and some triple cv bv sv or for every demand bus v crv brv srv cr br sr for each 1 r r for a certain triple cr br sr 2 time dependent componentwise control this is a control such that for any given component k of gr crv b r v s r v equals a fixed triple c r k b r k s r k for every v k 3 segmented control let 1 2 h be a partition of the demand buses then we insist that for any round r crv b r v s r v takes a common value for all demand buses in a given set i an example of type 3 is that where the i are quantiles of the demand distribution the resulting control is fair in that demands of similar magnitudes are reduced by similar fractions controls of type 2 in the case of the deterministic outage rule f 1 can be explicitly described a priori in polynomial space this follows because in any fixed round r gr will have at most n components and these depend solely on the structure of the control on rounds up to r 1 thus in total at most rn distinct triples crk b r k s r k need to be specified our primary focus are on algorithms and implementations for the most general version time and bus dependent controls of our approach using the outage rule 5 7 with memory this is given in section 6 1 in section 6 2 we will discuss a special case where the optimal control can be efficiently computed 5 first set of experiments to motivate our overall approach we first present experimental results using special simple cases of the control the objective of these experiments is to expose first the fact that in cases of severe contingencies the application of control so as to immediately stop a cascade may be myopic and could result in very suboptimal results in other words it may pay off to allow some lines to become outaged however this clashes with the intuitive notion that postponing action to much later in the cascade results in increasing uncertainty because from the perspective of an agent at the start of the cascade the later stages of the cascade should be more uncertain we want to measure the 6 impact of uncertainty in the timing of control and to contrast it with the goal of avoiding myopic immediate action as described above 5 0 1 the data in these experiments we used a snapshot of the u s eastern interconnect with approximately 15000 buses 23000 lines 2000 generators and 6000 load buses the snapshot includes generator output levels demands and line parameters approximately 5000 of the line flow limits were zero likely indicating a data error or missing data the minimum nonzero line flow value was 3 10 2 when the flow limit of a line j was equal to zero we proceeded as follows where f 0 j is the initial power flow value on line j if f 0 j 10 6 we reset the flow limit to 1 f 0 j where 0 2 otherwise we reset the flow limit to 10 4 a very small number of lines had positive and large capacity but nevertheless the f 0 j values were close or identical to the line flow limits in which case we increased the line flow limit by 25 the reader may wonder about the impact of these numerical choices based on our limited testing with different choices of and the impact is very minor in terms of the same holds for unless we choose much values on the order of 102 and even then it is more a matter of degree than structure in the cascades we will describe below approximately 250 of the lines had negative reactance values while there are valid reasons for the use of negative reactances in the experiments below we assumed data error and replaced each negative value by its absolute value 5 0 2 methodology in all the experiments the same approach was employed first we interdicted the grid according to a synthetic contingency then we computed our affine control and finally we studied the behavior of this control to obtain contingencies we used the following methodology which removes a a set of k random high power flow lines from the grid while preserving connectivity here k is a given small integer and as before m is the number of lines 1 a spanning tree t is computed 2 let f denote the power flow vector corresponding to the given demands and generator outputs renumber so that f 1 f 1 f m 3 let 0 1 run steps a and b initialized with s until stopping in b for j 1 m a if line j t then with probability reset s s j b if s k stop 4 the set s of lines is removed from the network producing network g in our cascade template we used values of k ranging from 1 to 50 and for we used values ranging from 1 to 5 5 0 3 the experiments we considered a case with k 2 two lines removed and r 20 rounds in the computation of the moving averages of line overloads eq 3 we used 0 9 first we consider the pure deterministic case of line outages that is to say we use line outage rule 3 2 with r 0 for all r if no control is applied then at the end of round of round 20 the yield percentage of demand still being served is 2 47 the cascade is characterized by extremely 7 high line overloads see table 1 we will discuss implications of this below at the start of round 1 in fact the maximum line overload is 40 96 indicating that likely several lines with low flow limits are overloaded we computed the best control where i crv b r v 1 for all v and r ii srv 0 for all v and 10 r thus no control is applied after round 10 iii for each 1 r 10 either srv 0 005 for all v or srv 0 for all v thus we simply want to decide when to apply a control of a very simple form further we are restricted to applying control in the first half of the cascade this is done as protection against uncertainty in the later rounds of the cascade the rationale for the numerical values in iii is that 1 0 005 1 40 0 80 that is to say the application of this control in round 1 will only shed 20 of the demand we want to stress that the experiments in this section do not amount to a rigorous attempt at optimizing control in fact the control obtained through i iii is only near optimal instead we are trying to provide an example of the difference between an adequate control and the no control option and the questions that arise from the comparison in particular the amount 0 005 was arrived at through a simple grid search process table 1 cascade evolutions no control c 20 r o i y o i y 1 40 96 86 1 100 40 96 86 1 100 2 8 60 187 8 99 8 60 165 8 96 3 55 51 365 20 98 61 74 303 17 96 4 67 14 481 70 95 66 63 408 44 94 5 94 61 692 149 93 131 08 492 94 93 6 115 53 403 220 91 112 58 416 146 90 7 66 12 336 333 89 99 62 326 191 78 8 47 83 247 414 87 60 95 227 248 77 9 7 16 160 457 85 32 50 72 279 76 10 7 06 245 542 84 9 50 43 292 76 11 37 55 195 606 83 45 28 35 303 76 12 13 04 98 646 82 11 60 10 306 76 13 22 61 128 688 82 3 88 6 310 75 14 10 64 107 715 81 1 46 4 312 75 15 5 03 64 721 81 1 34 1 312 75 16 84 67 72 743 80 1 13 1 312 75 17 32 15 52 756 80 1 38 2 312 75 18 6 50 43 763 80 1 26 1 312 75 19 9 97 85 812 80 0 99 0 312 75 20 32 34 39 812 2 0 99 0 312 75 in any case the optimal control that satisfies conditions i iii and which we shall refer to as c 20 for future reference attains a termination yield of 75 2 picks rounds 2 and 7 to apply control note that since the maximum line overload is high in round 1 c 20 allows some lines to become outaged in round 1 this point is further elaborated in table 1 where r indicates round and for each round indicates maximum line overload at the start of the round o is the number of lines outaged during the round i is the number of islands at the end of the round and y is the rounded percentage of demand being delivered end of the round we stress that we count all islands 8 even those that consist of a single bus with no demand and when computing the maximum line overload we consider all lines no matter how minor discussion we see that initially both cascades have extremely high line overloads many line outages and large amounts of islanding however under c 20 after line 11 the overages are signifi cantly smaller and rapidly decreasing and after round 8 the number of new outages and islands is also much smaller and decreasing both in spite of the fact that control is last applied in round 7 thus effectively the cascade has been stabilized under c 20 long before the end of the time horizon the reader might wonder about the rapid decrease of yield from 80 to 2 in the no control case this is due to the termination feature in our cascades that requires all line overloads to be eliminated by the end of the last round since the no control cascade has very high maximum overload 32 34 at the start of round 20 the termination rule forces a drastic reduction in yield nevertheless in the no control case the combination of comparatively high yield up to round 4 high number of line outages large line overloads and large amount of islanding suggest the possibility that many of the outages involve unimportant lines and likewise with many of the islands though of course a 22 yield loss should indicate a severe contingency one wonders if somehow the no control option might be attractive if enough time i e rounds were available table 2 further evolution of no control cascade from table 1 r 25 28 29 30 31 32 33 34 o 21 63 2 00 5 70 2 50 2 38 1 35 1 07 0 99 y 79 78 78 78 78 78 78 78 to investigate these possibilities we extended the no control cascade table 2 shows the results for selected rounds we see that the no control approach finally yields stability by round 34 attaining yield 78 this is slightly better but very close to what c 20 obtained in 20 rounds and furthermore control action under c 20 was restricted to rounds 1 10 nevertheless the no control approach experiences significant line overloads as late as round 32 by maintaining high overloads into very late rounds the no control strategy becomes more exposed to the unavoidable uncertainty that should be taken into account when modeling cascades and which we have up to now ignored we model noise by means of fault outage rule 3 2 in the following set of tests we assume that r 0 01 0 05 br 10 c 8 possibly noise should be increasing at a faster rate than the above formula stipulates perhaps exponentially however the control considered in table 1 as well as the no control approach are both exposed to significant amounts of noise after round 10 more so in the no control case we would thus expect that under rule 8 the no control approach will perform much more poorly to test these hypothesis we ran 1000 simulations of cascades under rule 8 for the no control case and for control using c 20 the results are summarized as follows using c 20 the average yield is 42 90 and the standard deviation of yield is 27 47 whereas using no control the average yield is 7 96 and the standard deviation is 9 33 in other words c 20 proves much more robust than the no control strategy which is not surprising given the structure of rule 8 a question that arises as a result is whether c 20 is in some sense optimally robust one way to investigate this question is to investigate controls that are less exposed to uncertainty by restricting them to a shorter timeline i e by enforcing termination before round 20 for t 10 15 25 we compute an optimal control required to terminate by round t and otherwise subject to rules i iii that is crv b r v 1 for all v and r s r v 0 for all v and 10 r and for each 1 r 10 either srv 0 005 for all v or srv 0 for all v we name these controls c 10 c 15 and c 25 respectively 9 table 3 presents the comparisons between all the options we have considered in this table dety is the yield in the deterministic case r 0 for all r maxy and miny are the maximum and minimum yields in all the simulations resp avey is the average yield and stddy is the standard deviation of yield table 3 robustness comparison 1000 runs using stochastic outage rule 3 2 with noise as in 8 option dety maxy miny avey stddy c 10 37 49 39 05 0 00 11 81 11 84 c 15 72 44 71 85 0 00 33 94 22 51 c 20 75 19 76 30 1 17 41 90 27 47 c 25 77 23 42 34 1 38 11 99 10 97 no control 77 75 36 04 0 00 7 96 9 33 control c 20 emerges as superior over c 15 and c 10 this can be explained as follows even though c 15 and c 10 are significantly less exposed to risk than c 20 they are also restricted to operating and terminating during a stage of the cascade characterized by extremely high line overloads control c 20 by being able to operate over 20 rounds has more time while also avoiding the large uncertainty rounds 20 and higher for this reason c 20 is also superior to c 25 their averages are separated by more than one standard deviation one common feature that emerges in controls c 10 c 15 c 20 and c 25 not shown in the table is that no control is taken in round 1 and control is taken in round 2 and in the cases of c 10 c 15 and c 20 rounds 5 or 7 we stress that 8 is one categorization of noise using a different formula the outcome could be different say c 15 could prove best however the outlook we are taking here is that by computing a robust control with respect to some rule such as 8 we obtain a control that remains robust though possibly not optimally so even if the model for uncertainty were to be somewhat changed and in any case computing a control which is is somewhat robust should be better than completely ignoring uncertainty to explore these issues we study the following model r 0 01 0 005 r 9 which can be considered a smoothed version of 8 under this model both c 15 and c 20 are exposed to more noise than c 10 and more noise than under rule 8 consider table 4 we see that c 20 table 4 robustness comparison 1000 runs using stochastic outage rule 3 2 with noise as in 9 option dety maxy miny avey stddy c 10 37 49 38 93 0 00 7 54 9 55 c 15 72 44 63 94 3 41 28 02 17 94 c 20 75 19 73 04 0 00 32 24 21 30 c 25 77 23 54 62 0 25 16 84 12 66 no control 77 75 18 86 0 00 5 11 5 28 still appears superior to the other controls though c 15 is almost as good the above experiments do not amount to a full optimal robust control computation in section 8 1 we will return to these experiments from a stochastic optimization perspective 6 optimization methods given a control vector c b s denote by r c b s the final demand at termination of the r round cascade controlled by c b s our goal is to maximize r c b s over all controls this is 10 a nonconcave in fact very combinatorial maximization problem 7 22 it is very large e g if r 10 the c b s vector has more than 180000 variables in the case of the eastern interconnect it is also important to incorporate stochastics in principle the deterministic case of our problem could be tackled using mixed integer pro gramming techniques and the stochastic version using stochastic programming 21 of course one could choose a different formulation of the cascade control problem than the one we chose using a different kind of control for example but any formulation will have to deal with the combination of combinatorics in the network dynamics multistage behavior stochastics and very large size in our opinion this combination places the problem outside the capabilities of current optimization methodology even in the deterministic case we remind the reader that we envision our control as being computed in real time and we might only have one hour or less to do so another point to stress is that nonconcavity in a maximization problem leads to non monotone behavior in our case just because a small change in control leads to an improvement does not imply that a larger change will result in greater improvement 6 1 first order methods for the general case here we describe a procedure to compute a control given by triples crv b r v s r v for each demand bus v and each round r and using a control law as in step 2 of algorithm 4 2 we will assume a semi random outage rule as in 5 7 with memory as in 3 as previously the goal is to compute a control that will maximize the expectation of the amount of demand being served by the end of round r which as before we denote by r c b s we stress that the control parameters we use are state independent this is a design feature toward this goal we will use an algorithm based on the following template procedure 6 1 first order algorithm input a control vector c b s for k 1 2 do 1 estimate g r c b s 2 choose step size 0 and update control to c b s gc gb gs 3 if is small enough stop this is a common first order steepest ascent method in the deterministic case step 1 should be interpreted as a an approximate rule since r is not differentiable our stochastic outage rule 3 2 does smooth out the expectation the vices of procedure 6 1 are well known even if r were smooth its nonconcavity implies that the steepest ascent method may not converge to a global optimum and even if r were smooth and concave steepest ascent may zigzag or stall see 22 in summary procedure 6 1 should be viewed as a local search method with which to explore the neighborhood of a solution finally in our setting the procedure could prove expensive since each evaluation of r including in the estimation of r through finite differences requires a cascade simulation each round of which requires two power flow computations in our setup on the positive side however the procedure is flexible enough to handle at increased compu tational cost important features such as more realistic ac power flow models or more complete renditions of low level controls in the operation of a power grid essentially procedure 6 1 is an example of simulation based optimization i e it only needs to have a black box that computes the function r an active research field that considers optimization under such assumptions is that of derivative free optimization see 13 and related methods that incorporate second order information 26 in our estimation these methodologies may not scale well to problems of the size we consider in forthcoming work we will experiment on adaptations of these methodologies to our problem when we consider a model that includes stochastics the first order method can be viewed as a stochastic gradients algorithm see 24 19 an alternative methodology is provided by bundle 11 methods in the stochastic gradients approach a fixed sample path of the appropriate random variables is chosen in advance of each gradient and step length computation in section 8 we will further discuss this approach whether we use the stochastic setting or not we cannot completely rely on procedure 6 1 as the sole optimization engine to repeat the above the resulting algorithm would both be too slow and likely to get trapped in local maxima to help avoid these difficulties we rely on several heuristics described later in the next section we describe a special case of the optimal control problem that can be efficiently solved 6 2 the optimal scaling problem in this section we describe an algorithm that computes an optimal time dependent componentwise control under outage rule f 1 without memory either version of rule f 1 can be used for simplicity of language we will use the first for brevity we will refer to this as the simple scaling setting our algorithm computes an optimal control in time o mr 1 r 1 where as before m is the number of lines remark 6 2 consider an optimal control let 1 r r and let k be a component of gr under the optimal control then at round r we will scale all demands in k by a common multiplier 0 rk 1 defined as in procedure 4 2 clearly the control can be equivalently defined by the values rk 1 rather than the triples c r k b r k s r k and we will use this convention below notation 6 3 let g be a graph and let be a supply demand vector on g we denote by f g the unique feasible flow vector on g when is the supply demand vector see remark 2 1 in what follows we assume that we have a given supply demand vector let r be the number of rounds for the cascade our problem is to compute a control that maximizes the total demand satisfied after r rounds assuming that at the start of round 1 is the supply demand vector we will solve this as a special case of a family of problems definition 6 4 for t 0 real denote by r g t the final total demand resulting from applying an optimal control in an r round cascade on graph g where the initial supply demand vector is t we will show that r g t is a nondecreasing piecewise linear function of t with at most rn pieces remark 6 5 let be a supply demand vector on graph g let t 0 then f g t tf g lemma 6 6 let be a supply demand vector suppose g is connected then 1 g t is a nondecreasing piecewise linear function of t with two pieces proof note that since r 1 only steps 1 and 2 in algorithm 4 2 will be executed further writing f f g 1 when running 4 2 starting with the initial supply demand vector t we will have f 1 tf in step 1 and writing maxj f j uj we have that maxj f 1 j uj t denoting by d the sum of demands implied by we have as per our cascade termination criterion that the final total demand at the end of r 1 rounds will equal td if t 1 and 10 t t d 1 d otherwise 11 now we turn to the general case with r 1 we assume without loss of generality that g 1 is connected let f f g 1 definition 6 7 a critical point is a real 0 such that for some line j f j uj 12 recall that we assume uj 0 for all j thus let 0 1 2 p be the set of all distinct critical points here 0 p m write 0 0 and p 1 definition 6 8 for 1 i p let f i j a h f j uj now assume that the initial supply demand vector is t with t 0 and let 0 1 1 be the optimal multiplier used to scale demands in round 1 see remark 6 2 write q argmax h h t 12 thus t q 1 and so 1 t q 1 we stress that these relationships remain valid in the boundary cases q 0 and q p notation 6 9 let the index i be such that 1 t i 1 i note that in step 3 of round 1 of algorithm 4 2 we will scale all demands by 1 and since we assume g 1 is connected in step 4 we will also scale all supplies by 1 thus for any h i 1 and any line j f h we have that after step 4 the absolute value of the flow on j is 1 t f j h f j uj 13 and consequently j becomes outaged in round 1 on the other hand for any line j h i 1 f h the absolute value of the flow on j immediately after step 4 is 1 t f j i f j uj 14 and so j does not become outaged in round 1 in summary the set of outaged lines is h i 1 f h in other words we obtain the same network g 2 g 1 i 1 h 1 f h for every t with 1 t i 1 i notation 6 10 for an index j write k j set of components of g 1 jh 1 f h let h k i 1 then prior to step 6 of round 1 the supply demand vector for h is precisely the restriction of 1 t to the buses of h and when we adjust supplies and demands in step 6 we will proceed as follows where we use notation as in section 2 if s d h 1 t s s g h 1 t s then for each demand bus s d h we will reset its demand to r 1 t s where r s g h 1 t s s d h 1 t s s g h s s d h s and we will leave all supplies in h unchanged likewise if s d h t 1 s s g h 1 t s then the supply at each bus s g h will be reset to r 1 t s where r s d h s s g h s but we will leave all demands in h unchanged note that in either case in round 2 component h will have a supply demand vector of the form 1 t h where h is a supply demand vector thus an optimal control on h on rounds 2 r will yield a final total demand r 1 h 1 t h 15 which inductively is a nondecreasing function of 1 t and therefore is largest when 1 min 1 i t 16 13 case 1 suppose i q as noted above by definition 12 of q we have that i q t thus the expression in 15 is maximized when 1 i t and we obtain final r round demand equal to h k i 1 r 1 h i h 17 which is independent of t case 2 here q i and so i q 1 by definition of q and 1 1 thus 15 is maximized by setting 1 1 the final demand equals h k q r 1 h t h 18 in summary we have r g t max max 1 i q h k i 1 r 1 h i h h k q r 1 h t h 19 theorem 6 11 i r g t is nondecreasing piecewise linear with at most mr 1 r 1 o mmax 1 r 2 breakpoints ii the optimal choice for 1 is 1 1 or 1 k t for some k proof i by induction on r starting from lemma 6 6 for the general step consider the above discussion which assumes that 1 t i 1 i then if case 1 above holds we have that r g t is constant and if case 2 holds then equation 19 applies the form of 19 guarantees that inductively r g t is nondecreasing piecewise linear to analyze the number of breakpoints in r g assume first that r 2 consider the effect of removing one at a time the lines of ph 1 f h prior to its removal each line j has both ends in the same component k the removal either creates two new components if j is a bridge of k or creates a new component which differs from k in that line j is not included thus the removal process can be represented as a binary tree whose leaves correspond to the components of g 1 ph 1 f h i e the members of k p since these are disjoint there are at most n of them since in a binary tree the number of degree three vertices is at most the number of leaves we conclude that ph 1 k h m n 2 m 2 furthermore let h be a component in ph 1 k h define h min j h k j and h max j h k j by lemma 6 6 it follows that 1 h will contribute at most one breakpoint to r g and that this breakpoint will occur for some t with 1 t h h the maximum in 19 shows that for each q one additional new breakpoint is created thus in total r g has at most o m breakpoints and the result is verified for r 2 in what follows we assume that r 3 suppose q 0 and thus i 1 since 1 t 1 it follows that no lines are outaged in round 1 i e g 2 g 1 g and in subsequent rounds no line will be overloaded thus in this case r g t td and there are no breakpoints for q 0 we proceed using 19 for each h k q inductively r 1 h has at most mr 2 h r 2 cm max 1 r 3 h 14 breakpoints where mh denotes the number of lines in h and c 0 is a constant so 19 implies that subject to i q 1 the number of breakpoints in rg is at most 1 h k q mr 2 h r 2 cm max 1 r 3 h 1 m qh 1 f h r 2 r 2 c m qh 1 f h max 1 r 3 1 m q r 2 r 2 c m q max 1 r 3 20 since qh 1 f h h for each h k q summing this expression over all 1 q p we obtain that the total number of breakpoints is at most p p q 1 m q r 2 r 2 c m q max 1 r 3 m m q 1 m q r 2 r 2 c m q max 1 r 3 m 1 r 1 r 1 o m 1 r 2 m c m q 1 m q max 1 r 3 21 for r 3 the last three terms in 21 are o m and we are done as desired for r 3 the last term in 21 equals c m 1 r 2 r 2 o mr 3 22 and again we conclude as desired for c large enough ii this follows from the discussion leading to eq 19 part ii of theorem 6 11 illustrates a weakness of the simple scaling approach when applying an optimal control at least one line becomes fully loaded at each round such a strategy is likely non robust we plan to address this issue in upcoming work using the stochastic outage f 2 and computing an appropriate optimal control despite the apparent shortcomings of the method and of the simplicity of the proposed control the ability to compute a global optimum in polynomial time for fixed r is a significant asset especially as a starting point for the simulation based methods for the general problem that are proposed below in forthcoming work we will implement an appropriate version of the above algorithm an relevant question is whether the worst case bound in theorem 6 11 is attained using realistic data 7 the algorithm our algorithm implements procedure 6 1 to implement an affine control as in template 4 2 repeated here for convenience the control specifies for each round r of the cascade and each demand bus v a triple crv b r v s r v at round r r of the cascade each demand bus v observes the maximum line load rv in the component that v currently belongs to then where d r v denotes the current value of the demand at v if rv c r v demand at v is reset to min 1 b r v s r v c r v r v drv 23 the normal case of such a control is that where brv c r v 1 and s r v 0 which decreases demands in proportion to the maximum overload however cases with crv 6 1 delayed or proactive control 15 can prove optimal setting brv 1 can result in nonsmooth fixed penalty controls finally setting srv 0 though counterintuitive can prove optimal when non monotone behavior occurs in order to initiate the gradient search method we rely on grid search a standard enumerative idea grid search here we fix crv b r v 1 for all r and v and s r v 0 for all v and all 2 r r thus the only remaining parameters are srv for all v and r 1 2 we restrict the search to two values s 1 and s 2 and insist that for all v and 1 r 2 we have srv s r in our current imple mentation this two dimensional search in turn is carried out one parameter at a time as follows let 1 be the maximum line overload observed in the no control cascade during round 1 as suming 1 1 then we enumerate all choices for s 1 of the form s 1 1 008 i 1 1 for i 0 1 100 in other words this enumerates all controls where in round 1 we scale demands by a factor of 9 008 i for i 0 1 100 let s 11 s 1 2 be the two enumerated choices which produce the highest and second highest r value then we repeat the search in the interval s 11 s 1 2 by enumerating s 1 s 11 i s 1 2 s 1 1 100 for i 0 1 100 the value that produces that highest r value is our final choice for s 1 we fix this value and now carry out the same type of search for s 2 we will see below that grid search can produce very good control vectors but which in general can be improved sometimes significantly by widening the search one can use the control computed by grid search to start the general gradient search however in high dimensional cases even general gradient search itself can be quite slow as each gradient estimation step could prove very slow this will not be the case if enough parallel computing resources are available however and we have found an additional step to be useful segmented search as introduced in section 4 1 consider a fixed partition 1 2 h of the demand buses we search using the first order method for triples of the form c ri b r i s r i for each 1 r r and 1 i h so as to obtain the control where for each 1 r r and each demand bus v crv b r v s r v c r i b r i s r i if v i in our implementation the i are demand quantiles that is to say if l is the number of demand buses then 1 contains the bh lc buses with largest demand 2 contains the next bh lc buses with largest demand and so on the advantage of this approach is that it considerably reduces the dimensionality of the problem even if h is chosen relatively large such as h 100 in fact the segmented first order method runs quite fast and the approach in 26 might also be practicable further a segmented control is arguably fair in that it specifies to some degree that similar buses are bound by similar control laws though we stress that when applying the control 23 the actual demand reduction can be very different for two buses in the same segment but in different components in the first set of experiments we have conducted we have chosen h 50 and we fix b ri 1 for 1 r r and 1 i h thus altogether we have 2 h r 1 100 r 1 variables still large but much more manageable than full gradient search in the experiments below we forgo full gradient search however it would be straightforward to follow up segmented search with full gradient search 7 1 implementation details the parallel implementation of our algorithm relies on the familiar master worker paradigm each worker performs computations of the function r c b s for a given control c b s whereas the master carries out the gradient search algorithm in the experiments we report on here we use the linear power flow model linear programs are solved using cplex 12 0 18 and gurobi 3 0 15 these solvers were used with all presolve options turned off this increased robustness further the flow component in the solution to the linearized power flow system 1 2 is invariant under scaling of the x vector we scaled all reactances so that the largest value was 100 also for solver robustness interprocess communication in our algorithm uses unix sockets the computations below were performed on three eight core i 7 machines with 48 gb of ram each 16 7 2 second set of experiments as before we use the eastern interconnect snapshot for our experiments synthetic contingencies were developed by removing k random highly loaded lines as in section 5 0 2 our first set of experiments shown in table 1 concern cascades with r 4 rounds when applying rule f 1 we used 0 55 as stated above the segmented search was performed using h 50 segments table 5 performance of algorithm on 4 round cascades k yield yield wallclock no control control sec 1 90 04 95 03 268 2 1 25 50 13 174 5 32 94 81 05 214 10 2 02 36 97 194 20 1 64 27 84 220 50 0 83 16 96 477 in this table the columns headed yield indicate the percentage of total initial demand satisfied at the end of the cascade without control and using the computed control and wallclock is the observed parallel running time of the method in each of these runs the total number of gradient steps was small typically smaller than 5 note that in the case k 1 the interdiction has limited effect but even so the control is able to recover additional demand in the case k 5 the demand loss in the no control case is substantial but so is the benefit of the control finally in the cases k 2 10 20 50 the network collapses but the control sill recovers a significant amount of demand more experiments of this type will be forthcoming in the next set of experiments we use the case k 50 in table 5 to investigate in more detail the behavior of the algorithm as r increases we used 0 5 for all these experiments note that keeping constant but increasing r effectively considers cascades that take longer from a real time perspective thereby giving more power to an agent applying control if instead we were to increase r while also decreasing thus giving more weight to history we would be able to model cascades that last for a fixed period of time but where the individual rounds encompass shorter spans of time table 6 reports on the experiments as before yield is the percentage of demand satisfied at the end of the cascade using no control the control obtained by grid search and the control obtained by segmented gradient search started at the control computed by grid search the two wallclock columns report in seconds the time used by grid and gradient search in the case of grid search we report the time spent on each of the two search steps i e over rounds 1 and 2 respectively the column labeled grad steps reports the number of gradient steps table 6 impact of increasing number of rounds on k 50 case from table 5 r yield yield yield wallclock wallclock grad no control grid gradient grid gradient steps 5 4 13 18 11 31 86 30 17 1340 7 6 2 02 23 01 25 86 26 14 657 6 7 2 25 25 10 25 98 33 15 434 3 8 0 78 29 27 46 97 18 43 3151 10 next we will comment on table 6 17 computational workload consider the case r 8 since we are using h 50 segments we have altogether 100 control variables cri and s r i per round r since there are 7 rounds during which we will apply control we have a total of 700 individual variables each partial derivative estimation requires two simula tions thus in total each gradient estimation entails 1400 cascade simulations per iteration the step size computations require 200 additional cascade simulations for a total of 1600 simulations per iteration of procedure 6 1 the case r 8 required 10 gradient iterations and thus in total 16000 simulations each 8 round simulation of the 15000 bus eastern interconnect and using one core of the i 7 cpu requires on average 4 5 cpu seconds this is primarily due to the two power flow computations per round and linear solver data structure cleanup at the end of the simulation and to a much lesser degree to graph algorithms used to identify islands thus in total the com putation of the r 8 case required approximately 72000 cpu seconds since we have 24 worker cores this translates to approximately 3000 wallclock seconds the balance of time with respect to the actual wallclock time in table 6 i e 151 seconds is due to inter process communication and networking delays and logging of statistics to disc by the master on a per simulation per core basis this amounts to 151 24 16000 0 22 seconds or roughly 5 as compared to 4 5 seconds total per simulation grid search vs gradient search in several cases gradient search significantly improves on the grid search solution this is especially noticeable in the r 8 case and we will examine this case in some detail first the grid search control we computed in this case uses c 1 b 1 s 1 1 1 0 00018 and c r b r s r 1 1 0 for r 2 effectively limiting control to the first round in contrast the gradient search control we computed applies control as late as round 7 which as we have 8 rounds in total is the last round for which we compute a control as per our control template 4 2 and within earlier rounds it applies different controls to different segments in particular in round 1 the gradient search control uses the control vector 0 95 1 0 0499 for segment 1 the highest demand segment as well as two other segments while for all other segments it uses 1 1 0 00018 and in round 7 it uses 1 1 1 0 05 for segment 2 and 0 95 1 0 05 for segment 3 while for all other segments it uses 1 1 0 other controls different from 1 1 0 are used in rounds 2 and 4 while on rounds 5 and 6 it uses 1 1 0 throughout table 7 controlled cascade evolutions grid search gradient search round faults comps yield faults comps yield 1 3 79 126 1 45 37 172 22 1629 32 60 72 2 33 49 32 1 45 37 97 44 1079 293 54 26 3 7 44 26 2 45 27 59 97 282 401 49 87 4 6 69 82 4 45 27 21 88 89 459 48 67 5 4 95 72 9 45 23 2 74 55 468 47 74 6 1 99 28 13 45 23 13 27 10 471 47 72 7 1 54 16 13 45 23 1 01 14 478 47 41 8 1 00 16 13 29 27 1 00 1 478 46 97 table 7 compares the cascade evolution under both controls here we report the value at the end of each round of the maximum line overload the number of components of the network and the yield faults is the number of line outages experienced during each round comparing the two evolutions we see that the gradient search control allows significantly more outages in initial rounds as well as much more islanding nevertheless the number of outages is nearly monoton ically decreasing under gradient search and by round 5 it is smaller than under grid search thus the gradient search control appears to be maintaining high yield while carefully allowing outages to take place during round 7 gradient search makes a large improvement on the maximum line 18 overload from 13 27 to 1 01 but without losing much yield this is evidence of yet more sacrificial line outages qualitative issues a comparison of the entry in table 6 for r 5 and those for r 6 7 might appear to indicate that the controls computed for r 6 and 7 are locally optimal because the control that achieves yield 31 86 for r 5 should be feasible for all r 5 while it is true that the controls in table 6 can all be improved upon the argument in the above paragraph is not quite correct refer to our cascade control template 4 1 the termination step constitutes a last recourse form of control if there are line overloads at the start of the last round loads are scaled so as to remove the overloads and in that case the cascade is considered terminated regardless of history and of particular of rule 3 we model termination this way on purpose so as to provide an agnostic termination criterion that does not depend on numerical parameters of our model in particular consider table 8 table 8 maximum line overload at end of each round for k 50 case from table 6 c 5 c 6 c 7 c 8 none 1 6 47 1 83 2 22 3 79 177 83 2 14 12 1 83 1 57 33 49 122 06 3 36 79 1 23 1 30 6 90 114 45 4 1 72 1 14 2 26 6 70 22 47 5 0 99 1 18 59 33 45 43 6 1 08 1 98 40 33 7 1 18 114 90 in this table the columns labeled ck for k 5 8 represent the controls in table 6 whereas none means no control the table shows for each round the maximum line overload at the end of that round for each control option we see that c 5 reaches the start of the termination round round 5 with maximum overload 1 7232 the current yield at the start of round 5 is 54 90 not shown in the table and most of the demand is in one island hence the termination step will scale demands by 1 1 7232 and yield will drop to 54 90 1 7232 31 86 as table 6 shows as per our rules this terminates the cascade although since 0 5 and because the end or round 3 maximum overload is very large the maximum history dependent line overload will be much larger than 1 732 it should be at least 0 5 36 79 18 40 hence control c 5 if implemented in a cascade with 6 or more rounds will not result in a stable state by the end of round 5 another point that emerges from table 8 is that c 5 and c 8 tend to maintain higher line overloads late into the cascade this is a severe cascade and having more time to apply control pays off but by doing so c 5 and c 8 are likely less robust rather than performing the same robustness analysis as in section 5 we will next consider the stability of the controls with respect to the parameter in eq 3 which in the above tests was set to 0 5 this is a delicate issue because the value of is related to the time duration of a round and thus the structure of an optimal control should depend on in other words how much time we have impacts what kind of control we can apply the question is how stable a control remains as is perturbed in table 9 we show the yields obtained by running the ck controls from table 6 using their respective numbers of rounds but using different values for we see that in terms of the deviation from the nominal case i e 0 5 c 6 and c 7 prove the most stable c 8 significantly less so and c 6 is very unstable it is still the case that c 8 remains best overall this is due to the severity of the cascade in figure 1 we consider a broader experiment along the same lines for this experiment we used a control intended for the r 8 k 50 case considered in previous sections and computed assuming 0 5 as per the memory dependent rule 3 for arc outages 19 table 9 stability of controls in table 6 as a function of c 5 c 6 c 7 c 8 0 45 1 49 25 05 24 52 27 10 0 46 1 49 25 33 24 52 25 31 0 47 28 49 25 33 24 52 25 31 0 48 28 47 25 33 24 52 26 08 0 49 28 47 25 33 24 52 28 56 0 50 31 86 25 86 25 98 37 72 0 51 21 99 25 86 25 98 34 11 0 52 20 99 25 86 25 98 35 94 0 53 20 99 25 86 25 98 32 75 0 54 20 99 25 86 25 98 32 75 0 55 20 99 25 86 25 98 31 83 figure 1 displays the actual yield as is changed away from 0 5 we note that yield is rel atively robust for larger than but close to 0 5 but not if is decreased we believe that this behavior is due to application of our deterministic control results on lines becoming 100 loaded several heuristics based on padding increasing or tightening reducing the flow limits uj suggest themselves however the greedy nature of deterministic controls will remain a fundamental difficulty section 8 discusses the computation of controls under stochastics 7 2 1 additional tests the next set of experiments address basic conjectures that arise in the context of the type of control that we consider it is best to stop the cascade in the first round i e to sufficiently reduce demands in the first round so as to eliminate all line overloads it is best to apply control in the first round only and ride out the cascade for the remaining rounds in fact it is a simple task to create small examples where both conjectures above are proved wrong instead we explore these questions using the eastern interconnect with a random interdiction of the type described above with k 50 three rounds and 1 no memory and thus we obtain outage rule f 1 the results of this experiments are as follows using no control after three rounds 0 63 of the demand is satisfied grid search produces a control with yield 45 46 starting from this control and using segmented search with 50 segments improves yield to 50 02 to gain a different perspective on this cascade consider table 10 which shows the distribution of line overloads at the start of the cascade table 10 distribution of line overloads d overload e 1505 58 48 32 22 19 11 7 6 5 4 3 2 count 1 1 2 1 2 1 1 2 2 4 6 18 181 where f 1 denotes the flow vector at the start of the cascade the table indicates the quantity of lines j whose rounded up overload d f 1 j uje equals a particular value thus 181 lines j 20 0 0 0 5 0 1 0 1 5 0 2 0 2 5 0 3 0 3 5 0 4 0 0 2 0 4 0 6 0 8 1 yield a l p h a yie ld a lp h a figure 1 yield as a function of alpha are such that 1 f 1 j uj 2 18 lines j are such that 2 f 1 j uj 3 and so on one line has overload greater than 1504 93 we will provide a more detailed analysis of this case in the near future however it is the case as may seem plausible from the table that in order to stop all overloads in round 1 a drastic reduction of demands is needed we will instead describe the behavior of the optimal control computed by grid search has c 1 v b 1 v s 1 v 300 7 1 0 0004 and c 2 v b 2 v s 2 v 1 26 1 0 62 thus in round 1 all demands will be scaled by a approximately factor of 1 0 0 0004 300 7 1504 93 0 51831 considering table 10 we see that in round 1 all lines included in the columns with overload greater than 2 will be outaged this is a total of 41 lines and in fact three more with overload close to 2 are outaged at the start of round 2 the maximum overload is approximately 1 36194 thus the control specifies that demands will be reduced by a factor of 1 0 0 62 1 26 1 36194 0 9368 this does not completely remove all overloads and an additional 4 lines become outaged finally at the start of round 3 the maximum overload is 1 067891 by the rules of our cascade model this overload is now removed by scaling down all demands altogether we obtain a yield of 0 51831 0 9368 1 067891 0 4547 as stated above 8 stochastic optimization to further motivate the need for stochastic modeling we consider the same setup as for the experi ment in figure 1 r 8 k 50 and 0 5 we simulated the behavior of the computed control 21 using the stochastic outage rule 5 7 repeated here for convenience we are given a parameter 0 1 if f is a flow vector then line j is not outaged if f j 1 uj it is outaged if if f j uj and is outaged with probability 1 2 if 1 uj f j uj for various values of the tolerance we simulated the cascade 10000 times for 0 03 little difference was observed with the nominal deterministic setting in that the average yield was close to the deterministic yield of 50 for 0 03 0 10 and 0 20 the results are displayed in figure 2 0 5 0 0 1 0 0 0 1 5 0 0 2 0 0 0 2 5 0 0 0 0 0 5 0 1 0 1 5 0 2 0 2 5 0 3 0 3 5 0 4 0 4 5 0 5 0 5 5 count y ie l d 3 p e rce n t 1 0 p e rce n t 2 0 p e rce n t figure 2 yield histogram under stochastic outages the figure shows for each value of the yield and for each of the three choices for how frequently that yield was observed note that for 0 03 the distribution is essentially trimodal this is typical behavior and it points to a small number of critical lines which in turn result in a small number of cascade trajectories being overwhelmingly likely for 0 20 yields close to zero are observed but significantly the average is positive in a stochastic setting the yield r c b s resulting from a control c b s is a random variable below we discuss different methodologies for computing a locally optimal stochastic control with the objective of maximizing the expectation e r other merit criteria are also of interest and 22 possibly better such as a linear combination of expectation and variance e r var r 0 or a sharpe ratio quantity e r var r the computational challenges inherent in any of these tasks are significant first as displayed in figure 2 yield variances can be extremely large from a theoretical perspective the number of samples needed to obtain reliable estimates become inordinately large additionally there are subtle difficulties due to the non monotonic behavior of power flow systems see 6 which is reminiscent of braess paradox 8 an example of this behavior is provide by our stochastic outage rule 3 2 note that under this rule a line is more likely to become outaged than under the deterministic rule i e when 1 r uj f rj uj the line may become outaged in the stochastic setting not so in the deterministic setting nevertheless one can produce cases where the deterministic yield of a control is smaller than a sample yield of the same control under rule 3 2 this phenomenon slows down convergence of our algorithms and makes algorithm calibration difficult 8 1 optimization methods through simulation in either the first order procedure 6 1 discussed above or in the grid search setting we obtain a counterpart valid for a stochastic setting by replacing each deterministic evaluation of a yield r c b s by an estimation of e r c b s this is the approach used in the next set of experiments which parallel those in section 5 for convenience we restate the setup for these tests first two random though adversarially chosen lines were removed from the grid next we compute the best control such that i crv b r v 1 for all v and r ii srv 0 for all v and 10 r thus no control is applied after round 10 iii for each 1 r 10 either srv 0 005 for all v or srv 0 for all v this was done in the deterministic setting while setting the maximum number of rounds r to 10 15 20 and 25 in section 5 we observed that the cascade is characterized by high line overloads during the initial rounds nevertheless if enough rounds are allowed 34 then without control the cascade stabilizes and produces approximately 78 yield and this was slightly superior to what was obtained by the controls we computed in summary this case provides a good contrast between the opposing need to wait out an initially severe cascade on the one hand with uncertainty growth as we increase the number of rounds using the framework of stochastic outage rule 3 2 with r 0 01 0 05 br 10 c 24 we observed that the deterministic 20 round control appeared superior in this section we will repeat these comparisons except that now we will compute controls of the form i iii that approximately maximize the expected yield we compute such controls by modifying our grid search we evaluate a control vector by simulating 20 cascades and computing the sample average yield this can be a somewhat coarse approximation because depending on the model for noise many more than 20 samples may be needed for an accurate answer since the variance of yield can be high for r 10 15 20 denote by kr the control computed by the algorithm table 11 shows the results of our experiments in the table for each r ave kr and std kr are the estimates of the average and standard of the yield of kr using n 20 and n 1000 samples finally ave cr and std cr are the 1000 sample average and standard deviation of yield of the deterministic controls c 20 c 15 c 10 computed in section 5 as in table 4 we see that the kr controls are uniformly superior to their cr counterparts sometimes by almost one standard deviation we observe that k 20 is superior to k 15 and much superior to k 10 this parallels observations made in section 5 23 table 11 stochastic grid search results in case from section 5 r ave kr std kr ave kr std kr ave cr std cr n 20 n 20 n 1000 n 1000 n 1000 n 1000 20 55 78 11 88 50 23 18 57 41 90 27 47 15 48 85 10 03 41 32 13 43 33 94 22 51 10 37 16 10 74 28 65 15 13 7 54 9 55 8 2 stochastic gradients the stochastic gradients method is a well known approach for solving optimization problems with uncertainty because of the nonconcave nature of the yield maximization problem in our case it will amount to a local search method furthermore there are some difficulties that are caused by the nonsmoothness in our models we will only outline here how we are approaching these difficulties the core step in the stochastic gradients approach is to randomly sample a cascade and keeping the cascade fixed to compute the impact on yield of infinitesimally small changes in the control parameters this is followed by a line search to optimize the step size this basic step is repeated a difficulty that we encounter when we attempt to make this outline more specific is that yield is not a differentiable function of the control parameters for several reasons the main one being the stochastic outage protocol 3 2 which while smoother than a completely deterministic rule is not smooth enough due to its abrupt transition between stochastic and deterministic regimes we modify rule 3 2 so that the probability of a line will outage is always strictly positive and strictly smaller than 1 however when the overload is larger than 1 the outaging probability will be very close to 1 and when the overload is significantly less than 1 the outaging probability while positive will be very small to this effect consider a function f r 0 1 with f 0 0 and f x 1 as x where the convergence is very rapid an example is f x 1 e mx for large m 0 likewise consider a function g 0 1 0 1 with g 0 1 and g x 0 as x 1 and again with rapid convergence an example is g x e mx for large m 0 having chosen f and g we modify outage rule 3 2 as follows at round r and given a tolerance 0 r 1 line j is outaged with probability 1 2 g 1 f rj 1 r if f rj 1 r uj 1 2 if 1 r uj f rj uj 1 2 1 f f rj uj 1 if uj f rj 25 in other words if f rj uj the outage probability is very large but is bounded strictly away from 1 and if f rj 1 r uj the outage probability is very small but remains strictly positive by choosing f and g appropriately we obtain an outage model that is arbitrarily close to rule 3 2 another source of nonsmoothness in our models is the general form our control law in step 2 of procedure 4 2 however it is easy to see that the law can be approximated arbitrarily closely using a smooth control the computation of the stochastic gradient of the yield function at a given control vector c b s can now be described first we sample a random cascade under the control c b s and 24 outaging lines using rule 25 this produces a particular sequence of lines that become outaged i e at round r a certain set sr of lines is outaged for r 1 2 r 1 next we compute the change in yield that results when we perturb the control by a vector c b s with infinitesimally small entries while still assuming that set sr is the set of lines outaged at round r for each r this is a deterministic computation rule 25 guarantees that the given cascade structure retains positive probability this computation gives us the stochastic gradient however at this point we need to deal with the final reason that the yield function is not smooth and this is the demand supply adjustment in step 3 of our generic cascade template 3 1 or in step 6 of the cascade control template 4 1 if at round r under control c b s a certain component k has equal demand and supply then no adjustment takes place however even a small change in the control that results in shedding less demand by round r will not result in an increase of yield whereas the opposite change in control will possibly result in a decrease in yield thus in essence a left derivative is different from the right derivative and moreover this is not a probability zero event nevertheless it is still possible to adjust the stochastic gradients framework so as to recover a valid first order method the resulting approach is related to the classical frank wolfe method 3 in forthcoming work we will report on experiments with this approach 9 upcoming work our forthcoming work will focus on three areas stochastics or robustness in particular concerning the optimal scaling problem in section 6 2 an investigation of game theoretic aspects of the type of control we study and the use of ac power flow models with regards to the last point a recent paper of lavaei and low 20 may yield a robust solver for ac power flow systems under severe contingencies even though the work in 20 relies on semi definite programming in fact one of the algorithms can be restated as a second order conic program which may be more efficient acknowledgment we would like to thank ian dobson and ian hiskens for fruitful discussions and for making the eastern interconnect data available to us references 1 r k ahuja t l magnanti and j b orlin network flows theory algorithms and applications prentice hall nj 1993 2 g andersson modelling and analysis of electric power systems lecture 227 0526 00 power systems laboratory eth zu rich march 2004 download from http www eeh ee ethz ch uploads tx ethstudies modelling hs 08 script 02 pdf 3 d bertsekas nonlinear programming athena scientific 2003 4 a bergen and v vittal power systems analysis prentice hall 1999 5 d bienstock and s mattia using mixed integer programming to solve power grid blackout problems discrete optimization 4 2007 115 141 6 d bienstock and a verma the n k problem in power grids new models formulations and numerical experiments siam j opt 20 2010 2352 2380 7 s boyd and l vandenberghe convex optimization cambridge university press 25 8 d braess u ber ein paradox der verkerhsplannung unternehmenstorchung vol 12 1968 258 268 9 b a carreras v e lynch i dobson d e newman critical points and transitions in an electric power transmission model for cascading failure blackouts chaos vol 12 no 4 2002 985 994 10 b a carreras v e lynch d e newman i dobson blackout mitigation assessment in power transmission systems 36 th hawaii international conference on system sciences hawaii 2003 11 b a carreras v e lynch i dobson d e newman complex dynamics of blackouts in power transmission systems chaos vol 14 no 3 september 2004 643 652 12 b a carreras d e newman i dobson a b poole evidence for self organized criticality in electric power system blackouts ieee transactions on circuits and systems i vol 51 no 9 sept 2004 1733 1740 13 a r conn k scheinberg and l n vicente introduction to derivative free optimization mps siam series on optimization philadephia 2009 14 v goel and i e grossmann a class of stochastic programs with decision dependent uncer tainty mathematical programming 108 2006 355 394 15 gurobi optimization houston tx 16 d f hobbs m h rothkopf r p o neill and h p chao eds the next generation of electric power unit commitment models kluwer academic publishers 2001 17 the ieee reliability test system 1996 ieee trans power syst 14 1999 1010 1020 18 ibm ilog incline village nv 19 h j kushner and d s clark stochastic approximation methods for constrained and uncon strained systems springer verlag berlin 1978 20 j lavaei and s low zero duality gap in optimal power flow problem manuscript 2010 21 j t linderoth and s j wright decomposition algorithms for stochastic programming on a computational grid computational optimization and applications vol 24 2003 207 250 22 d g luenberger linear and nonlinear programming addison wesley 1984 23 a pinar j meza v donde and b lesieutre optimization strategies for the vulnerability analysis of the electric power grid siam journal on optimization 20 2009 1786 1810 24 h robbins and s monro on a stochastic approximation method annals of mathematical statistics 22 1951 400 407 25 final report on the august 14 2003 blackout in the united states and canada causes and recommendations u s canada power system outage task force april 5 2004 download from https reports energy gov 26 a wa chter and l t biegler on the implementation of an interior point filter line search algorithm for large scale nonlinear programming mathematical programming 106 2006 25 57 26 a appendix formulations for the optimal demand shedding problem we will first describe mixed integer programming formulation for computing an optimal schedule for demand shedding under deterministic line outages in the formulation below our variables have the following interpretations f rj is the flow on line j during round r and r j r j is the positive resp negative part of f rj ri is the phase of bus i during round r for a demand bus i dri indicates its demand during round r for a generator bus i sri indicates its supply during round r for a line j the variable yrj takes value 1 if arc j becomes outaged during round r and it takes value 0 otherwise for a line j the 0 1 variable prj takes value 1 if f r j 0 likewise n r j takes value 1 if f r j 0 for a demand bus i we indicate by the constant d i its demand at the start of the cascade let d denote the sum of all such quantities d i the formulation is as follows 27 max i d dri subject to j i f rj j i f rj sri i g dri i d 0 otherwise 1 r r 26 f rj r j r j j a and 1 r r 27 rj d p r j r j d n r j j a and 1 r r 28 prj n r j 1 r 1 h 1 yhj j a and 1 r r 29 rj r j uj d y r j j a and 1 r r 30 rj r j ujy r j j a and 1 r r 1 31 rj r j uj j a 32 ri r j xjf r j mj r 1 h 1 yhj j a 33 0 sri s i i g 0 d r i d i i d 34 prj n r ij y r j 0 or 1 j a and 1 r r 35 0 rj 0 r j j a and 1 r r 36 in this formulation 26 is a flow balance constraint it specifies that during round r each generator i outputs sri units of flow and similarly with demand buses constraints 27 29 together with the fact that prj and n r j are 0 1 variables guarantee that r j r j is the positive resp negative part of f rj and that furthermore f r j 0 if line j was outaged at a round prior to r constraint 30 guarantees that if yrj 0 then f r j uj and 31 guarantees that if y r j 1 then f r j uj thus we obtain a mix of the two alternative versions of rule f 1 constraint 32 indicates the desired termination condition in round r we note that 33 involves an absolute value but is easily replaced by two standard linear inequalities the quantity mj is assumed to be a large enough quantity see 5 for a related discussion other formulations are possible and in particular it is easy to enforce additional rules constrain ing how demand can be shed the formulation can also be adapted to use the memory dependent outage models 3 or 4 by adapting constraints 30 and 31 one can model the stochastic rule f 2 obtaining a mixed integer stochastic program the underlying uncertainty is primarily of an endogenous nature see 14 a 0 1 discussion the above problem even in its simplest deterministic form is likely quite nontrivial constraints 30 and 31 are essential in modeling the outaging of lines similar constraints are used in for mulations for the classical n k problem see 5 6 and contribute to make the problem very difficult note that we would need to handle cases with n 104 m 2 104 and r 2 28 a larger concern involves the fact that the optimal solution is likely to entail very complex control strategies that may be difficult to implement all the approaches we discussed above including the stochastic programming versions of the formulation are likely to specify very precise actions in each round and scenario which may be problematic in practice in what likely would be a very noisy environment nevertheless the study of the formulation may still prove a very worthwhile exercise one that could highlight underlying weaknesses of the models and hidden vulnerabilities in the operation of the grid 29